head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.05.17.15.37.41;	author fsaz;	state dead;
branches;
next	1.1;

1.1
date	2005.11.28.14.44.05;	author fsaz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Borrando
@
text
@/*
 * Created on 18-mar-2005
 *
 * DeployTreeCellRender.java
 *
 */
package es.aeat.eett.infoRubik.deploy;

import java.awt.Component;

import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

import com.tonbeller.jpivot.olap.model.Level;
import com.tonbeller.jpivot.olap.model.Member;

import es.aeat.eett.rubik.core.cell.RubikCell;

/**
 * @@author f00992
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class DeployTreeCellRender extends DefaultTreeCellRenderer{
    protected static ImageIcon iconRoot= null;
    protected static ImageIcon iconLevel= null;
    protected static ImageIcon iconMember= null;

	DeployTreeCellRender() {
		super();
		if(iconRoot==null){
		    iconRoot= new ImageIcon(this.getClass().getResource("icons/th_showqualified.gif"));
			iconLevel= new ImageIcon(this.getClass().getResource("icons/lrun_obj.gif"));
			iconMember= new ImageIcon(this.getClass().getResource("icons/public_co.gif"));
		}
	}
	public Component getTreeCellRendererComponent(JTree tree, Object value,
	        boolean sel,  boolean expanded, boolean leaf, int row, boolean hasFocus) {

	    super.getTreeCellRendererComponent( tree,  value,  sel, expanded,
		         leaf,  row,  hasFocus) ;
    	if( !(((DefaultMutableTreeNode)value).getUserObject() instanceof RubikCell)){
            setIcon(iconRoot);
    	}else{
	    	RubikCell c=(RubikCell) ((DefaultMutableTreeNode)value).getUserObject();
	    	if(c.getCellType()==RubikCell.FALSECELL){
	    	    setIcon(iconMember);
	    	}else 	if(c.getDisplayable() instanceof Level){
	            setIcon(iconLevel);
	    	}else if(c.getDisplayable() instanceof Member){
	            setIcon(iconMember);
	    	}
    	}


	    return this;
	}

}
@


1.1
log
@*** empty log message ***
@
text
@@

