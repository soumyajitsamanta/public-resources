head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.05.17.15.40.41;	author fsaz;	state dead;
branches;
next	1.1;

1.1
date	2005.11.28.15.39.46;	author fsaz;	state Exp;
branches;
next	;


desc
@@


1.2
log
@borrando viejos
@
text
@/*
 * Created on 01-may-2005
 *
 * Reports.java
 *
 */
package es.aeat.eett.infoRubik.reports;

import java.io.File;
import java.io.FileFilter;
import java.util.ResourceBundle;

/**
 * @@author f00992
 */
class Reports {// extends ArrayList {
    private static final ResourceBundle localizationResources =
        ResourceBundle.getBundle("es.aeat.eett.infoRubik.reports.locale.LocalizationBundle");
    private static final String CAPTION=localizationResources.getString("Reports");

    private Reports(){
    }

    public static ReportMutableTreeNode loadReports() throws Exception{
        ReportMutableTreeNode nRoot=new ReportMutableTreeNode(CAPTION);
        new Reports().loadReports(nRoot);
        return nRoot;
    }
    private void loadReports(ReportMutableTreeNode nRoot) throws Exception{
        File fDirReports=ConfiResports.getInstance().getFileReportsSpace();
        File[] fReports=fDirReports.listFiles(
                new FileFilter() {
                    public boolean accept(File fileToBeFiltered) {
                        return fileToBeFiltered.isDirectory();
                    }
                }
            );
        for (int i=0; i<fReports.length; i++){
            try {
                Report report=new Report(fReports[i]);
                //nRoot.setUserObject(report);
                nRoot.add(report.getMutableTreeNode());
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
    
}
@


1.1
log
@*** empty log message ***
@
text
@@

