head	1.23;
access;
symbols;
locks; strict;
comment	@# @;


1.23
date	2003.02.26.13.21.32;	author jiri_schmid;	state dead;
branches;
next	1.22;

1.22
date	2003.02.25.16.46.01;	author jiri_schmid;	state Exp;
branches;
next	1.21;

1.21
date	2003.02.25.09.18.00;	author jiri_schmid;	state Exp;
branches;
next	1.20;

1.20
date	2003.02.24.15.31.05;	author jiri_schmid;	state Exp;
branches;
next	1.19;

1.19
date	2003.02.20.14.44.49;	author jiri_schmid;	state Exp;
branches;
next	1.18;

1.18
date	2003.02.17.16.16.52;	author jiri_schmid;	state Exp;
branches;
next	1.17;

1.17
date	2003.02.12.15.01.45;	author jiri_schmid;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.11.16.06.51;	author jiri_schmid;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.06.12.57.51;	author jiri_schmid;	state Exp;
branches;
next	1.14;

1.14
date	2003.01.23.16.42.59;	author spanhel;	state Exp;
branches;
next	1.13;

1.13
date	2003.01.23.09.47.23;	author spanhel;	state Exp;
branches;
next	1.12;

1.12
date	2003.01.18.12.23.06;	author michald;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.16.17.20.19;	author spanhel;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.03.11.22.03;	author michald;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.26.16.28.58;	author spanhel;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.26.12.44.36;	author spanhel;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.21.16.27.15;	author spanhel;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.01.11.49.38;	author spanhel;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.01.14.56.11;	author spanhel;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.30.11.53.29;	author spanhel;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.29.09.08.20;	author michald;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.17.34.11;	author spanhel;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.25.17.45.57;	author spanhel;	state Exp;
branches;
next	;


desc
@@


1.23
log
@huge javascript optimalization, also files moved to directory js
@
text
@var saveQ = "Data changed !!!\nDo you want to Save them before editing another item?";
var infQ = "Data send to server.";
var NodeID = -1;

function find_node(tt) {
  var k;
  var item;
  for (k=0;k<tt.length;k++) {
     item = tt[k].split("|");
     if (item[0]==GID) return item;    
  }
}

function clear_name(tt) {
  tt.value=""
}

function reload_btn() {
  alert("hidden field:" + " | grid_name_h=" + document.report.grid_name_h.value + " | filter_name_h=" + document.report.filter_name_h.value +" + format_name_h= " + document.report.format_name_h.value);
}
// -------------- END report.html -------------------------
function change_style(Target) {
document.getElementById("css_graph").src=Target;
if (Target == "format_css.html") 
 {document.getElementById("in_css").checked="true";}
 else {document.getElementById("in_graph").checked="true";}
}

// ********************** COOKIE ******************************

function exprr(tt,str) {
  tt.value=tt.value + str;
  if (str != ")") drop_textarea(tt); //drop_textarea defined in dad.js
  tt.focus();
}  

function reset_tree_name() { //change the name a title after saving changes in the viewed tree on the left side
 var id = parent.frames["tree_iframe"].document.getElementById("active_id").value;
 var change = parent.frames["tree_iframe"].document.getElementById(id);
 EID = document.getElementsByName("name");
 change.innerHTML = "&nbsp;&nbsp;" + EID[0].value + "&nbsp;&nbsp;";
 EID = document.getElementsByName("desc");
 change.title = EID[0].value;
}

function check_quit(){
if ( parent.frames["drop_iframe"].document.getElementById("changed").value == "1")
 if (confirm(saveQ)) {parent.frames["drop_iframe"].document.getElementsByName("Action")[0].click();
  alert(infQ);
  }
}
@


1.22
log
@removed unused functions from attr.js, language fixies in tabs.cgi and linked files
@
text
@@


1.21
log
@added checking of unsaved-changed item, when traying to start editing another one
@
text
@a4 68
function click_report(text_field, num, tree) { 
// num identify which arrow run this function
  if (GID!="-1") {
    var item = find_node(tree)
    if (num==1) {
       if (item[3]=="Fi") {
         text_field.filter.value=item[2];
         text_field.filter_h.value=item[0];
       }
       else {
         text_field.filter.value="Please, select FILTER.";
	 text_field.filter_h.value="";
      }	 
    }
    
    if (num==2) {
      if (item[3]=="G") {	
        text_field.grid.value=item[2];
        text_field.grid_h.value=item[0];
      }
      else  {
        text_field.grid.value="Please, select GRID.";
	text_field.grid_h.value="";
      }	
    }
    if (num==3) {
      if (item[3]!="D") {
        text_field.format.value=item[2];
        text_field.format_h.value=item[0];
      }
      else {
        text_field.format.value = "Please, select FORMAT.";
        text_field.format_h.value="";
      }             	
    }
    
    if (num==4) {
      if (item[3]=="M") {
        text_field.metric.value=item[2];
        text_field.metric_h.value=item[0];
      }	
      else  {
        text_field.metric_.value="Please, select METRIC.";
	text_field.metric_h.value="";
      }	
    }
  }
  else {
    if (num==1) {
      text_field.filter.value="Please, select FILTER.";
      text_field.filter_h.value="";
    }  
    if (num==2) {
      text_field.grid.value="Please, select GRID.";
      text_field.grid_h.value="";
    }  
    if (num==3) {
      text_field.format.value="Please, select FORMAT.";
      text_field.format_h.value="";
    } 
    if (num==4) {
      text_field.metric.value="Please, select METRIC.";
      text_field.metric_h.value="";
    }  
  }  
}


a13 13

function reset_all_report() {
  document.report.filter.value="";
  document.report.filter_h.value="";
  document.report.grid.value="";
  document.report.grid_h.value="";
  document.report.format.value="";
  document.report.format_h.value="";
  
  document.report.report.value="";
  document.report.report_des.value="";
}

a28 34
function reset_all_folder() {
  document.folder.folder_name.value="";
  document.folder.folder_des.value="";
}




function exist_id(id_name) {
  var items=document.cookie.split(";");
  var k  
  for (k=0;k<items.length;k++) {
    var aa = items[k].split("=");
    if (aa[1]==null && items.length==1) {return false;}  // first run no cookies
    else {
    var ita;
    var itb;    
    // white spaceses
    ita=aa[0];
    itb=aa[1];
    if (aa[0].charAt(0)==" ") ita = aa[0].slice(1,aa[0].length);
    if (aa[0].charAt(aa[0].length-1)==" ") ita = aa[0].slice(0,aa[0].length-1);
    if (aa[1].charAt(1)==" ") itb = aa[1].slice(1,aa[1].length);
    if (aa[1].charAt(aa[1].length-1)==" ") itb = aa[1].slice(0,aa[1].length-1);
    if (ita==id_name) {
      NodeId=itb;
      return true;
    }  
  }

}
  return false;
}

a29 23
// setting and getting id into/from cookie
function set_param() {
  if (exist_id('id')) {
    GlobID = NodeID;
    clear_tree1(Tree);
    clear_tree1(Tree1);
  }
}

function get_param() {
  document.cookie="id="+GlobID;
}
// ********************** COOKIE ******************************

function set_act_it(tree) {
  if (document.act_it.act_it.text == undefined) {
   	  var id = get_cookie("fid");
	  var it_name = id2name(id,tree);	
	  document.act_it.act_it.text=it_name;
	 // document.act_it.act_it.value=it_name;	  
  }
}

a35 26


// put active item from tree into expression textarea
function fill_expr(to, what) {  	  
  var obj = what.split("|"); //obj[0] - name; obj[1] - type; obj[2] - parent
  var tmp = to.value;
  var pos = tmp.search(/\(\)/);
  var item;
  if (obj[1]=="Af") item=obj[2]+"."+obj[0]
  else item = obj[0]; 
  to.value = tmp.substring(0,pos+1) + "["+ item +"]"+ tmp.substring(pos+1,tmp.length);	
}

// put active item from tree into field
function fill_field(to, what, type_set) {  	  
  // to - field where is actual item from tree inputed,
  // what - name and type of actual item (e.g. "Customer|Attribut" - "name|typ")
  // type_set - set of possible object that can be inserted into "to" (e.g. "|Fa|Fi|A|M|R .....")   
  var obj = what.split("|"); //obj[0] - name; obj[1] - type ; obj[2] - parent
  //if is correct put what into field to
  var item;
  if (obj[1]=="Af") item=obj[2]+"."+obj[0]
  else item = obj[0];
  if (type_set.indexOf(obj[1])!=-1) to.value = item
  else window.status="\"" + item + "\" can not be inserted into this field !!!"; 
}
@


1.20
log
@new bugs just found fixed, some visual changes
@
text
@d1 2
d4 1
d208 7
@


1.19
log
@save item bug and delete item bug fixed
@
text
@d198 1
a198 21
/*function fill_expr(tt, tree) {
  if (GID!="-1") {
    var item = find_node(tree);
    if ((item[3]!="D") && (item[3]!="R")) {
      var node_id="ndf";
      var nn = item[0].indexOf('.')	
      if (nn!=-1) node_id = item[0].substring(0,nn);      			
      var aux = find_item(tree,node_id);       
      var txt=item[2];
      if (aux!=-1) txt= aux[2]+"."+item[2];           
      var tmp = tt.value;
      var pos = tmp.search(/\(\)/);
      tt.value = tmp.substring(0,pos+1) + "["+txt +"]"+ tmp.substring(pos+1,tmp.length);	
    }  
  }
}*/

// if you change name of object, new name have to be changed 
// also in tree

function reset_tree_name() {
d200 1
d202 3
a204 1
 parent.frames["tree_iframe"].document.getElementById(id).innerHTML = "&nbsp;&nbsp;" + EID[0].value + "&nbsp;&nbsp;";
@


1.18
log
@finally deleting of tree items is woking properly
@
text
@d218 4
a221 6
function save_new_name() {
  var id = get_cookie("id");
  //  alert("Aaa" + parent.frames[0].document.act_it.act_it.text);
  var new_item = parent.frames[0].document.act_it.act_it.text.split("|")
  parent.frames[0].document.getElementById(id).innerHTML = "&nbsp;&nbsp;" + document.filter.name.value + "&nbsp;&nbsp;";
  
@


1.17
log
@format_ed.pl, format.html, format_[css|graph].html fixed and tuned
@
text
@d161 1
a161 1
	  document.act_it.act_it.value=it_name;	  
@


1.16
log
@large rebuilding of format_ed.pl and linked files format[|_css|_graph].html,
@
text
@d102 3
a104 26
/*  var g = tt.getElementById('f_css');
  var gg = tt.getElementById('f_graph');
     
  if (tt.format.style[0].checked) { 
    g.style.border='1px';
    g.style.width='100%';
    g.style.height='400px';
  }  
  else {
    g.style.border='0px';
    g.style.width='0px';
    g.style.height='0px';
  }
  

  if (tt.format.style[1].checked) { 
    gg.style.border='1px';
    gg.style.width='100%';
    gg.style.height='400px';
  }  
  else {
    gg.style.border='0px';
    gg.style.width='0px';
    gg.style.height='0px';
  }
*/
@


1.15
log
@some visual and control improvments
@
text
@d100 3
a102 2
function change_style(tt) {
  var g = tt.getElementById('f_css');
d127 1
a127 1

@


1.14
log
@added object metric in grid_ed.pl
@
text
@d190 1
@


1.13
log
@removed ID used by Drag and Drop
@
text
@d180 1
a180 1
   	  var id = get_cookie("id");
d241 3
a243 2
  alert("10");
  parent.frames[0].document.getElementById(id).innerHTML = "new_name";
@


1.12
log
@edit_obj with drag/drop functionality
@
text
@d239 1
a239 1
function save_new_name(new_name) {
d241 2
a242 1
  parent.frames[0].document.getElementById(id).innerHTML = "AAA";
@


1.11
log
@change edit.cgi - tree and object edit desided into two iframes
@
text
@d235 9
@


1.10
log
@hard connection to test project in *_ed.pl wa removed
@
text
@a0 2
// $Id$

d177 11
d194 26
a219 1
function fill_expr(tt, tree) {
d234 1
a234 1
}
@


1.9
log
@format_ed.pl - grid & graph
@
text
@d1 2
@


1.8
log
@two types of format grid and graph
@
text
@d177 5
d193 3
a195 1
      tt.value+=" ["+txt +"]";
a197 1
  
a198 6

function exprr(tt,str) {
  tt.value=tt.value + str;
  tt.focus();
}  

@


1.7
log
@loading and saving data
@
text
@d100 29
d198 1
@


1.6
log
@added dynamic tree for edit html pages, created format_ed.pl (CSS), changed cookie ID (edit.cgi)
@
text
@d8 2
a9 2
         text_field.filter_name.value=item[2];
         text_field.filter_name_h.value=item[0];
d12 2
a13 2
         text_field.filter_name.value="Please, select FILTER.";
	 text_field.filter_name_h.value="";
d19 2
a20 2
        text_field.grid_name.value=item[2];
        text_field.grid_name_h.value=item[0];
d23 2
a24 2
        text_field.grid_name.value="Please, select GRID.";
	text_field.grid_name_h.value="";
d29 2
a30 2
        text_field.format_name.value=item[2];
        text_field.format_name_h.value=item[0];
d33 2
a34 2
        text_field.format_name.value = "Please, select FORMAT.";
        text_field.format_name_h.value="";
d40 2
a41 2
        text_field.metric_name.value=item[2];
        text_field.metric_name_h.value=item[0];
d44 2
a45 2
        text_field.metric_name.value="Please, select METRIC.";
	text_field.metric_name_h.value="";
d51 2
a52 2
      text_field.filter_name.value="Please, select FILTER.";
      text_field.filter_name_h.value="";
d55 2
a56 2
      text_field.grid_name.value="Please, select GRID.";
      text_field.grid_name_h.value="";
d59 2
a60 2
      text_field.format_name.value="Please, select FORMAT.";
      text_field.format_name_h.value="";
d63 2
a64 2
      text_field.metric_name.value="Please, select METRIC.";
      text_field.metric_name_h.value="";
d81 6
a86 6
  document.report.filter_name.value="";
  document.report.filter_name_h.value="";
  document.report.grid_name.value="";
  document.report.grid_name_h.value="";
  document.report.format_name.value="";
  document.report.format_name_h.value="";
d88 1
a88 1
  document.report.report_name.value="";
d134 2
d147 1
d151 10
a160 3
     var item = find_node(tree);
     if (tt.value=="") tt.value="["+item[2] +"]";
     else tt.value+=" ["+item[2] +"]";
d165 4
@


1.5
log
@tree added global ID node
@
text
@d154 1
@


1.4
log
@tree - string id
@
text
@d2 4
a5 4

function click_report(text_field,num) { 
  if (exist_id('id')) {
    var item = find_node(Tree)
d7 1
a7 1
       if (item[3]=="F") {
d23 2
a24 2
        text_field.grid_name.value="Please, select GRID."
	text_field.grid_name_h.value=""
d28 8
a35 2
       text_field.format_name.value=item[2];
       text_field.format_name_h.value=item[0];
d37 1
d44 2
a45 2
        text_field.metric_name.value="Please, select METRIC."
	text_field.metric_name_h.value=""
d75 1
a75 1
     if (item[0]==NodeId) return item;    
d132 21
@


1.3
log
@update of tabs structure
@
text
@a2 9

function fill_expr(tt) {
  if (exist_id('id')) {
     var item = find_node(Tree);
     tt.value+=" ["+item[2] +"] ";
  }
  
}

@


1.2
log
@html edit pages
@
text
@d3 9
@


1.1
log
@report.html + fixed tree errors
@
text
@d1 59
a59 2
function echo() {
  document.ffa.filter_name.value="sdfsfsdfdsf"
d62 8
a69 2
function clear_filter_name() {
  document.ffa.filter_name.value=""
d72 11
a82 2
function clear_grid_name() {
  document.ffb.grid_name.value=""
d85 40
a124 2
function clear_format_name() {
  document.ffc.filter_name.value=""
@

