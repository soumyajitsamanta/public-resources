head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2004.02.18.16.19.16;	author jiri_schmid;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.16.14.55.22;	author jiri_schmid;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.13.17.09.40;	author jiri_schmid;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.19.15.09.07;	author jiri_schmid;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.18.13.17.13;	author jiri_schmid;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.15.10.59.41;	author michald;	state Exp;
branches;
next	;


desc
@@


1.6
log
@rights implemented
@
text
@#-----------------------------------------------------
#  Demo User and Groups Plug-In
#-----------------------------------------------------
# $Id: USR_demo.pm,v 1.5 2004/02/16 14:55:22 jiri_schmid Exp $

# This package provides demo data for users and groups
# and shows basic impementation of USR Plug-In

package USR;

use strict;
use utf8;

my $version = '0.1';
my $copyright = '(C) Insight Strategy, a. s., 2003';

#---------------------------------------

sub about {                    
  return "Demo Users and Groups Plug-In v$version ($copyright)"  
}

#---------------------------------------

# Demo data
my $demoUsers = {
	'jiri' => { 'name' => 'Jiří Schmid' },
	'vladis' => { 'name' => 'Vladimír Vacula' },
	'vasek' => { 'name' => 'Vašek Dovrtěl' },
	'michald' => { 'name' => 'Michal Dovrtěl' },
	'martin' => { 'name' => 'Martin Špaňhel' },
	'test' => { 'name' => 'Test' },
	'TEST' => { 'name' => 'Test 2' },
};

my $demoGroups = {
	'stuff' => {
		'name' => {
			'cz' => 'personál',
			'en' => 'emploey',
			},
		'members' => ['test','vladis','martin','jiri','vladis'],
		'description' => {
			'cz' => 'makac',
			'en' => 'worker',
			}
		},
	'managers' => {
		'name' => {
			'cz' => 'manažeři',
			'en' => 'managers',
			},
		'members' => ['michald'],
		'description' => {
			'cz' => 'manažeři',
			'en' => 'managers',
			}
		},
	'Gadmin' => {
		'name' => {
			'cz' => 'admini',
			'en' => 'admins',
			},
		'members' => ['jiri'],
		}
};

#---------------------------------------

sub getUserList {
	return keys %{$demoUsers};
}

#---------------------------------------

sub getGroupList {
	return keys %{$demoGroups};
}

#---------------------------------------

sub getUserDetail {
	my $usr = shift;
	return $demoUsers->{$usr};
}

#---------------------------------------

sub getGroupMembers {	# should return list of users, in case system allows groups as member of groups, this function has to substitute it recursively
	my $grp = shift;
	return $demoGroups->{$grp}{members};
}

#---------------------------------------

sub getGroupDetail {	# should return list of users, in case system allows groups as member of groups, this function has to substitute it recursively
	my $grp = shift;
	return $demoGroups->{$grp};
}

#---------------------------------------

1

__END__


@


1.5
log
@security improvment for tabs
@
text
@d4 1
a4 1
# $Id: USR_demo.pm,v 1.4 2004/02/13 17:09:40 jiri_schmid Exp $
d33 1
@


1.4
log
@major tabs control implemented
@
text
@d4 1
a4 1
# $Id: USR_demo.pm,v 1.3 2003/08/19 15:09:07 jiri_schmid Exp $
d28 2
a29 1
	'vladis' => { 'name' => 'Vladislav Vacula' },
d41 1
a41 1
		'members' => ['test','vladis','martin','jiri'],
@


1.3
log
@ACL changes
@
text
@d4 1
a4 1
# $Id: USR_demo.pm,v 1.2 2003/08/18 13:17:13 jiri_schmid Exp $
d27 5
a31 6
	'admin' => { 'name' => 'Administrator' },
	'joe' => { 'name' => 'Joe X.' },
	'peggy' => { 'name' => 'Peggy Maxwell' },
	'sara' => { 'name' => 'Sarah Ross' },
	'bert' => { 'name' => 'Gilbert Smith' },
	'laura' => { 'name' => 'Laura Larson' },
d35 1
a35 1
	'clerks' => {
d37 2
a38 2
			'cz' => 'urednici',
			'en' => 'clerks',
d40 1
a40 1
		'members' => ['admin','sara','peggy','bert'],
d48 1
a48 1
			'cz' => 'manazeri',
d51 1
a51 1
		'members' => ['admin','joe','laura'],
d53 2
a54 2
			'cz' => 'malo makaci',
			'en' => 'low-workers',
d56 1
a56 1
		},		
d62 1
a62 1
		'members' => ['admin'],
@


1.2
log
@admin page reading rutines implemented
@
text
@d4 1
a4 1
# $Id: USR_demo.pm,v 1.1 2003/08/15 10:59:41 michald Exp $
d36 29
a64 3
	'clerks' => ['admin','sara','peggy','bert'],
	'managers' => ['admin','joe','laura'],
	'Gadmin' => ['admin'],
d89 7
@


1.1
log
@initial ACL implementation
@
text
@d4 1
a4 1
# $Id$
d38 1
a38 1
	'admin' => ['admin'],
@

