head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.02.24.10.21.34;	author jiri_schmid;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.05.08.53.47;	author jiri_schmid;	state Exp;
branches;
next	;


desc
@@


1.2
log
@prefer access and rights logic changed
@
text
@#!/usr/bin/perl
# $Id: derivated.cgi,v 1.1 2004/02/05 08:53:47 jiri_schmid Exp $

use strict;
my $run_mod_perl = defined(&Apache::RequestRec::BINMODE);	# are we running under mod_perl?
if ($run_mod_perl) { Apache::RequestRec::BINMODE(':utf8') } else { binmode STDOUT,':utf8' }

use CGI qw( :standard );
use CGI::Pretty;
use Encode;
require "const/Const.pm";
require "local/Local.pm";

# ---- init SOAP ---------
#-------------------------
my $load = 0;
if (!$load) {	# ensure require will be performed only once in case of mod_perl execution
	eval "use SOAP::Lite +autodispatch => 
		uri => 'Bear', 
		proxy => ['http://$Const::bearHost:$Const::bearPort/',
		options => {compress_threshold => $Const::compressThreshold}];
		1"
	or ( &Local::ErrorDie("ERROR in eval of \"use SOAP::Lite ...\".") );
	$load++;
}
my $q = new CGI;

# --- test SOAP connection ---
#-----------------------------
my $serverVerbName="SOAP Server http://$Const::bearHost:$Const::bearPort/";
if (! eval "SOAP::Lite->self->fault") {
	&Local::ErrorDie('ERROR: '.$serverVerbName.' not responding<br><form><input type="submit" name="Refresh" value="Refresh" /></form>');
}

# --- determine user and his preferences ---
#-------------------------------------------
my $user = $q->remote_user() ? $q->remote_user() : 'anonymous';
my $use_lang = ($q->param('Lang')) ? $q->param('Lang') : $Const::defaultLanguage;
my $project = ($q->param('Proj')) ? $q->param('Proj') : '';
my $use_enc = $Const::languages->{$use_lang}->{enc};
my $openIn = $q->param('Open');
my $width = $q->param('Width');
my $dropWidth = 100-$width;
my $class = $q->param('Content') ? "dynamics" : "dynamiclist";
my $all_params = "Lang=".$q->param('Lang')."&Cook=".$q->param('Cook')."&Open=".$q->param('Open')."&Proj=".$q->param('Proj')."&Width=".$q->param('Width')."&Skin=".$q->param('Skin');
# --- determine skin ---
#-----------------------
my $skinPath;
my $wb = $q->user_agent()=~/MSIE/ ? 'msie' : 'mozilla';
if ($q->param('Skin')) {	# takes it as param from index.cgi
	$skinPath = "skins/".$q->param('Skin');
} elsif ($q->param('skin')) {	# I've received parameter from myself after Save
	$skinPath = "$Const::wb_const->{$wb}{skinDir}/".$q->param('skin');
} else {
	$skinPath = "$Const::wb_const->{$wb}{skinDir}/default";	#let use default
}

# --- load message dictionary ---
#---------------------------------
require "lang/$use_lang.utf";

# --- print out html form ---
#----------------------------
print $q->header(-charset=>$use_enc);

print $q->start_html(
	-title=>"Derivate",
  	-lang=>$Const::languages->{$use_lang}->{lang},	#return language specification in format: language-country (it differs from param Lang)
	-encoding=>$use_enc,
	-head=>meta({ -http_equiv => 'Content-Type', -content => "text/html; charset=$use_enc" }),
	-style=>{-src=>"${skinPath}/css.css"},
	-script=>{-language=>'JAVASCRIPT', -src=>'js/collect.js'},
	-class=>"$class",
);

if ($q->param('Content')) {
} else {
print <<END;
<span class='nowrap'><img id='openClose' class='cursor' style='position:fixed; top:5px; right: 3px' src='$skinPath/img/leftArr.png' onclick='ocTree();' alt='OC'/></span>
<div class='view' id='content'><span class='list'>$Const::lang->{$use_lang}->{'Collect List'}:</span><br />
<input type='hidden' value='$skinPath' id='skin' />
<input type="hidden" value="$openIn" id='open_in' />
END
my $id = &Drop($q->param('Item'),$project,$user) if $q->param('Action') eq 'drop';

my $rprts = SOAP->GetDerivatedReports($user,$project,$use_lang);
foreach (sort {$rprts->{$a}{name} cmp $rprts->{$b}{name}} keys %{$rprts}) {
print <<END;
		<span>
			<img align='absbottom' class='cursor' src="$skinPath/img/delete.png" alt='Del' title="$Const::lang->{$use_lang}->{Delete}" onclick="Remove(this,'$rprts->{$_}{id}')"/>
			<a href='javascript:{}' onclick='runModifiedResult(\"$rprts->{$_}{id}\")'>&nbsp;$rprts->{$_}{name}&nbsp;($rprts->{$_}{modification})</a>
		</span>
		<br />
END
}
my @@hlp;
foreach my $key (keys %{$Const::local->{$use_lang}}) { push (@@hlp,"'$key':'$Const::local->{$use_lang}{$key}'") }
my $hlp = join(",",@@hlp);
print "</div><script type='text/javascript'>var params='$all_params'; var remove='$Const::lang->{$use_lang}->{Derivated_remove}';</script>";
}

print $q->end_html;

#---------------------------------------------------

sub Drop {
	my ($itemId,$pr,$user) = (shift,shift,shift); #project name
	my $success = SOAP->DropMData($pr,$itemId);
	if ($success) {
		return
	} else {
		SOAP->RemoveModifiedReport($pr,$itemId,$user);	# temporarily !!!
	}
}

#---------------------------------------------------
1
@


1.1
log
@derivated reports redesigned
@
text
@d2 1
a2 1
# $Id: collected.cgi,v 1.3 2004/01/29 13:33:33 jiri_schmid Exp $
d45 1
a45 1
my $all_params = "Lang=".$q->param('Lang')."&Cook=".$q->param('Cook')."&Open=".$q->param('Open')."&Proj=".$q->param('Proj')."&sqlA=".$q->param('sqlA')."&Width=".$q->param('Width')."&Skin=".$q->param('Skin');
@

