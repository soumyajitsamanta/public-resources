head	1.24;
access;
symbols;
locks; strict;
comment	@# @;


1.24
date	2004.04.27.14.44.32;	author vasekd;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.26.18.08.53;	author vasekd;	state Exp;
branches;
next	1.22;

1.22
date	2004.04.22.11.27.11;	author vacula;	state Exp;
branches;
next	1.21;

1.21
date	2004.04.19.16.39.20;	author vacula;	state Exp;
branches;
next	1.20;

1.20
date	2004.04.16.16.43.16;	author vacula;	state Exp;
branches;
next	1.19;

1.19
date	2004.04.14.12.21.33;	author jiri_schmid;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.13.12.42.37;	author michald;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.29.13.20.52;	author jiri_schmid;	state Exp;
branches;
next	1.16;

1.16
date	2003.12.09.15.58.45;	author jiri_schmid;	state Exp;
branches;
next	1.15;

1.15
date	2003.12.04.10.44.36;	author jiri_schmid;	state Exp;
branches;
next	1.14;

1.14
date	2003.11.28.13.03.22;	author jiri_schmid;	state Exp;
branches;
next	1.13;

1.13
date	2003.11.27.16.41.09;	author jiri_schmid;	state Exp;
branches;
next	1.12;

1.12
date	2003.11.25.16.44.56;	author jiri_schmid;	state Exp;
branches;
next	1.11;

1.11
date	2003.11.25.12.10.44;	author jiri_schmid;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.21.09.01.26;	author jiri_schmid;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.20.15.47.41;	author jiri_schmid;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.20.09.42.51;	author michald;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.12.12.44.27;	author jiri_schmid;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.11.15.05.51;	author vacula;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.10.06.36.00;	author michald;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.09.15.29.41;	author michald;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.06.09.56.50;	author jiri_schmid;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.04.15.19.00;	author jiri_schmid;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.31.12.47.56;	author jiri_schmid;	state Exp;
branches;
next	;


desc
@@


1.24
log
@fixed definition of fonts
@
text
@#!/usr/bin/perl
#-----------------------------------------------------
#  Bear Constan Definition
#-----------------------------------------------------
# $Id: Const.pm,v 1.23 2004/04/26 18:08:53 vasekd Exp $

package Const;

use utf8;

# global variables for mesages, will be set by reguire of lang/*.pm
our $lang;
our $RLang;
our $js;

# SOAP constants
our $bearHost = "localhost";
our $bearPort = "3000";
our $bearUser = "";
our $bearPasswd = "";
our $compressThreshold = 10000;	   # compression threshold for SOAP connection

# global constants
our $version = '0.01';
our $copyright = '(C) Insight Strategy, a. s., 2002';
our $made = 'mailto:info@@instrat.cz';	   # html header link
our $tabsLogo = '<I>Insight Strategy, a. s.</I>';

our $styleSheet = "base.css";;
our $descriptionRows = 6; 	   # rows of descriprion window
our $sqlRows = 10;	   # rows of editable sql window

# path definition
our $ldmPath = 'beard/mdata/';	# path to root of the LDM Images: Images are stored under $ldmPath/ProjectName/Ldm/
our $texture_dir = '/var/www/html/cache_texture_png';	   # cache texture is out of web authorization BEAR outstanding directory
our $css_dir	= 'CSS';
our $cache3DReport = 'html';	  # path to  cache for 3D reports
our $cache2DReport = 'html';	   # path to  cache for 2D reports
our $cacheReport = 'html';   # path to  cache for Grid reports
our $format2DReport = 'png'; # 2D reports graphics format
our $trueTypeFontPath = 'fonts'; #'/usr/X11R6/lib/X11/fonts/TTF';	   # path to TTF Fonts
our $fonts= {
 'serif' => "times",
 'sans-serif' => "arial",
 'monospace' => "georgia",
 'cursive' => "verdana",
 'fantasy' => "trebuc"};
our $graph2Dlogoicons = 'img/logo';

our $graph2Dmaps = 'const/maplists';	# directory for storing xml files with definition of maplist
our $graph2DmapsIcons = 'const/maplists/img'; # directory for icons of maplists
our $graph2DmapsDefault = 'mapaCR.xml'; 		# default map
our $graph2DdefaultFormat_map = 'map.xml'; # file which is defined implicit parameters for new graphs
our $graph2DformatIcons_map = 'const/format2D_map/img'; # icons for xml files
our $graph2Dformats_map = 'const/format2D_map'; # directory,which contains xml files which define parmeters of graph


our $graph2DdefaultFormat = 'bars.xml'; # file which is defined implicit parameters for new graphs
our $graph2DformatIcons = 'const/format2D/img'; # icons for xml files
our $graph2Dformats = 'const/format2D'; # directory,which contains xml files which define parmeters of graph
our $graph2DformatsTypes = ["bars","lines","points","area","pie","mixed"];

our $graph2DstyleIcons = 'img/graph';	# path to icons for graph styles
our $graph2Dstyles = ["area","bars","bars3d","hbars","lines","lines3d","linespoints","pie","pie3d","points","mixed"];	# graph styles

our $graph3Ddefinitions = 'vrml/data';
our $graph3Dicons = 'img/vrml';
our $graph3Dtypes = 'img/vrmltypes';
our $help = 'help/';
our $helpIndex = 'index.html';

our $defaultLanguage = 'en'; # default locale
our $languages = {
	cz=>{enc=>'UTF-8',lang=>'cs-CZ', 'view'=>'Český'},
	en=>{enc=>'UTF-8',lang=>'en-US', 'view'=>'English'},
};

our $MetricsIdent = {
	img=>"img/metric_group",
	nick=>'A',
	name=>'-METRICS-',		# identifier of multiple metrics placement in Grid Edit
	id=>'-METRICS-',
};

our $predefinedColors = [
	["255,255,255","229,229,229","204,204,204","178,178,178","153,153,153","127,127,127","102,102,102","67,67,67","33,33,33","0,0,0"],
	["255,0,0","229,0,0","204,0,0","178,0,0","153,0,0","127,0,0","102,0,0","76,0,0","51,0,0","25,0,0"],
	["0,255,0","0,229,0","0,204,0","0,178,0","0,153,0","0,127,0","0,102,0","0,76,0","0,51,0","0,25,0",],
	["0,0,255","0,0,229","0,0,204","0,0,178","0,0,153","0,0,127","0,0,102","0,0,76","0,0,51","0,0,25",],
	["255,255,0","229,229,0","204,204,0","178,178,0","153,153,0","127,127,0","102,102,0","76,76,0","51,51,0","25,25,0"],
	["255,0,255","229,0,229","204,0,204","178,0,178","153,0,153","127,0,127","102,0,102","76,0,76","51,0,51","25,0,25",],
	["0,255,255","0,229,229","0,204,204","0,178,178","0,153,153","0,127,127","0,102,102","0,76,76","0,51,51","0,25,25",],
];

our $predefinedFonts = 
	["serif","sans-serif","monospace","cursive","fantasy"]
;

our $wb_const;
$wb_const->{msie} = {
	skinDir=>'skins/msie',
	descriptionWidth=>35,	# width of descriprion window
	itemWidth=>46,		# width of droped itme input area
	itemWide=>28,		# width of textarea on admin page
	nameWidth=>36,		# width of name input area
	nameWide=>26,		# width of name input area
	sqlCols=>79,
	frameHeight=>48,
	iframeHeight=>'245px',
};
$wb_const->{mozilla} = {
	skinDir=>'skins/mozilla',
	descriptionWidth=>32,	# width of descriprion window
	itemWidth=>38,		# width of droped itme input area
	itemWide=>26,		# width of textarea on admin page
	nameWidth=>31,		# width of name input area
	nameWide=>23,		# width of name input area
	sqlCols=>73,
	frameHeight=>48,
	iframeHeight=>'245px',
};

our $myPath;
($myPath = $main::ENV{'SCRIPT_FILENAME'})=~s|^(.*/).*$|$1|;

our $run = {};
$run->{gridExport} = ['Portable Data Format (pdf)/pdf','Excel Sheet (xls)/xls','Word Document (doc)/doc','Power Point (ppt)/ppt','Plain Text File (txt)/txt','Extensible Markup Language (xml)/xml'];
$run->{graph2dExport} = ['Portable Data Format (pdf)/pdf','Excel Sheet (xls)/xls','Portable Network Graphic (png)/png','Plain Text File (txt)/txt','Extensible Markup Language (xml)/xml'];
$run->{sort} = ['A-Z/AZ','Z-A/ZA'];


1
@


1.23
log
@new format of table
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.22 2004/04/22 11:27:11 vacula Exp $
d42 6
a47 5
our $fonts->{serif} = "times";
our $fonts->{sans-serif} = "arial";
our $fonts->{monospace} = "georgia";
our $fonts->{cursive} = "verdana";
our $fonts->{fantasy} = "trebuc";
@


1.22
log
@changes in definition of font
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.21 2004/04/19 16:39:20 vacula Exp $
d36 1
d94 4
@


1.21
log
@added mixed type of graph2d
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.20 2004/04/16 16:43:16 vacula Exp $
d40 6
a45 1
our $trueTypeFontPath = '/var/www/html/bear/fonts'; #'/usr/X11R6/lib/X11/fonts/TTF';	   # path to TTF Fonts
d48 3
a50 3
our $graph2Dmaps = 'const/maplists';
our $graph2DmapsIcons = 'const/maplists/img';
our $graph2DmapsDefault = 'mapaCR.xml';
@


1.20
log
@changes for new interface
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.19 2004/04/14 12:21:33 jiri_schmid Exp $
d57 1
a57 1
our $graph2Dstyles = ["area","bars","bars3d","hbars","lines","lines3d","linespoints","pie","pie3d","points"];	# graph styles
@


1.19
log
@added help tab
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.18 2004/04/13 12:42:37 michald Exp $
d40 1
a40 3
our $trueTypeFontPath = '/usr/X11R6/lib/X11/fonts/TTF';	   # path to TTF Fonts
our $graph2Ddefinitions = 'const';
our $graph2Dicons = 'img/graph';
d42 17
@


1.18
log
@foundation for N:M relations
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.17 2004/01/29 13:20:52 jiri_schmid Exp $
d47 2
@


1.17
log
@collected tab implemented
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.16 2003/12/09 15:58:45 jiri_schmid Exp $
d34 1
a34 1
our $bearMData = 'beard/mdata/';
@


1.16
log
@drill on all items implemented
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.15 2003/12/04 10:44:36 jiri_schmid Exp $
d80 1
a80 1
	frameHeight=>52,
@


1.15
log
@visaul changes and improvments
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.14 2003/11/28 13:03:22 jiri_schmid Exp $
d58 1
@


1.14
log
@MD5 hashing implemented, sorting menus implemented etc...
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.13 2003/11/27 16:41:09 jiri_schmid Exp $
d55 1
a55 1
	img=>"img/tree/metric_group",
@


1.13
log
@something like drill implemeted
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.12 2003/11/25 16:44:56 jiri_schmid Exp $
d98 3
a100 3
$run->{gridExport} = ['pdf/Portable Data Format (pdf)','xls/Excel Sheet (xls)','doc/Word Document (doc)','ppt/Power Point (ppt)','txt/Plain Text File (txt)','xml/Extensible Markup Language (xml)'];
$run->{graph2dExport} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)','png','Portable Network Graphic (png)','txt','Plain Text File (txt)','xml','Extensible Markup Language (xml)'];
$run->{sort} = ['AZ/A-Z','ZA/Z-A'];
@


1.12
log
@txt and xml export implemented
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.11 2003/11/25 12:10:44 jiri_schmid Exp $
d98 1
a98 1
$run->{gridExport} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)','doc','Word Document (doc)','ppt','Power Point (ppt)','txt','Plain Text File (txt)','xml','Extensible Markup Language (xml)'];
d100 1
a100 1
$run->{sort} = ['AZ','A-Z','ZA','Z-A'];
@


1.11
log
@export rutines implemented for graph 2D
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.10 2003/11/21 09:01:26 jiri_schmid Exp $
d98 2
a99 2
$run->{gridExport} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)','doc','Word Document (doc)','ppt','Power Point (ppt)'];
$run->{graph2dExport} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)','png','Portable Network Graphic (png)'];
@


1.10
log
@pdf export works in czech now
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.9 2003/11/20 15:47:41 jiri_schmid Exp $
d98 2
a99 1
$run->{export} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)','doc','Word Document (doc)','ppt','Power Point (ppt)'];
@


1.9
log
@export 2 xls and pdf works (pdf is not fine)
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.8 2003/11/20 09:42:51 michald Exp $
d98 1
a98 1
$run->{export} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)'];
@


1.8
log
@fix of LDM, cleanup of some obsolete files
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.7 2003/11/12 12:44:27 jiri_schmid Exp $
d98 1
a98 1
$run->{export} = ['pdf','Portable Data Format (pdf)','xls','Excel Sheet (xls)','txt','Text (txt)'];
@


1.7
log
@ldm multiimages implemented
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.6 2003/11/11 15:05:51 vacula Exp $
a41 1
our $graph3Ddefinitions = 'vrml/data';
d44 1
@


1.6
log
@added definitions for 3D graph
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.4 2003/11/09 15:29:41 michald Exp $
d79 1
a79 1
	frameHeight=>63,
@


1.5
log
@map graph prototype
@
text
@d36 1
a36 1
our $cache3DReport = 'vrml/wrl';  # path to  cache for 3D reports
d41 2
a42 1
our $graph2Dtypes = 'const';
@


1.4
log
@some small fixes
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.3 2003/11/06 09:56:50 jiri_schmid Exp $
d41 1
a41 1
our $graph2Ddefinitions = 'const';
@


1.3
log
@ldm implemented over all projects
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.2 2003/11/04 15:19:00 jiri_schmid Exp $
d27 1
a27 1
our $tabsLogo = 'Insight Strategy, a. s.';
@


1.2
log
@save as - modperl fixies, code improvments
@
text
@d5 1
a5 1
# $Id: Const.pm,v 1.1 2003/10/31 12:47:56 jiri_schmid Exp $
d34 1
@


1.1
log
@mod perl rocks!
@
text
@d5 1
a5 1
# $Id: consts.def,v 1.70 2003/10/16 14:08:51 jiri_schmid Exp $
d34 3
a36 3
our $texture_dir = '/var/www/html/cache_texture_png';	   # cache texture is out of web authorization
our $cache3DReport = '/var/www/html/bear/vrml/wrl';  # path to  cache for 3D reports
our $cache2DReport = '/var/www/html/bear/html';	   # path to  cache for 2D reports
@

