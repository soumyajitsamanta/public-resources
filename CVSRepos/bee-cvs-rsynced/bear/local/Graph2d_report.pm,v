head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2004.05.03.16.22.40;	author michald;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.28.13.55.02;	author vacula;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.22.16.06.41;	author vacula;	state Exp;
branches;
next	;


desc
@@


1.3
log
@some fixes from Vlada
@
text
@

package Graph2d_report	;

use strict;

use Data::Dumper;
 
 
#--------------------------------------------------------------------------------------------------------------------------------------------
sub htmlHead {				# return html head of report 
	my $variables = shift;
	my $css = shift;
	my $htmlHead = "";
	
	if ( exists $variables->{export} ) {	#  print head for export format
		$htmlHead .= &Local::customHTMLHead(0,0,$variables->{useEnc},$Const::languages->{ $variables->{useLang} }->{lang},'Report Result');
	}
	else {
		$htmlHead .= &Local::customHTMLHead(0,0,$variables->{useEnc},$Const::languages->{ $variables->{useLang} }->{lang},'Report Result','right_menu',"<style>\@@import url('./CSS/$css.css');\@@import url('$variables->{skinPath}menu.css');</style>");
	}
	
	return $htmlHead;
}

#--------------------------------------------------------------------------------------------------------------------------------------

sub htmlBody {				# return html body of report 
	my $variables = shift;		# 
	my $report = shift;		# 
	my $htmlBody = "";
	
	if ( exists $variables->{export} ) {	# print html 3.2 for export function in HtmlDoc else print html 4
		my ($r,$g,$b) = split(/,/,$report->{bgcolor});
		my $bgcolor = GD::Graph::colour::rgb2hex($r,$g,$b);
		$htmlBody .= "<body bgcolor=\"$bgcolor\">";
	}
	else {
			my $all = "item_id=$variables->{orig_id}&Lang=$variables->{useLang}&Did=$variables->{id}&Skin=$variables->{skin}&Proj=$variables->{proj}";
			$htmlBody .= "
<body onload=\"init_menu()\" onclick=\"hideAllMenus()\" style=\"background-color: rgb($report->{bgcolor})\" >
<input type=\"hidden\" value=\"$variables->{orig_id}\" id=\"ID\" name=\"item_id\" />
<input type=\"hidden\" value=\"$variables->{id}\" id=\"DID\" name=\"derivated_id\" />
<input type=\"hidden\" value=\"$variables->{useLang}\" id=\"LANG\" name=\"lang\" />
<input type=\"hidden\" value=\"$all\" id=\"ALL\" />
<input type=\"hidden\" value=\"$variables->{skin}\" id=\"SKIN\" name=\"skin\" />
<div class=\"Menu\" id=\"userMenu\" style=\"display:block; position:absolute; top:0px; left:0px; visibility:hidden; z-index:5;\"  onmouseover=\"hideSubmenus()\"></div>
<div class=\"Menu\" id=\"userSubMenu\" style=\"display:block; position:absolute; top:0px; left:0px; visibility:hidden; z-index:6;\"></div>
<iframe width='1' height='1' frameborder='0' srolling='no' src='' style='display:none' id='EXPRT'></iframe>
";
	}
	
	return $htmlBody;
}

#--------------------------------------------------------------------------------------------------------------------------------------

sub htmlTableGraph {				## return complete html table with all parts in page of graph
use Encode;
	my $variables = shift;
	my $report = shift;
	my $style_o = shift;
	my $attributes = shift;
	my $img = shift;
	my $x_label = shift;
	my $table = "";
	my $exportAction = exists $variables->{export};
	my $x_label_html = str2htmltable($x_label,$style_o->{ax_X}{label_font},$style_o->{ax_X}{label_fontsize},$attributes,$exportAction);

	if ( $exportAction ) {
		$table .= "
<table  border=\"0\" width=\"$style_o->{base}->{width}\">
 <tr> 
      <td width=\"100%\" align=\"center\"> <font family=\"$style_o->{layout}{title_font}\" size=\"$style_o->{layout}{title_fontsize}\" color=\"$attributes->{textclr}\"> <b> $report->{lname} </b> </font></td> 
 </tr>
 <tr> 
     <td width=\"100%\" align=\"center\"> <font family=\"$style_o->{layout}{title_font}\" size=\"$style_o->{layout}{title_fontsize}\" color=\"$attributes->{textclr}\"> $report->{description} </font></td> 
 </tr>
 <tr> 
     <td> <img Src=\"$report->{id}-$variables->{useLang}.$Const::format2DReport\"> </td>
 </tr> 
 <tr> 
     <td align=\"$attributes->{x_label_position}\" >  $x_label_html </font> </td> 
 </tr>
</table>
			  ";
	}
	else {
		$table .= "
<table style=\"width:$style_o->{base}->{width};border:0;font-size:12\" >
 <tr> 
     <td style=\"font-family:$style_o->{layout}{title_font}; font-size:$style_o->{layout}{title_fontsize}; text-align:center;color:$attributes->{textclr};width=100%\"> <b>$report->{lname}</b> </td> 
 </tr>
 <tr> 
     <td style=\"font-family:$style_o->{layout}{title_font}; font-size:$style_o->{layout}{title_fontsize}; text-align:center;color:$attributes->{textclr};width=100%\"> $report->{description} </td>
 </tr>
 <tr> 
     <td style=\"text-align:center\">  $img  </td> 
 </tr> 
 <tr> 
     <td style=\"text-align:center\"> $x_label_html </td> 
 </tr>
</table>
			  ";
	}
	return $table;
}

#--------------------------------------------------------------------------------------------------------------------------------------

sub htmlTableMap {			## return complete html table with all parts in page of map
	my $variables = shift;
	my $report = shift;
	my $colors = shift;
	my $width = shift;
	my $height = shift;
	my $unfiled = shift;
	my $attributes_map_o = shift;

	my $exportAction = exists $variables->{export};
	my $map_legend = ( defined $colors ) ? map_legend( $exportAction, $colors, $report->{bgcolor}, $attributes_map_o, $variables ) : undef ;
	my $map_unfiled = map_unfiled( $exportAction, $unfiled, $report->{bgcolor}, $attributes_map_o, $variables );
	
	my $bottom_title = undef; # !!! not implemented yet title of graph can be under the image
	my ($right,$bottom,$align,$valign,$LL,$LR,$UL,$UR);
	if ( $attributes_map_o->{legend_placement}=~/^RT$|^RC$|^RB$/ ) {	
		$right = $map_legend;
		$bottom = $map_unfiled;
		if ( $attributes_map_o->{legend_placement}=~/^RT$/ ) {
			$valign = "top";
			$align = "center";
		}
		if ( $attributes_map_o->{legend_placement}=~/^RC$/ ) {
			$valign = "middle";
			$align = "center";
		}
		if ( $attributes_map_o->{legend_placement}=~/^RB$/ ) {
			$valign = "bottom";
			$align = "center";
		}
	}
	elsif ( $attributes_map_o->{legend_placement}=~/^BL$|^BC$|^BR$/ ) {
		$right = $map_unfiled;
		$bottom = $map_legend;
		if ( $attributes_map_o->{legend_placement}=~/^BL$/ ) {
			$align = "left";
			$valign = "middle";
		}
		if ( $attributes_map_o->{legend_placement}=~/^BC$/ ) {
			$align = "center";
			$valign = "middle";
		}
		if ( $attributes_map_o->{legend_placement}=~/^BR$/ ) {
			$align = "right";
			$valign = "middle";
		}
	}
	
	if ( exists $attributes_map_o->{logo} ) {
		if ( $attributes_map_o->{logo_position} eq 'LR' ) {
			$LR = "<img border='0'; height='' width='' align='right' src='$attributes_map_o->{logo}'>"; 
			$LL = undef;$UR = undef;$UL = undef;
		}
		if ( $attributes_map_o->{logo_position} eq 'LL' ) {
			$LL = "<img border='0'; height='' width='' align='left' src='$attributes_map_o->{logo}'>";
			$LR = undef;$UR = undef;$UL = undef;
		}
		if ( $attributes_map_o->{logo_position} eq 'UR' ) {
			$UR = "<img border='0'; height='' width='' align='top' src='$attributes_map_o->{logo}'>";
			$LR = undef;$LL = undef;$UL = undef;
		}
		if ( $attributes_map_o->{logo_position} eq 'UL' ) {
			$UL = "<img border='0'; height='' width='' align='top' src='$attributes_map_o->{logo}'>";
			$LR = undef;$LL = undef;$UR = undef;
		}
	}
	my $table = "";
	if ( $exportAction ) {
		$table .= "
<table border=\"0px\" >
	<tr>
		<td colspan='2' cellpadding='10px' align='center'> 
			<font size='$attributes_map_o->{title_fontsize}' color='$attributes_map_o->{titleclr}'>
				<b>$report->{lname}</b> 
			</font>
		</td>
	</tr>
	<tr>
		<td cellpadding='$attributes_map_o->{t_margin}px $attributes_map_o->{r_margin}px $attributes_map_o->{b_margin}px $attributes_map_o->{l_margin}px' align='center'>
			$UL
			<Img Src=\"$report->{id}-$variables->{useLang}.$Const::format2DReport\" border='0'; height='$height' width='$width' align='left'> 
		</td>
		<td padding='0px 10px 0px 10px' valign='$valign'>
			$UR
			$right
		</td>
	</tr>
	<tr>
		<td padding='0px 10px 0px 10px' align='center'>
			$LL
			$bottom
		</td>
		<td padding='0px'>
			$LR
		</td>
	</tr>
	<tr>
		<td colspan='2'>
		$bottom_title
		</td>
	</tr>
</table>
			  ";
	}
	else {
		$table .= "
<table class='page_skeleton_ex' style='border:0px'>
	<tr class='page_skeleton'>
		<td class='page_skeleton_ex' colspan='2' style='padding: 10px; text-align: center; font-family: $attributes_map_o->{title_font}; font-size: $attributes_map_o->{title_fontsize}; color: $attributes_map_o->{titleclr}; '>
			<b>$report->{lname}</b>
		</td>
	</tr>
	<tr class='page_skeleton'>
		<td class='page_skeleton_ex' style='padding: $attributes_map_o->{t_margin}px $attributes_map_o->{r_margin}px $attributes_map_o->{b_margin}px $attributes_map_o->{l_margin}px; align: center;background-color: rgb($attributes_map_o->{boxclr});'>
			$UL
			<Img UseMap=\"#mapa\" Src=\"graph2D.cgi?id=$report->{id}-$variables->{useLang}.$Const::format2DReport\" border='0'; height='$height' width='$width' align='left'> 
		</td>
		<td class='page_skeleton_ex' style='padding: 0px 10px 0px 10px; vertical-align: $valign'>
			$UR
			$right
		</td>
	</tr>
	<tr class='page_skeleton'>
		<td style='padding: 0px 10px 0px 10px;align:center;'>
			$LL
			$bottom
		</td>
		<td class='page_skeleton_ex' style='padding: 0px;'>
			$LR
		</td>
	</tr>
	<tr class='page_skeleton' >
		<td class='page_skeleton_ex' colspan='2'>
		$bottom_title
		</td>
	</tr>
</table>
		";
	}
	return $table;
}

#--------------------------------------------------------------------------------------------------------------------------------------

sub str2htmltable { 	# convert string with contains ** to table -> ** means end of row (for example a**b return table with 2 rows: a,b )
	my $str = shift;
	my $font_family = shift;
	my $font_size = shift;
	my $attributes = shift;
	my $exportAction = shift;
	
	$font_size = $font_size +2; # font in GD library is bigger then in HTML
	
	my @@strings = split(/\*\*/,$str);
	my $table = "";
	if ($attributes->{x_label_position} ne 'NO') {
		if ($exportAction) {
			foreach ( @@strings ) {
				$table.= "<tr> <td width=\"100%\" align=\"$attributes->{x_label_position}\"><font color=\"$attributes->{labelclr}\"> $_ </font></td> </tr>";
			}
		}
		else {
			foreach ( @@strings ) {
				$table.= "<tr> <td style='font-family:$font_family; font-size:$font_size; text-align:$attributes->{x_label_position};color:$attributes->{labelclr};width=100%;padding:0px 0px 0px $attributes->{l_margin}px'> $_ </td> </tr>";
				#$table.= "<tr> <td style='text-align:center;color:$color;width=100%' onContextMenu=\"return showMenu(this,'pohyb')\" > $_ </td> </tr>";
			}
		}
	}
	else {
		$table.= "<tr> <td width=\"100%\">&nbsp;</td> </tr>"
	}
	return $table;
}

#--------------------------------------------------------------------------------------------------------------------------------------

sub map_legend {			## get array, where are defined range of attributes and corresponded color ; return html table 
	my $exportAction = shift;		## 
	my $map_colors = shift;			## hash , which contains array with definition ranges and colors
	my $bgclr = shift;				## background color of document report
	my $attributes_map_o = shift;	## attributes of graph
	my $variables_o = shift;
	
	#my $map_colors = $style->{entities}{colors}; ## 'colors' => [['1000','0,0,0'],['10000','79,90,145']],
	my $skinPath = $variables_o->{skinPath};
	my $imgType = $variables_o->{imgType};
	my ($map_colors_revers,@@ranges);	
	my $legend = "";
	

	for ( my $i=0; $i < scalar @@{$map_colors} ; $i++ ) {
#		$map_colors_revers->[(scalar@@{$map_colors}-1) - $i] = $map_colors->[$i];
		$ranges[$i] = $map_colors->[$i][0];
	}
	my @@sortRanges = sort {$b<=>$a} @@ranges;
	
	for ( my $i=0; $i < scalar @@sortRanges ; $i++ ) {
		for ( my $j=0; $j < scalar @@sortRanges; $j++ ) {
			if ( $sortRanges[$i] == $map_colors->[$j][0]) {
				$map_colors_revers->[$i] = $map_colors->[$j];
			}
		}
	}
	
	if ( $exportAction ) { 
		$legend .= " <table border=\"0px\" align=\"center\" cellspacing=\"2px\" >";
		for ( my $item=0; $item < scalar @@{$map_colors_revers}; $item++ ) {
			$legend .=	"<tr>";
			my $col = 0;
			while ( $col < $attributes_map_o->{lg_cols} ) {
				if ( $map_colors_revers->[$item+$col][0] ) {
					my($r,$g,$b) = split(/,/,$map_colors_revers->[$item+$col][1]);
					$legend .= "
									 <td><img bgcolor='rgb($r,$g,$b)' src='$skinPath/img/smallcolor.$imgType' width='$attributes_map_o->{legend_marker_width}px' height='$attributes_map_o->{legend_marker_height}px'/></td>
    								 <td align='left' border='$attributes_map_o->{legend_spacing}px' bordercolor='rgb($bgclr)' cellpadding='0px 15px 0px 0px'>  < $map_colors_revers->[$item+$col][0]</td>
					";
				}
				$col++;
			}
			$item = $item - 1 + $col if $col != 0;
			$legend .= "</tr>";	
		}	
=block
		foreach  ( @@{$map_colors_revers} ) {
			#$legend = $_->[0];
			my($r,$g,$b) = split(/,/,$_->[1]);
			my $color = GD::Graph::colour::rgb2hex($r,$g,$b);
			$legend .= "
						 <tr>
    						 <td title='' bgcolor=\"$color\" width=\"25px\">&nbsp;</td>
    						 <td align=\"left\" >  < $_->[0]</td>
						 </tr>
			 ";
		}
=cut
	}
	else {
		$legend .= " <table style='border:$attributes_map_o->{legend_spacing}px solid rgb($bgclr)'>";
		for ( my $item=0; $item < scalar @@{$map_colors_revers}; $item++ ) {
			$legend .=	"<tr>";
			my $col = 0;
			while ( $col < $attributes_map_o->{lg_cols} ) {
				if ( $map_colors_revers->[$item+$col][0] ) {
					my($r,$g,$b) = split(/,/,$map_colors_revers->[$item+$col][1]);
					$legend .= "
									 <td><img style='background-color:rgb($r,$g,$b);' src='$skinPath/img/smallcolor.$imgType' width='$attributes_map_o->{legend_marker_width}px' height='$attributes_map_o->{legend_marker_height}px'/></td>
    								 <td style='text-align:left;border:$attributes_map_o->{legend_spacing}px solid rgb($bgclr);padding: 0px 15px 0px 0px'>  < $map_colors_revers->[$item+$col][0]</td>
					";
				}
				$col++;
			}
			$item = $item - 1 + $col if $col != 0;
			$legend .= "</tr>";	
		}	
	}

	$legend .= "	</table>";
	
	return $legend;
}

#--------------------------------------------------------------------------------------------------------------------------------------

sub map_unfiled {			## get attr and corresponded color , return html table
	my $exportAction = shift;
	my $unfiled = shift;		## hash with definitions attributes, which are not in xml file of map 
	my $bgclr = shift;		## background color of document report
	my $attributes_map_o = shift;	## attributes of graph
	my $variables_o = shift;
	
	my $skinPath = $variables_o->{skinPath};
	my $imgType = $variables_o->{imgType};
	my $table = "";
	
	my $row = 0;
	if ( $exportAction ) {
		$table .= " <table  width=\"100%\" border=\"0px\" align=\"left\" cellspacing=\"2px\" >";
		foreach ( keys (%{$unfiled}) ) {
			my $color = GD::Graph::colour::rgb2hex($unfiled->{$_}{color}[0],$unfiled->{$_}{color}[1],$unfiled->{$_}{color}[2]);
			if ( $row%3 == 0 and $row == 0) {
				$table .= "
							 <tr> 
    							 <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" bgcolor=\"$color\" width=\"25px\" > &nbsp; </td>
    							 <td align=\"left\" > $unfiled->{$_}{title} </td>
			 		  ";
			}
			elsif ( $row%3 == 0 and $row != 0 ) {
				$table .= "
							 </tr>
							 <tr> 
    							 <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" bgcolor=\"$color\" width=\"25px\" > &nbsp; </td>
    							 <td align=\"left\" > $unfiled->{$_}{title} </td>
			 		  ";
			}
			else {
				$table .= "
    							<td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" bgcolor=\"$color\" width=\"25px\" > &nbsp; </td>
    							<td align=\"left\" > $unfiled->{$_}{title} </td>
					 ";
			}
			$row++;
		}
		$table .= "
							 </tr>
			  "; 
	
	}
	else {
		$table .= "<table style='border:$attributes_map_o->{legend_spacing}px solid rgb($bgclr)'>";
		my @@keys = keys ( %{$unfiled} );
		for ( my $item=0; $item < scalar @@keys; $item++ ) {
			$table .=	"<tr>";
			my $col = 0;
			while ( $col < $attributes_map_o->{lg_cols} ) {
				my $it_col = $item+$col;
				#if ( $keys->[$it_col][0] ) {
					my($r,$g,$b) = ( $unfiled->{$keys[$it_col]}{color}[0], $unfiled->{$keys[$it_col]}{color}[1], $unfiled->{$keys[$it_col]}{color}[2] );
					$table .= "
									 <td title='$unfiled->{$keys[$it_col]}{title} :$unfiled->{$keys[$it_col]}{metric}'><img style='background-color:rgb($r,$g,$b);' src='$skinPath/img/smallcolor.$imgType' width='$attributes_map_o->{legend_marker_width}px' height='$attributes_map_o->{legend_marker_height}px'/></td>
    								 <td style='text-align:left;border:$attributes_map_o->{legend_spacing}px solid rgb($bgclr);padding: 0px 15px 0px 0px'>  $unfiled->{$keys[$it_col]}{title}</td>
					";
				#}
				$col++;
			}
			$item = $item - 1 + $col if $col != 0;
			$table .= "</tr>";	
		}	

	}
	$table .= "	 </table>";
	
	return $table;
}
#--------------------------------------------------------------------------------------------------------------------------------------
##############################################################
# 
# sub GD::Graph::colour::rgb2hex {	# transform rgb to hexa  
# 	return unless @@_ == 3;
# 	my $color = '#';
# 	foreach my $cc (@@_) {
# 	  $color .= sprintf("%02x", $cc);
# 	}
# 	return $color;
# 
# }
##############################################################

#--------------------------------------------------------------------------------------------------------------------------------------------

1;
@


1.2
log
@minor changes
@
text
@d35 1
a35 1
		my $bgcolor = rgb2hexa($r,$g,$b);
d180 32
a211 14
<table width=\"100%\" border=\"0px\" >
 <tr> 
     <td width=\"$width\" align=\"center\"> <h4>$report->{lname}</h4> </td> 
     <td align=\"center\" rowspan=\"6\"> $map_legend </td> 
 </tr>
 <tr> 
     <td width=\"$width\" align=\"center\"> <h6>$report->{description}</h6> </td> 
 </tr>
 <tr> 
     <td width=\"$width\" align=\"center\"> <Img UseMap=\"#mapa\" Src=\"$report->{id}-$variables->{useLang}.$Const::format2DReport\" border=0 Height=$height Width=$width > </td> 
 </tr>
 <tr> 
     <td width=\"$width\" align=\"center\"> $map_unfiled </td>  
 </tr> 
d224 1
a224 1
		<td class='page_skeleton_ex' style='padding: $attributes_map_o->{t_margin}px $attributes_map_o->{r_margin}px $attributes_map_o->{b_margin}px $attributes_map_o->{l_margin}px; align: center;background-color: $attributes_map_o->{boxclr};'>
d262 2
d317 17
d337 1
a337 1
			my $color = rgb2hexa($r,$g,$b);
d345 1
d349 1
a349 1
		for ( my $i=0; $i < scalar @@{$map_colors_revers}; $i++ ) {
d351 4
a354 4
			my $j = 0;
			while ( $j < $attributes_map_o->{lg_cols} ) {
				if ( $map_colors_revers->[$i+$j][0] ) {
					my($r,$g,$b) = split(/,/,$map_colors_revers->[$i+$j][1]);
d357 1
a357 1
    								 <td style='text-align:left;border:$attributes_map_o->{legend_spacing}px solid rgb($bgclr);padding: 0px 15px 0px 0px'>  < $map_colors_revers->[$i+$j][0]</td>
d360 1
a360 1
				$j++;
d362 1
a362 1
			$i = $i - 1 + $j if $j != 0;
d367 1
a367 2
	$legend .= "
 					</table>";
d389 1
a389 1
			my $color = rgb2hexa($unfiled->{$_}{color}[0],$unfiled->{$_}{color}[1],$unfiled->{$_}{color}[2]);
d420 4
a423 5
		my $key = 0;
		my $item = 0;
		while ( defined $key ) {
			my $col=0;
			$table .=		"<tr>";
d425 3
a427 3
				($key,$item) = each %{$unfiled};
				if ( defined $key ) {
					my($r,$g,$b) = ($item->{color}[0],$item->{color}[1],$item->{color}[2]);
d429 2
a430 2
								<td title='$item->{title} : $item->{metric}'><img style='background-color:rgb($r,$g,$b);' src='$skinPath/img/smallcolor.$imgType' width='$attributes_map_o->{legend_marker_width}px' height='$attributes_map_o->{legend_marker_height}px'/></td>
    							<td style='text-align:left;border:$attributes_map_o->{legend_spacing}px solid rgb($bgclr);padding: 0px 15px 0px 0px'> $item->{title} </td>
d432 1
a432 4
				}
				else {
					
				}
d435 4
a438 3
			$table .=		"</tr>";
		}
		$table .= "	 </table>";
d440 2
d445 12
a456 10

sub rgb2hexa {	# transform rgb to hexa
	return unless @@_ == 3;
	my $color = '#';
	foreach my $cc (@@_) {
	  $color .= sprintf("%02x", $cc);
	}
	return $color;

}
@


1.1
log
@library which define finaly display of graph
@
text
@d119 4
d124 53
a176 3
	my $exportAction = exists $variables->{export};
	my $map_legend = map_legend( $exportAction, $colors, $report->{bgcolor} );
	my $map_unfiled = map_unfiled( $exportAction, $unfiled, $report->{bgcolor} );
a177 1

d199 30
a228 14
<table style=\"width:100%;border:0px\" >
 <tr> 
     <td style=\"text-align:center;width:$width\"> <h4>$report->{lname}</h4> </td> 
     <td style=\"text-align:center;border:50px solid rgb($report->{bgcolor})\" rowspan=\"4\"> $map_legend </td> 
 </tr>
 <tr> 
     <td style=\"text-align:center;width:$width\"> <h6>$report->{description}</h6> </td> 
 </tr>
 <tr> 
     <td style=\"align:center;width:$width;\"> <Img UseMap=\"#mapa\" Src=\"graph2D.cgi?id=$report->{id}-$variables->{useLang}.$Const::format2DReport\" border=0 Height=$height Width=$width > </td> 
 </tr>
 <tr> 
     <td style=\"text-align:center;width:$width\"> $map_unfiled </td>  
 </tr> 
d230 1
a230 1
			  ";
d243 1
d268 9
a276 4
	my $exportAction = shift;	## 
	my $map_colors = shift;		## hash , which contains array with definition ranges and colors
	my $bgclr = shift;		## background color of document report
	#my $map_colors = $style->{objects}{colors}; ## 'colors' => [['1000','0,0,0'],['10000','79,90,145']],
d294 1
a294 1

d296 1
a296 1
		$legend .= " <table width=\"100%\" border=\"0px\" align=\"center\" cellspacing=\"2px\" >";
d302 5
a306 5
 <tr>
     <td title='' bgcolor=\"$color\" width=\"25px\">&nbsp;</td>
     <td align=\"left\" >  < $_->[0]</td>
 </tr>
				   ";
d310 17
a326 11
		$legend .= " <table style=\"width:100%;border:0px;text-align:center\">";
		foreach  ( @@{$map_colors_revers} ) {
			#$legend = $_->[0];
			my($r,$g,$b) = split(/,/,$_->[1]);
			$legend .= "
 <tr>
     <td title='' style='background-color:rgb($r,$g,$b);width:25px;border:2px solid rgb($bgclr)'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
     <td style='text-align:left;border:2px solid rgb($bgclr)'>  < $_->[0]</td>
 </tr>
				    ";
		}
d328 1
d330 1
a330 1
 </table>";
d341 2
d344 2
d355 3
a357 3
 <tr> 
     <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" bgcolor=\"$color\" width=\"25px\" > &nbsp; </td>
     <td align=\"left\" > $unfiled->{$_}{title} </td>
d362 4
a365 4
 </tr>
 <tr> 
     <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" bgcolor=\"$color\" width=\"25px\" > &nbsp; </td>
     <td align=\"left\" > $unfiled->{$_}{title} </td>
d370 2
a371 2
    <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" bgcolor=\"$color\" width=\"25px\" > &nbsp; </td>
    <td align=\"left\" > $unfiled->{$_}{title} </td>
d377 1
a377 1
 </tr>
d382 19
a400 9
		$table .= "<table style=\"width:100%;border:0px\">";
		foreach ( keys (%{$unfiled}) ) {
			if ( $row%3 == 0 ) {
				$table .= "
 </tr>
 <tr> 
     <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" style=\"background-color:rgb($unfiled->{$_}{color}[0],$unfiled->{$_}{color}[1],$unfiled->{$_}{color}[2]);width:25px;border:2px solid rgb($bgclr)\"> </td>
     <td style=\"text-align:left;border:2px solid rgb($bgclr)\"> $unfiled->{$_}{title} </td>
					 ";
d402 3
a404 8
			else {
				$table .= "
     <td title=\"$unfiled->{$_}{title} : $unfiled->{$_}{metric}\" style=\"background-color:rgb($unfiled->{$_}{color}[0],$unfiled->{$_}{color}[1],$unfiled->{$_}{color}[2]);width:25px;border:2px solid rgb($bgclr)\"> </td>
     <td style=\"text-align:left;border:2px solid rgb($bgclr)\"> $unfiled->{$_}{title} </td>
					 ";
			}
			$row++;
		} 
a405 4
	
	$table .= "
 </table>";

@

