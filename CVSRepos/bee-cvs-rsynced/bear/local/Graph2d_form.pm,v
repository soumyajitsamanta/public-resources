head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2004.05.03.16.22.40;	author michald;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.28.13.55.02;	author vacula;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.22.16.04.16;	author vacula;	state Exp;
branches;
next	;


desc
@@


1.3
log
@some fixes from Vlada
@
text
@

package Graph2d_form;

use strict;

use Data::Dumper;
 
 
#--------------------------------------------------------------------------------------------------------------------------------------------

sub report {			# return hash with id,localized name,description and bgcolor of report 
	my $obj = shift;	
	my $variables = shift;	
	my ($report);		
	
	$report->{id} = each(%{$obj->{report}});
	$report->{lname} = &Local::LocalizedObj($obj->{report}{$report->{id}}{name}, $report->{id}, lc($$variables->{useLang}), $$variables->{defaultLang});
	$report->{description} = ($obj->{report}{$report->{id}}{description} =~ /HASH/)  ? $obj->{report}{$report->{id}}{description}{lc($$variables->{useLang})} : $obj->{report}{$report->{id}}{description};
	$report->{bgcolor} = '255,255,255';
	
	return $report;
}

#--------------------------------------------------------------------------------------------------------------------------------------------

sub defineAttr {			# define attributes of graph 
	my $style_o = shift;
	my $title = shift;		# title of graph
	my $x_label = shift;	# pointer to label of x axis
	my $y_label = shift;	# pointer to label of y axis
	my $legend = shift; 	# pointer to legend
	my (%attr);
	my $chart = $style_o->{form};


	#------------------- B A S E --------------------------
	$attr{"t_margin"} = $style_o->{base}{t_margin};
	$attr{"b_margin"} = $style_o->{base}{b_margin};
	$attr{"l_margin"} = $style_o->{base}{l_margin};
	$attr{"r_margin"} = $style_o->{base}{r_margin};
	if ( $chart=~/^pie$|^pie3d$/ ) {
		$attr{"3d"} = ( $chart eq 'pie' ) ? 0 : 1;
	}
	#------------------- L A Y O U T --------------------------
	if ( $chart=~/^bars$|^lines$|^points$|^linespoints$|^area$/ ) {
		$attr{"axis_space"} = $style_o->{layout}{axis_space};
		$attr{"text_space"} = $style_o->{layout}{text_space};
		$attr{"transparent"} = $style_o->{layout}{bg_transparent};
		if ( ! $attr{"transparent"} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{bgclr});
			$attr{"bgclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
		if ( $style_o->{layout}{show_boxclr} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{boxclr});
			$attr{"boxclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
		if ( $style_o->{layout}{show_axis} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{fgclr});
			$attr{"fgclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
			if ( $style_o->{layout}{show_axis_box} ) {
				$attr{"box_axis"} = 1;
			}
			else {
				$attr{"box_axis"} = 0;
			}
		}
		else {
			$attr{"no_axes"} = 1;
		}
		if ( $style_o->{layout}{show_title} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{title});
			$attr{"textclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
		if ( $style_o->{layout}{show_labels} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{labels});
			$attr{"labelclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
			$attr{"y_label"} = $$y_label;
		}
		else {
			$$x_label = undef;
			$$y_label = undef;
		}
		if ( $style_o->{layout}{show_axis_labels} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{axislabels});
			$attr{"axislabelclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
		else {
			$attr{"x_plot_values"} = 0;
			$attr{"y_plot_values"} = 0;
		}
	}
	elsif ( $chart=~/^pie$|^pie3d$/ ) {
		if ( ! $attr{"transparent"} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{bgclr});
			$attr{"bgclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
		if ( $style_o->{layout}{show_boxclr} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{boxclr});
			$attr{"boxclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
		if ( $style_o->{layout}{show_title} ) {
			my ($r,$g,$b) = split(/,/,$style_o->{layout}{title});
			$attr{"textclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}		
	}

	#------------------- A X I S _ X --------------------------
	if ( $chart=~/^bars$|^lines$|^points$|^linespoints$|^area$/ ) {
		if ( $style_o->{ax_X}{show_label} ) {
			$attr{"x_label_position"} = $style_o->{ax_X}{label_position};
		}
		else {
			$attr{"x_label_position"} = 'NO';
		}
		if ( $style_o->{ax_X}{show_axislabel} ) {
			$attr{"x_plot_values"} = 1;
			if ( $style_o->{ax_X}{axislabel_vertical} ) {
				$attr{"x_labels_vertical"} = 1;
			}
			$attr{"x_label_skip"} = $style_o->{ax_X}{axislabel_skip};		
			$attr{"x_tick_offset"} = $style_o->{ax_X}{axislabel_offset} if $attr{"x_label_skip"};		
		}
		else {
			$attr{"x_plot_values"} = 0;
		}
		if ( $style_o->{ax_X}{show_ticks} ) {
			$attr{"x_ticks"} = 1;
			$attr{"x_long_ticks"} = ($style_o->{ax_X}{long_ticks}) ? 1 : 0;		
			$attr{"x_tick_length"} = $style_o->{ax_X}{tick_length};		
		}
		else {
			$attr{"x_ticks"} = 0;
		}
	}
	if ( $chart=~/^pie$|^pie3d$/ ) {
		$$x_label = undef;
	}
	#------------------- A X I S _ Y --------------------------	
	if ( $chart=~/^bars$|^lines$|^points$|^linespoints$|^area$/ ) {
		if ( $style_o->{ax_Y}{show_label} ) {
			$attr{"y_label_position"} = $style_o->{ax_Y}{label_position};
		}
		else {
			$attr{"y_label"} = undef;
			$attr{"y_label_position"} = 'NO';
		}
		if ( $style_o->{ax_Y}{show_axislabel} ) {
			$attr{"y_plot_values"} = 1;
			$attr{"y_tick_number"} = $style_o->{ax_Y}{tick_number};		
			$attr{"y_label_skip"} = $style_o->{ax_Y}{axislabel_skip};		
		}
		else {
			$attr{"y_plot_values"} = 0;
		}
		if ( $style_o->{ax_Y}{show_ticks} ) {
			$attr{"y_long_ticks"} = ($style_o->{ax_Y}{long_ticks}) ? 1 : 0;		
			$attr{"y_tick_length"} = $style_o->{ax_Y}{tick_length};		
		}
		else {
			$attr{"y_tick_length"} = 0;
		}
		if ( ! $style_o->{ax_Y}{'amplitude_compute'} ) {
			$attr{"y_min_value"} = $style_o->{ax_Y}{amplitude_min};		
			$attr{"y_max_value"} = $style_o->{ax_Y}{amplitude_max};		
		}
	}
	if ( $chart=~/^pie$|^pie3d$/ ) {
		$$y_label = undef;
	}
	#------------------- L E G E N D and L O G O --------------------------	
	if ( $chart=~/^bars$|^lines$|^points$|^linespoints$|^area$/ ) {	
		if ( $style_o->{legend}{show_legend} ) {
			$attr{"legend_placement"} = $style_o->{legend}{legend_placement};
			$attr{"legend_spacing"} = $style_o->{legend}{legend_spacing};
			$attr{"legend_marker_width"} = $style_o->{legend}{legend_marker_width};
			$attr{"legend_marker_height"} = $style_o->{legend}{legend_marker_height};
			if ( ! $style_o->{legend}{cols_compute} ) {
				$attr{"lg_cols"} = ( $style_o->{legend}{lg_cols} ne "" and $style_o->{legend}{lg_cols} ne "0" ) ? $style_o->{legend}{lg_cols} : undef;
			}
		}
		else {
			$$legend = undef;
		}
	}
	if ( $style_o->{legend}{show_logo} ) {
		$attr{"logo"} = "$Const::myPath"."img/logo/$style_o->{legend}{src_logo}.". GD::Graph->export_format;
		$attr{"logo_position"} = $style_o->{legend}{logo_position};
	}
	else {
		$attr{"logo"} = undef;
	}

	#------------------- O B J E C T S --------------------------	
	if ( $chart=~/^bars$/ ) {						
		if ( $style_o->{entities}{show_shadow} ) { 						# shadow of objects currently only for bars
			$attr{"shadow_depth"} = $style_o->{entities}{shadow_depth};
			my ($r,$g,$b) = split(/,/,$style_o->{entities}{shadowclr});
			$attr{"shadowclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		}
	}

	return %attr;
}

#--------------------------------------------------------------------------------------------------------------------------------------------

sub defineFonts {
	my $style_o = shift;		# style original 
	my $fonts;

	$fonts->{title} = $Const::fonts->{$style_o->{layout}{title_font}};		# font title of graph for pie and pie3d graphs
	$fonts->{title_size} = $style_o->{layout}{title_fontsize};				# fontsize title of graph for pie and pie3d graphs
	$fonts->{legend} = $Const::fonts->{$style_o->{legend}{legend_font}};
	$fonts->{legend_size} = $style_o->{legend}{legend_fontsize};
	$fonts->{values} = $Const::fonts->{$style_o->{entities}{values_font}};	# values font for axis type graph
	$fonts->{values_size} = $style_o->{entities}{values_fontsize};			# values fontsize for axis type graph
	$fonts->{label} = $Const::fonts->{$style_o->{layout}{title_font}};		# font title of graph for pie and pie3d graphs
	$fonts->{label_size} = $style_o->{layout}{title_fontsize};				# fontsize title of graph for pie and pie3d graphs
	$fonts->{value} = $Const::fonts->{$style_o->{entities}{values_font}};	# value font for pie and pie3d graphs
	$fonts->{value_size} = $style_o->{entities}{values_fontsize};			# value fontsize for pie and pie3d graphs
	$fonts->{x_label} = $Const::fonts->{$style_o->{ax_X}{label_font}};
	$fonts->{x_label_size} = $style_o->{ax_X}{label_fontsize};
	$fonts->{y_label} = $Const::fonts->{$style_o->{ax_Y}{label_font}};
	$fonts->{y_label_size} = $style_o->{ax_Y}{label_fontsize};
	$fonts->{x_axis} = $Const::fonts->{$style_o->{ax_X}{axislabel_font}};
	$fonts->{x_axis_size} = $style_o->{ax_X}{axislabel_fontsize};
	$fonts->{y_axis} = $Const::fonts->{$style_o->{ax_Y}{axislabel_font}};
	$fonts->{y_axis_size} = $style_o->{ax_Y}{axislabel_fontsize};

	return $fonts;
}

#--------------------------------------------------------------------------------------------------------------------------------------------

sub defineAttrMap {
	my $style_o = shift;
	my %attrMap;

	#------------------- B A S E --------------------------
	$attrMap{"t_margin"} = $style_o->{base}{t_margin};
	$attrMap{"b_margin"} = $style_o->{base}{b_margin};
	$attrMap{"l_margin"} = $style_o->{base}{l_margin};
	$attrMap{"r_margin"} = $style_o->{base}{r_margin};

	#------------------- L A Y O U T --------------------------
	if ( ! $style_o->{layout}{bg_transparent} ) {
		$attrMap{"bgclr"} = $style_o->{layout}{bgclr};
	}
	else {
		$attrMap{"bgclr"} = undef;
	}
	if ( $style_o->{layout}{show_boxclr} ) {
		$attrMap{"boxclr"} = $style_o->{layout}{boxclr};
	}
	if ( $style_o->{layout}{show_title} ) {
		my ($r,$g,$b) = split(/,/,$style_o->{layout}{title});
		$attrMap{"titleclr"} = GD::Graph::colour::rgb2hex($r,$g,$b);
		$attrMap{"title_font"} = $style_o->{layout}{title_font};
		$attrMap{"title_fontsize"} = $style_o->{layout}{title_fontsize};
	}		

	#------------------- L E G E N D and L O G O --------------------------	
	if ( $style_o->{legend}{show_legend} ) {
		$attrMap{"legend_placement"} = $style_o->{legend}{legend_placement};
		$attrMap{"legend_spacing"} = $style_o->{legend}{legend_spacing};
		$attrMap{"legend_marker_width"} = $style_o->{legend}{legend_marker_width};
		$attrMap{"legend_marker_height"} = $style_o->{legend}{legend_marker_height};
		if ( ! $style_o->{legend}{cols_compute} ) {
			$attrMap{"lg_cols"} = ( $style_o->{legend}{lg_cols} ne "" and $style_o->{legend}{lg_cols} ne "0" ) ? $style_o->{legend}{lg_cols} : undef;
		}
		else {
			$attrMap{"lg_cols"} = 2;
		}
	}
	else {
		#$$legend = undef;
	}
	if ( $style_o->{legend}{show_logo} ) {
		$attrMap{"logo"} = "img/logo/$style_o->{legend}{src_logo}.". GD::Graph->export_format;
		$attrMap{"logo_position"} = $style_o->{legend}{logo_position};
	}
	else {
		$attrMap{"logo"} = undef;
	}
	
	return %attrMap;
}

#--------------------------------------------------------------------------------------------------------------------------------------------

1;
@


1.2
log
@minor changes
@
text
@d52 1
a52 1
			$attr{"bgclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d56 1
a56 1
			$attr{"boxclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d60 1
a60 1
			$attr{"fgclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d73 1
a73 1
			$attr{"textclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d77 1
a77 1
			$attr{"labelclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d86 1
a86 1
			$attr{"axislabelclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d96 1
a96 1
			$attr{"bgclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d100 1
a100 1
			$attr{"boxclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d104 1
a104 1
			$attr{"textclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d199 1
a199 1
			$attr{"shadowclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d254 1
a254 2
		my ($r,$g,$b) = split(/,/,$style_o->{layout}{boxclr});
		$attrMap{"boxclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
d258 1
a258 1
		$attrMap{"titleclr"} = Graph2d_report::rgb2hexa($r,$g,$b);
@


1.1
log
@library which define format layout of graph
@
text
@d28 1
a28 1
	my $style = shift;
d34 1
a34 1
	my $chart = $style->{form};
d38 4
a41 4
	$attr{"t_margin"} = $style->{base}{t_margin};
	$attr{"b_margin"} = $style->{base}{b_margin};
	$attr{"l_margin"} = $style->{base}{l_margin};
	$attr{"r_margin"} = $style->{base}{r_margin};
d47 3
a49 3
		$attr{"axis_space"} = $style->{layout}{axis_space};
		$attr{"text_space"} = $style->{layout}{text_space};
		$attr{"transparent"} = $style->{layout}{bg_transparent};
d51 1
a51 1
			my ($r,$g,$b) = split(/,/,$style->{layout}{bgclr});
d54 2
a55 2
		if ( $style->{layout}{show_boxclr} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{boxclr});
d58 2
a59 2
		if ( $style->{layout}{show_axis} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{fgclr});
d61 1
a61 1
			if ( $style->{layout}{show_axis_box} ) {
d71 2
a72 2
		if ( $style->{layout}{show_title} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{title});
d75 2
a76 2
		if ( $style->{layout}{show_labels} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{labels});
d84 2
a85 2
		if ( $style->{layout}{show_axis_labels} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{axislabels});
d95 1
a95 1
			my ($r,$g,$b) = split(/,/,$style->{layout}{bgclr});
d98 2
a99 2
		if ( $style->{layout}{show_boxclr} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{boxclr});
d102 2
a103 2
		if ( $style->{layout}{show_title} ) {
			my ($r,$g,$b) = split(/,/,$style->{layout}{title});
d110 2
a111 2
		if ( $style->{ax_X}{show_label} ) {
			$attr{"x_label_position"} = $style->{ax_X}{label_position};
d116 1
a116 1
		if ( $style->{ax_X}{show_axislabel} ) {
d118 1
a118 1
			if ( $style->{ax_X}{axislabel_vertical} ) {
d121 2
a122 2
			$attr{"x_label_skip"} = $style->{ax_X}{axislabel_skip};		
			$attr{"x_tick_offset"} = $style->{ax_X}{axislabel_offset} if $attr{"x_label_skip"};		
d127 1
a127 1
		if ( $style->{ax_X}{show_ticks} ) {
d129 2
a130 2
			$attr{"x_long_ticks"} = ($style->{ax_X}{long_ticks}) ? 1 : 0;		
			$attr{"x_tick_length"} = $style->{ax_X}{tick_length};		
d141 2
a142 2
		if ( $style->{ax_Y}{show_label} ) {
			$attr{"y_label_position"} = $style->{ax_Y}{label_position};
d148 1
a148 1
		if ( $style->{ax_Y}{show_axislabel} ) {
d150 2
a151 2
			$attr{"y_tick_number"} = $style->{ax_Y}{tick_number};		
			$attr{"y_label_skip"} = $style->{ax_Y}{axislabel_skip};		
d156 3
a158 3
		if ( $style->{ax_Y}{show_ticks} ) {
			$attr{"y_long_ticks"} = ($style->{ax_Y}{long_ticks}) ? 1 : 0;		
			$attr{"y_tick_length"} = $style->{ax_Y}{tick_length};		
d163 3
a165 3
		if ( ! $style->{ax_Y}{'amplitude_compute'} ) {
			$attr{"y_min_value"} = $style->{ax_Y}{amplitude_min};		
			$attr{"y_max_value"} = $style->{ax_Y}{amplitude_max};		
d173 7
a179 7
		if ( $style->{legend}{show_legend} ) {
			$attr{"legend_placement"} = $style->{legend}{legend_placement};
			$attr{"legend_spacing"} = $style->{legend}{legend_spacing};
			$attr{"legend_marker_width"} = $style->{legend}{legend_marker_width};
			$attr{"legend_marker_height"} = $style->{legend}{legend_marker_height};
			if ( ! $style->{legend}{cols_compute} ) {
				$attr{"lg_cols"} = ( $style->{legend}{lg_cols} ne "" and $style->{legend}{lg_cols} ne "0" ) ? $style->{legend}{lg_cols} : undef;
d186 3
a188 3
	if ( $style->{legend}{show_logo} ) {
		$attr{"logo"} = "$Const::myPath"."img/logo/$style->{legend}{src_logo}.". GD::Graph->export_format;
		$attr{"logo_position"} = $style->{legend}{logo_position};
d196 3
a198 3
		if ( $style->{objects}{show_shadow} ) { 						# shadow of objects currently only for bars
			$attr{"shadow_depth"} = $style->{objects}{shadow_depth};
			my ($r,$g,$b) = split(/,/,$style->{objects}{shadowclr});
d216 2
a217 2
	$fonts->{values} = $Const::fonts->{$style_o->{objects}{values_font}};	# values font for axis type graph
	$fonts->{values_size} = $style_o->{objects}{values_fontsize};			# values fontsize for axis type graph
d220 2
a221 2
	$fonts->{value} = $Const::fonts->{$style_o->{objects}{values_font}};	# value font for pie and pie3d graphs
	$fonts->{value_size} = $style_o->{objects}{values_fontsize};			# value fontsize for pie and pie3d graphs
d260 2
d264 23
a286 1
	#------------------- L A Y O U T --------------------------
@

