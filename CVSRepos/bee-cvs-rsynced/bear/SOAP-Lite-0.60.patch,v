head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2004.03.27.09.00.17;	author michald;	state Exp;
branches;
next	;


desc
@@


1.1
log
@patch for SOAP::Lite 0.60
@
text
@--- lib/SOAP/Lite.pm	2003-08-18 20:44:18.000000000 +0200
+++ /usr/lib/perl5/site_perl/5.8.1/SOAP/Lite.pm	2004-03-26 06:01:14.000000000 +0100
@@@@ -23,7 +23,14 @@@@
 sub anyTypeValue { 'ur-type' }
 
 sub as_boolean { shift; my $value = shift; $value eq '1' || $value eq 'true' ? 1 : $value eq '0' || $value eq 'false' ? 0 : die "Wrong boolean value '$value'\n" }
-sub as_base64 { shift; require MIME::Base64; MIME::Base64::decode_base64(shift) }
+sub as_base64 {
+  shift; 
+  require MIME::Base64; 
+  my $s = MIME::Base64::decode_base64(shift);
+  use Encode;
+  Encode::_utf8_on($s);	# workaround for wrong processing of UTF-8 by MIME::Base64
+  return $s
+}
 sub as_ur_type { $_[1] }
 
 BEGIN {
@@@@ -44,7 +51,7 @@@@
 sub anyTypeValue { 'anyType' }
 
 sub as_boolean; *as_boolean = \&SOAP::XMLSchemaSOAP1_1::Deserializer::as_boolean;
-sub as_base64 { shift; require MIME::Base64; MIME::Base64::decode_base64(shift) }
+sub as_base64; *as_base64 = \&SOAP::XMLSchemaSOAP1_1::Deserializer::as_base64;
 sub as_anyType { $_[1] }
 
 BEGIN {
@@@@ -125,6 +132,8 @@@@
 sub as_base64 {
   my $self = shift;
   my($value, $name, $type, $attr) = @@_;
+  use Encode;
+  Encode::_utf8_off($value);	# workaround for wrong processing of UTF-8 by MIME::Base64
   require MIME::Base64;
   return [$name, {'xsi:type' => SOAP::Utils::qualify($self->encprefix => 'base64'), %$attr}, MIME::Base64::encode_base64($value,'')];
 }
@@@@ -215,6 +224,8 @@@@
 sub as_base64Binary {
   my $self = shift;
   my($value, $name, $type, $attr) = @@_;
+  use Encode;
+  Encode::_utf8_off($value);	# workaround for wrong processing of UTF-8 by MIME::Base64
   require MIME::Base64;
   return [$name, {'xsi:type' => 'xsd:base64Binary', %$attr}, MIME::Base64::encode_base64($value,'')];
 }
@
