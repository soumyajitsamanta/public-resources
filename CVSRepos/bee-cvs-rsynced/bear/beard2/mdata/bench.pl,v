head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2004.03.01.16.16.49;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
Added beard2 -- new bear daemon source tree.

mdata subsystem works, some docs, some tests, etc.

cached in progress
@
text
@#!/usr/bin/perl -w

use Socket;
use IO::Handle;
use Data::Dumper;
use Storable qw(freeze thaw nstore_fd retrieve_fd);

my $count = shift;

my $rw = shift;
my $socket;
$socket = "../tmp/mdata-ro.sock" if($rw and ($rw eq 'read'));
$socket = "../tmp/mdata-rw.sock" if($rw and ($rw eq 'write'));

unless($socket) {
	print "\nusage: time $0 count [read|write] method [args..]\n\n";
	print "example: time $0 1000 write set hello 'Hello world!'\n";
	print "example: time $0 10000 read echo hello\n\n";
	exit(1);
}

my $result;
for($i=0;$i<$count;$i++) {
	socket(SOCK,PF_UNIX,SOCK_STREAM,0) or die $!;
	connect(SOCK,sockaddr_un($socket)) or die $!;

	nstore_fd \@@ARGV, \*SOCK;
	IO::Handle::flush(SOCK); # important!

	$result = retrieve_fd(\*SOCK);

#	select(undef,undef,undef,0.1);
}
print Dumper($result);

@
