head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.03.23.07.33.25;	author numberone;	state dead;
branches;
next	1.1;

1.1
date	2004.03.01.16.16.48;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
beard2/cached

funkcni metoda 'start <report_id>' (krome samotneho vraceni dotazu)

xml konfigurace prepsana na includovany .pm soubor

do MData.pm pripravena metoda get_report a sql_gen pro cached
@
text
@
package Cached;

use Data::Dumper;
use Socket;
use POSIX ":sys_wait_h";

use Report;
use Select;

sub prepare_socket {
	my($SOCK,$socket) = @@_;

	my $addr = sockaddr_un($socket);
	unlink($socket);

	socket($SOCK,PF_UNIX,SOCK_STREAM,0) or die $!;
	bind($SOCK,$addr) 				or die $!;
	listen($SOCK,SOMAXCONN) 			or die $!;
	return $SOCK;
}

sub create_kid {
	my $r = (shift =~ /r/); # r- or s-cache?

	my $kid = fork();
	die $! unless defined $kid;

	return $kid if $kid;

	$SIG{INT} = 'DEFAULT';
	$SIG{CHLD} = 'DEFAULT';
	exit ($r ? Report::report_main() : Select::select_main());
}

sub new_rcache { 
	my $kid = create_kid('r');
	print "r- adding $kid\n";
	$main::rcache{$kid} = $kid;
}

sub new_scache { 
	my $kid = create_kid('s');
	print "s- adding $kid\n";
	$main::scache{$kid} = $kid;
}

1;
@


1.1
log
@
Added beard2 -- new bear daemon source tree.

mdata subsystem works, some docs, some tests, etc.

cached in progress
@
text
@@

