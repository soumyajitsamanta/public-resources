head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2004.02.24.10.21.34;	author jiri_schmid;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.16.14.55.19;	author jiri_schmid;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.05.08.53.47;	author jiri_schmid;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.29.13.33.33;	author jiri_schmid;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.29.13.20.34;	author jiri_schmid;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.20.13.06.01;	author jiri_schmid;	state Exp;
branches;
next	;


desc
@@


1.6
log
@prefer access and rights logic changed
@
text
@#!/usr/bin/perl
# $Id: collected.cgi,v 1.5 2004/02/16 14:55:19 jiri_schmid Exp $

use strict;
my $run_mod_perl = defined(&Apache::RequestRec::BINMODE);	# are we running under mod_perl?
if ($run_mod_perl) { Apache::RequestRec::BINMODE(':utf8') } else { binmode STDOUT,':utf8' }

use CGI qw( :standard );
use CGI::Pretty;
use Encode;
require "const/Const.pm";
require "local/Local.pm";

my $q = new CGI;

# --- determine user and his preferences ---
#-------------------------------------------
my $User = $q->remote_user() ? $q->remote_user() : 'anonymous';
my $use_lang = ($q->param('Lang')) ? $q->param('Lang') : $Const::defaultLanguage;
my $project = ($q->param('Proj')) ? $q->param('Proj') : '';
my $use_enc = $Const::languages->{$use_lang}->{enc};
my $width = $q->param('Width');
my $dropWidth = 100-$width;
my $class = $q->param('Content') ? "dynamics" : "dynamiclist";
my $all_params = "Lang=".$q->param('Lang')."&Cook=".$q->param('Cook')."&Open=".$q->param('Open')."&Proj=".$q->param('Proj')."&Width=".$q->param('Width')."&Skin=".$q->param('Skin');
# --- determine skin ---
#-----------------------
my $skinPath;
my $wb = $q->user_agent()=~/MSIE/ ? 'msie' : 'mozilla';
if ($q->param('Skin')) {	# takes it as param from index.cgi
	$skinPath = "skins/".$q->param('Skin');
} elsif ($q->param('skin')) {	# I've received parameter from myself after Save
	$skinPath = "$Const::wb_const->{$wb}{skinDir}/".$q->param('skin');
} else {
	$skinPath = "$Const::wb_const->{$wb}{skinDir}/default";	#let use default
}

# --- load message dictionary ---
#---------------------------------
require "lang/$use_lang.utf";

# --- print out html form ---
#----------------------------
print $q->header(-charset=>$use_enc);

print $q->start_html(
	-title=>"Cellect",
  	-lang=>$Const::languages->{$use_lang}->{lang},	#return language specification in format: language-country (it differs from param Lang)
	-encoding=>$use_enc,
	-head=>meta({ -http_equiv => 'Content-Type', -content => "text/html; charset=$use_enc" }),
	-style=>{-src=>"${skinPath}/css.css"},
	-script=>{-language=>'JAVASCRIPT', -src=>'js/collect.js'},
	-class=>"$class",
);

if ($q->param('Content')) {
} else {
	my $hlp = decode_utf8($q->param('Reports')); #string must be decoded to octets to pass regular expresion /perl authors/
	my @@rprts = split /\|/,$hlp;
	print "<span class='nowrap'><img id='openClose' class='cursor' style='position:fixed; top:5px; right: 3px' src='$skinPath/img/leftArr.png' onclick='ocTree();' alt='OC'/></span>";
	print "<div class='view' id='content'><span class='list'>$Const::lang->{$use_lang}->{'Collect List'}:</span><br />";
	print "<input type='hidden' value='$skinPath' id='skin' />";
	foreach (sort @@rprts) {
		my ($name,$id) = split(/~/,$_);#/
print <<END;
		<span>
			<img align='absbottom' class='cursor' src="$skinPath/img/delete.png" alt='Del' title="$Const::lang->{$use_lang}->{Delete}" onclick="checkRemove('$name','$id','C')"/>
			<a href='javascript:{}' onclick='viewReport(\"$id\")'>&nbsp;$name</a>
		</span>
		<br />
END
	}
	print "</div><script type='text/javascript'>var params='$all_params'; var remove='$Const::lang->{$use_lang}->{Result_remove}'</script>";
}



print $q->end_html;

#---------------------------------------------------

1
@


1.5
log
@security improvment for tabs
@
text
@d2 1
a2 1
# $Id: collected.cgi,v 1.4 2004/02/05 08:53:47 jiri_schmid Exp $
d25 1
a25 1
my $all_params = "Lang=".$q->param('Lang')."&Cook=".$q->param('Cook')."&Open=".$q->param('Open')."&Proj=".$q->param('Proj')."&sqlA=".$q->param('sqlA')."&Width=".$q->param('Width')."&Skin=".$q->param('Skin');
@


1.4
log
@derivated reports redesigned
@
text
@d2 1
a2 1
# $Id: collected.cgi,v 1.3 2004/01/29 13:33:33 jiri_schmid Exp $
a13 12
# ---- init SOAP ---------
#-------------------------
my $load = 0;
if (!$load) {	# ensure require will be performed only once in case of mod_perl execution
	eval "use SOAP::Lite +autodispatch => 
		uri => 'Bear', 
		proxy => ['http://$Const::bearHost:$Const::bearPort/',
		options => {compress_threshold => $Const::compressThreshold}];
		1"
	or ( &Local::ErrorDie("ERROR in eval of \"use SOAP::Lite ...\".") );
	$load++;
}
a15 7
# --- test SOAP connection ---
#-----------------------------
my $serverVerbName="SOAP Server http://$Const::bearHost:$Const::bearPort/";
if (! eval "SOAP::Lite->self->fault") {
	&Local::ErrorDie('ERROR: '.$serverVerbName.' not responding<br><form><input type="submit" name="Refresh" value="Refresh" /></form>');
}

@


1.3
log
@added files
@
text
@d2 1
a2 1
# $Id: collected.cgi,v 1.2 2004/01/29 13:20:34 jiri_schmid Exp $
d41 1
a41 1
my $width = 15;
d92 1
a92 1
	print "</div><script type='text/javascript'>var params='$all_params'; var remove='$Const::lang->{$use_lang}->{Result_remove} '</script>";
@


1.2
log
@collected tab implemented
@
text
@d2 1
a2 1
# $Id: collected.cgi,v 1.1 2004/01/20 13:06:01 jiri_schmid Exp $
d43 1
a43 1
my $class = $q->param('Content') ? "dynamics" : "list";
@


1.1
log
@collected reports tab implementation started
@
text
@d2 1
a2 1
# $Id: collected.cgi,v 1.4 2003/11/12 12:44:21 jiri_schmid Exp $
d5 2
a6 1
use utf8;
d10 1
d41 1
a41 2
my $width = $q->param('Width');
$width = 25 if ($width<10 || $width>50);
d57 4
d71 1
a75 4
print <<END;
	<pre>We are in Content</pre><br />
	$all_params<br />
END
d77 7
d85 5
a89 1
	<pre>We are in List</pre><br />
d91 2
a92 4
my @@rprts = split /\|/,$q->param('Reports');

use Data::Dumper;
print "<pre>".Dumper(@@rprts)."</pre>";
@

