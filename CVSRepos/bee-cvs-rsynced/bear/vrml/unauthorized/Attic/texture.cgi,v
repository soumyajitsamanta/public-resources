head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.06.05.12.23.11;	author vacula;	state dead;
branches;
next	1.1;

1.1
date	2003.05.16.13.00.31;	author vacula;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#!/usr/bin/perl 

 use GD;
 use CGI qw( :standard );

print "Content-Type: image/png;\n\n";




use constant FONT_DIRECTORY => '/usr/X11R6/lib/X11/fonts/TTF';      	## /usr/X11R6/lib/X11/fonts/TTF    /home/vladis/test/fonts

# $label = 'Brno';
 $label = param("string");
 $labelcolor = 'blue';
 $directory =  FONT_DIRECTORY;
 $font 	= "$directory/luximb.ttf"; 					##"$directory/luximb.ttf";
 $heigth 	= 20;
 $string 	= length($label)*14;


$im = new GD::Image($string,$heigth);   # create new image size $string x $heigth

# create variable which represent individual color 
#$white = $im->colorAllocate(255,255,255);
$black = $im->colorAllocate(0,0,0);
if (     $labelcolor eq 'black') {$color = $im->colorAllocate(0,0,0);  }
  elsif ($labelcolor eq 'red')   {$color = $im->colorAllocate(255,0,0);}
  elsif ($labelcolor eq 'green') {$color = $im->colorAllocate(0,255,0);}
  elsif ($labelcolor eq 'blue')  {$color = $im->colorAllocate(0,0,255);}
  elsif ($labelcolor eq 'white') {$color = $im->colorAllocate(250,250,250);return $color};
  
$im->transparent($black);	# set which color is transparent
#$im->interlaced(1);

# write string   
#warn "rendering $label\n";
$im->stringTTF( $color,		# fgcolor 
		$font,		# fontname
		14.0,		# pointsize
		0.0,		# angle
		4,		# x coordinate to start drawing the string
		16,		# y coordinate to start drawing the string
		$label);	# string

print $im->png; 

open (GD ,">../png/$label.png");
print GD $im->png; 
close (GD);

@


1.1
log
@generate texture
@
text
@@

