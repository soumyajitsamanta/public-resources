head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.04.11.12.06.15;	author vacula;	state dead;
branches;
next	1.2;

1.2
date	2003.03.21.05.52.33;	author michald;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.19.21.13.11;	author vacula;	state Exp;
branches;
next	;


desc
@@


1.3
log
@clean
@
text
@#!/usr/bin/perl -w
require "generate.pl";
use vars qw(%AXIS %XY %XZ %YZ @@DATA $rows $cols $maxX $maxY $maxZ); 


#######  definition: lattice ########

&lattice;

open (WORK,">work.wrl")
	or die "Nelze otevrit soubor work.wrl\n";
print WORK "#VRML V2.0 utf8
	    NavigationInfo { type [\"ANY\"] }
	    Background { skyColor [ 0 0 1 ] }\n";

our @@red   = (1,0,0); 
our @@green = (0,1,0);
our @@blue  = (0,0,1);
our @@white = (1,1,1);
our @@black = (0,0,0);

#@@color = (1,0,0);
$indent = 0.5;										## Space between lattice and label

$max_axis =  @@{$AXIS{X}};								## Maximum axis
if ($max_axis < @@{$AXIS{Y}}){$max_axis = @@{$AXIS{Y}}};
if ($max_axis < @@{$AXIS{Z}}){$max_axis = @@{$AXIS{Z}}};						


#---- Generate axis  -----#
for ($i=0;$i<$max_axis;$i++){  #begin of global cycle for
   if ($AXIS{X} -> [$i]) {
	$lengthX = ($AXIS{X} -> [$i] -> {length}); 
	$length  = $AXIS{X} -> [$i] -> {length};
	if ($AXIS{X} -> [$i] -> {visible} ) {
	  $color	 = $AXIS{X} -> [$i] -> {visible} -> {color};
	  $size 	 = $AXIS{X} -> [$i] -> {visible} -> {size}/10; 				## Size of axis X
	  $step 	 = 0;									## Step value
	  $axis 	 = "x";									## Step on axis y
	  $max 	     	 = 1;									## Only 1 axis per cycle
	  %translation   = ("x"=>$length/2,"y"=>0,"z"=>0);					## Translation axis X ( tendency X )
	  %rotation      = ("x"=>0,"y"=>0,"z"=>1);		   				## Rotation axis X  ( pivot axis Z )
	  $label 	     = $AXIS{X} -> [$i] -> {label} ;
	  $labelcolor	     = $AXIS{X} -> [$i] -> {visible} -> {labelcolor};
	  %translation_label = ("x"=>$length+$indent,"y"=>0,"z"=>0);			## Translation label of axis X ( tendency X )
	  %rotation_labels = ("x"=>0,"y"=>0,"z"=>0);
	  &generate_text;

	
     if ($AXIS{X} -> [$i] -> {visible} -> {format} eq "box"){
     &generate_box; 
     }
     if ($AXIS{X} -> [$i] -> {visible} -> {format} eq "cylinder"){
     &generate_cylinder; 
     }
     if ($AXIS{X} -> [$i] -> {visible} -> {format} eq "line"){
     &generate_line; 
     }

     }
   }
   if ($AXIS{Y} -> [$i]) {
	$lengthY = ($AXIS{Y} -> [$i] -> {length}); 
	$length  = $AXIS{Y} -> [$i] -> {length};							
	if ($AXIS{Y} -> [$i] -> {visible} ) {
	  $color	 = $AXIS{Y} -> [$i] -> {visible} -> {color};
	  $size 	 = $AXIS{Y} -> [$i] -> {visible} -> {size}/10; 				
	  $step 	 = 0;									
	  $axis 	 = "y";									
	  $max 	     	 = 1;									
	  %translation   = ("x"=>0,"y"=>$length/2,"z"=>0);					
	  %rotation      = ("x"=>0,"y"=>0,"z"=>0);		   				
	  $label 	     = $AXIS{Y} -> [$i] -> {label} ;
	  $labelcolor	     = $AXIS{Y} -> [$i] -> {visible} -> {labelcolor} ;
	  %translation_label = ("x"=>0,"y"=>$length+$indent,"z"=>0);			
	  %rotation_labels = ("x"=>0,"y"=>0,"z"=>0);
	  &generate_text;
	
     if ($AXIS{Y} -> [$i] -> {visible} -> {format} eq "box"){
     &generate_box; 
     }
     if ($AXIS{Y} -> [$i] -> {visible} -> {format} eq "cylinder"){
     &generate_cylinder; 
     }
     if ($AXIS{Y} -> [$i] -> {visible} -> {format} eq "line"){
     &generate_line; 
     }

     }
   }
   if ($AXIS{Z} -> [$i]) {
	$lengthZ = ($AXIS{Z} -> [$i] -> {length}); 
	$length = $AXIS{Z} -> [$i] -> {length};							
	if ($AXIS{Z} -> [$i] -> {visible} ) {
	  $color	 = $AXIS{Z} -> [$i] -> {visible} -> {color};
	  $size 	 = $AXIS{Z} -> [$i] -> {visible} -> {size}/10; 				
	  $step 	 = 0;									
	  $axis 	 = "z";									
	  $max 	     	 = 1;									
	  %translation   = ("x"=>0,"y"=>0,"z"=>$length/2);					
	  %rotation      = ("x"=>1,"y"=>0,"z"=>0);		   				
	  $label 	     = $AXIS{Z} -> [$i] -> {label};
	  $labelcolor	     = $AXIS{Z} -> [$i] -> {visible} -> {labelcolor};
	  %translation_label = ("x"=>0,"y"=>0,"z"=>$length+$indent+(length($label)*0.5));			
	  %rotation_labels = ("x"=>0,"y"=>1,"z"=>0);
	  &generate_text;
	
     if ($AXIS{Z} -> [$i] -> {visible} -> {format} eq "box"){
     &generate_box; 
     }
     if ($AXIS{Z} -> [$i] -> {visible} -> {format} eq "cylinder"){
     &generate_cylinder; 
     }
     if ($AXIS{Z} -> [$i] -> {visible} -> {format} eq "line"){
     &generate_line; 
     }

     }
   }

#---- Generate lattice  -----# 

   if ($XY{tendency_X} -> [0] -> {visible} ) {      
     for ($i=1;$i<=(@@{$XY{tendency_X}}-1);$i++){

	$length 	   = $lengthX;								## Length of lattice	
	$color		   = $XY{tendency_X} -> [$i] -> {color};				## Color of lattice
	$size 		   = $XY{tendency_X} -> [$i] -> {size}/100;  				## Size of lattice
	$step 		   = $XY{tendency_X} -> [$i] -> {step};  				## Step - value
	$axis 		   = "y";								## Step on axis y 	
	$max 		   = int($lengthY/$step);						## Number of lattices
	%translation 	   = ("x"=>$length/2,"y"=>0,"z"=>0);					## Transform lattice - tendency X 
	%rotation  	   = ("x"=>0,"y"=>0,"z"=>1);		   				## Rotation - pivot axis Z ##	
	$stp		   = 0;
	for ($j=0;$j<$max;$j++){
		$stp		   += $step;
	 if ($XY{tendency_X} -> [$i] -> {label} -> [$j] {visible}) {
		$label 	 	   = $XY{tendency_X} -> [$i] -> {label} -> [$j] -> {string};
		$labelcolor	   = $XY{tendency_X} -> [$i] -> {label} -> [$j] -> {color};
		$heigth 	   = 20;
		$string 	   = (length($label))*(13);
		%translation_label = ("x"=>$length+$indent,"y"=>(-$heigth/100)+$stp,"z"=>0);
		%rotation_label    = ("x"=>0,"y"=>0,"z"=>0);
		$flag 		   = 0;
		$ccw 		   = "TRUE";
		$texCoordIndex	   = "";
               &generate_label;  
	 }
	 else {$label = "";}
	}
	
       if ($XY{tendency_X} -> [$i] -> {format} eq "box"){
       &generate_box; 
       }
       if ($XY{tendency_X} -> [$i] -> {format} eq "cylinder"){
       &generate_cylinder; 
       }
       if ($XY{tendency_X} -> [$i] -> {format} eq "line"){
       &generate_line; 
       }
     } 
   }

   if ($XY{tendency_Y} -> [0] -> {visible} ) {      
     for ($i=1;$i<=(@@{$XY{tendency_Y}}-1);$i++){
 
	$length 	   = $lengthY;								## Length of lattice	
	$color		   = $XY{tendency_Y} -> [$i] -> {color};				## Color of lattice
	$size 		   = $XY{tendency_Y} -> [$i] -> {size}/100;  				## Size of lattice
	$step 		   = $XY{tendency_Y} -> [$i] -> {step};  				## Step - value
	$axis 		   = "x";								## Step on axis y 	
	$max 		   = int($lengthX/$step);						## Number of lattices
	%translation 	   = ("x"=>0,"y"=>$length/2,"z"=>0);					## Transform lattice - tendency X 
	%rotation  	   = ("x"=>0,"y"=>0,"z"=>0);		   				## Rotation - pivot axis Z ##	
	$stp		   = 0;
	for ($j=0;$j<$max;$j++){
		$stp		   += $step;
	 if ($XY{tendency_Y} -> [$i] -> {label} -> [$j] {visible}) {
		$label 	 	   = $XY{tendency_Y} -> [$i] -> {label} -> [$j] -> {string};
		$labelcolor	   = $XY{tendency_Y} -> [$i] -> {label} -> [$j] -> {color};
		$heigth 	   = 20;
		$string 	   = (length($label))*(13);
		%translation_label = ("x"=>(-$heigth/100)+$stp,"y"=>$length+$indent,"z"=>0);
		%rotation_label    = ("x"=>0,"y"=>0,"z"=>0);
		$flag 		   = 1;
		$ccw 		   = "TRUE";
		$texCoordIndex	   = "texCoordIndex [3 2 1 0 -1]";
#               &generate_label;      
	 }
	 else {$label = "";}
	}
	
       if ($XY{tendency_Y} -> [$i] -> {format} eq "box"){
       &generate_box; 
       }
       if ($XY{tendency_Y} -> [$i] -> {format} eq "cylinder"){
       &generate_cylinder; 
       }
       if ($XY{tendency_Y} -> [$i] -> {format} eq "line"){
       &generate_line; 
       }
     } 
   }
   if ($XZ{tendency_X} -> [0] -> {visible} ) {      
     for ($i=1;$i<=(@@{$XZ{tendency_X}}-1);$i++){
 
	$length 	   = $lengthX;								## Length of lattice	
	$color		   = $XZ{tendency_X} -> [$i] -> {color};				## Color of lattice
	$size 		   = $XZ{tendency_X} -> [$i] -> {size}/100;  				## Size of lattice
	$step 		   = $XZ{tendency_X} -> [$i] -> {step};  				## Step - value
	$axis 		   = "z";								## Step on axis y 	
	$max 		   = int($lengthZ/$step);						## Number of lattices
	%translation 	   = ("x"=>$length/2,"y"=>0,"z"=>0);					## Transform lattice - tendency X 
	%rotation  	   = ("x"=>0,"y"=>0,"z"=>1);		   				## Rotation - pivot axis Z ##	
	$stp		   = 0;
	for ($j=0;$j<$max;$j++){
		$stp		   += $step;
	 if ($XZ{tendency_X} -> [$i] -> {label} -> [$j] {visible}) {
		$label 	 	   = $XZ{tendency_X} -> [$i] -> {label} -> [$j] -> {string};
		$labelcolor	   = $XZ{tendency_X} -> [$i] -> {label} -> [$j] -> {color};
		$heigth 	   = 20;
		$string 	   = (length($label))*(13);
		%translation_label = ("x"=>$length+$indent,"y"=>0,"z"=>(-$heigth/100)+$stp);
		%rotation_label    = ("x"=>1,"y"=>0,"z"=>0);
		$flag 		   = 0;
		$ccw 		   = "FALSE";
		$texCoordIndex	   = "texCoordIndex [1 0 3 2 -1]";
               &generate_label;      
	 }
	 else {$label = "";}
	}
	
       if ($XZ{tendency_X} -> [$i] -> {format} eq "box"){
       &generate_box; 
       }
       if ($XZ{tendency_X} -> [$i] -> {format} eq "cylinder"){
       &generate_cylinder; 
       }
       if ($XZ{tendency_X} -> [$i] -> {format} eq "line"){
       &generate_line; 
       }
     } 
   }

   if ($XZ{tendency_Z} -> [0] -> {visible} ) {      
     for ($i=1;$i<=(@@{$XZ{tendency_Z}}-1);$i++){
 
	$length 	   = $lengthZ;								## Length of lattice	
	$color		   = $XZ{tendency_Z} -> [$i] -> {color};				## Color of lattice
	$size 		   = $XZ{tendency_Z} -> [$i] -> {size}/100;  				## Size of lattice
	$step 		   = $XZ{tendency_Z} -> [$i] -> {step};  				## Step - value
	$axis 		   = "x";								## Step on axis y 	
	$max 		   = int($lengthX/$step);						## Number of lattices
	%translation 	   = ("x"=>0,"y"=>0,"z"=>$length/2);					## Transform lattice - tendency X 
	%rotation  	   = ("x"=>1,"y"=>0,"z"=>0);		   				## Rotation - pivot axis Z ##	
	$stp		   = 0;
	for ($j=0;$j<$max;$j++){
		$stp		   += $step;
	 if ($XZ{tendency_Z} -> [$i] -> {label} -> [$j] {visible}) {
		$label 	 	   = $XZ{tendency_Z} -> [$i] -> {label} -> [$j] -> {string};
		$labelcolor	   = $XZ{tendency_Z} -> [$i] -> {label} -> [$j] -> {color};
		$heigth 	   = 20;
		$string 	   = (length($label))*(13);
		%translation_label = ("x"=>(-$heigth/100)+$stp,"y"=>0,"z"=>$length+$indent);
		%rotation_label    = ("x"=>1,"y"=>0,"z"=>0);
		$flag 		   = 1;
		$ccw 		   = "FALSE";
		$texCoordIndex	   = "texCoordIndex [2 3 0 1 -1]";
               &generate_label;      
	 }
	 else {$label = "";}
	}
	
       if ($XZ{tendency_Z} -> [$i] -> {format} eq "box"){
       &generate_box; 
       }
       if ($XZ{tendency_Z} -> [$i] -> {format} eq "cylinder"){
       &generate_cylinder; 
       }
       if ($XZ{tendency_Z} -> [$i] -> {format} eq "line"){
       &generate_line; 
       }
     } 
   }
   if ($YZ{tendency_Y} -> [0] -> {visible} ) {      
     for ($i=1;$i<=(@@{$YZ{tendency_Y}}-1);$i++){
 
	$length 	   = $lengthY;								## Length of lattice	
	$color		   = $YZ{tendency_Y} -> [$i] -> {color};				## Color of lattice
	$size 		   = $YZ{tendency_Y} -> [$i] -> {size}/100;  				## Size of lattice
	$step 		   = $YZ{tendency_Y} -> [$i] -> {step};  				## Step - value
	$axis 		   = "z";								## Step on axis y 	
	$max 		   = int($lengthZ/$step);						## Number of lattices
	%translation 	   = ("x"=>0,"y"=>$length/2,"z"=>0);					## Transform lattice - tendency X 
	%rotation  	   = ("x"=>0,"y"=>0,"z"=>0);		   				## Rotation - pivot axis Z ##	
	$stp		   = 0;
	for ($j=0;$j<$max;$j++){
		$stp		   += $step;
	 if ($YZ{tendency_Y} -> [$i] -> {label} -> [$j] {visible}) {
		$label 	 	   = $YZ{tendency_Y} -> [$i] -> {label} -> [$j] -> {string};
		$labelcolor	   = $YZ{tendency_Y} -> [$i] -> {label} -> [$j] -> {color};
		$heigth 	   = 20;
		$string 	   = (length($label))*(13);
		%translation_label = ("x"=>0,"y"=>$length+$indent,"z"=>(-$heigth/100)+$stp);
		%rotation_label    = ("x"=>0,"y"=>-1,"z"=>0);
		$flag 		   = 1;
		$ccw 		   = "FALSE";
		$texCoordIndex	   = "";
 #              &generate_label;      
	 }
	 else {$label = "";}
	}
	
       if ($YZ{tendency_Y} -> [$i] -> {format} eq "box"){
       &generate_box; 
       }
       if ($YZ{tendency_Y} -> [$i] -> {format} eq "cylinder"){
       &generate_cylinder; 
       }
       if ($YZ{tendency_Y} -> [$i] -> {format} eq "line"){
       &generate_line; 
       }
     } 
   }

   if ($YZ{tendency_Z} -> [0] -> {visible} ) {      
     for ($i=1;$i<=(@@{$YZ{tendency_Z}}-1);$i++){
 
	$length 	   = $lengthZ;								## Length of lattice	
	$color		   = $YZ{tendency_Z} -> [$i] -> {color};				## Color of lattice
	$size 		   = $YZ{tendency_Z} -> [$i] -> {size}/100;  				## Size of lattice
	$step 		   = $YZ{tendency_Z} -> [$i] -> {step};  				## Step - value
	$axis 		   = "y";								## Step on axis y 	
	$max 		   = int($lengthY/$step);						## Number of lattices
	%translation 	   = ("x"=>0,"y"=>0,"z"=>$length/2);					## Transform lattice - tendency X 
	%rotation  	   = ("x"=>1,"y"=>0,"z"=>0);		   				## Rotation - pivot axis Z ##	
	$stp		   = 0;
	for ($j=0;$j<$max;$j++){
		$stp		   += $step;
	 if ($YZ{tendency_Z} -> [$i] -> {label} -> [$j] {visible}) {
		$label 	 	   = $YZ{tendency_Z} -> [$i] -> {label} -> [$j] -> {string};
		$labelcolor	   = $YZ{tendency_Z} -> [$i] -> {label} -> [$j] -> {color};
		$heigth 	   = 20;
		$string 	   = (length($label))*(13);
		%translation_label = ("x"=>0,"y"=>(-$heigth/100)+$stp,"z"=>$length+$indent);
		%rotation_label    = ("x"=>0,"y"=>-1,"z"=>0);
		$flag 		   = 0;
		$ccw 		   = "FALSE";
		$texCoordIndex	   = "texCoordIndex [3 2 1 0 -1]";
 #              &generate_label;      
	 }
	 else {$label = "";}
	}
	
       if ($YZ{tendency_Z} -> [$i] -> {format} eq "box"){
       &generate_box; 
       }
       if ($YZ{tendency_Z} -> [$i] -> {format} eq "cylinder"){
       &generate_cylinder; 
       }
       if ($YZ{tendency_Z} -> [$i] -> {format} eq "line"){
       &generate_line; 
       }
     } 
   }


} # end of global cycle for
for ($row=0;$row < $rows;$row++){
   for ($col=0;$col<$cols-1;$col++) {
   $item = $DATA[$row][$col];
   if ($col == 0 and $maxX == 0){
    $coordX = $item+1;
   }
   if($col == 0 and $maxX != 0){
    $mer = $maxX/10;
    $coordX = $item/$mer;
   }
   if ($col == 1 and $maxY == 0){
    $coordY = $item+1;
   }
   if ($col == 1 and $maxY != 0){
    $mer = $maxY/10;
    $coordY = $item/$mer;
   }
   if ($col == 2 and $maxZ == 0){
   $coordZ = $item+1;
   }
   if ($col == 2 and $maxZ != 0){
    $mer = $maxZ/10;
    $coordZ = $item/$mer;
   }
   }
   &generate_obj;
}

##############################################################################################################################################

sub generate_text{
   print WORK "	Transform { 
				translation $translation_label{x} $translation_label{y} $translation_label{z}
				rotation $rotation_labels{x} $rotation_labels{y} $rotation_labels{z} 1.5705
				children Shape {
					geometry Text{
						string [$label]
						fontStyle FontStyle {size 0.7}
					}
					appearance Appearance {
						material Material {diffuseColor @@$labelcolor}
					}
				}
			}\n"
}

##############################################################################################################################################

sub generate_box{
 for ($lattice=1;$lattice<=$max;$lattice++){
 $translation{$axis} += $step;
 print WORK "Transform {				
	translation $translation{x} $translation{y} $translation{z}
	rotation $rotation{x} $rotation{y} $rotation{z} 1.5705
		children Shape {
		geometry Box { size $size $length $size }
		appearance Appearance {
			material Material { diffuseColor @@$color  }
			}
	}
       }\n";
 }
}

##############################################################################################################################################

sub generate_cylinder{
 for ($lattice=1;$lattice<=$max;$lattice++){
 $translation{$axis} += $step;
 print WORK "Transform {				
	translation $translation{x} $translation{y} $translation{z}
	rotation $rotation{x} $rotation{y} $rotation{z} 1.5705
		children Shape {
		geometry Cylinder { radius $size
				    height $length }
		appearance Appearance {
			material Material { diffuseColor @@$color  }
			}
	}
       }\n";
 }
}

##############################################################################################################################################

sub generate_line {
$begin = -$length/2;
$end   = $length/2;
 for ($lattice=1;$lattice<=$max;$lattice++){
 $translation{$axis} += $step;
 print WORK "Transform{
 		translation $translation{x} $translation{y} $translation{z}
		rotation $rotation{x} $rotation{y} $rotation{z} 1.5705
 			children Shape {
	 	 		appearance   Appearance {
  		  			material   Material {diffuseColor @@$color}
		 		}
		  		geometry IndexedLineSet {
   		 			coord Coordinate {  point   [ 0 $begin 0, 0 $end 0 ] }
  		 			coordIndex       [ 0 1 -1 ]
    		 		}
			}
		     }\n";
}
}

##############################################################################################################################################

sub generate_texture {
use GD;
#use constant FONT_DIRECTORY => '/home/vladis/test/fonts';
open (GD,">$label.png");
my($color);
#$fontname = "/usr/X11R6/lib/X11/fonts/TTF/luxisb.ttf";
$fontname = "/usr/share/fonts/default/TrueType_NT/Arialn.ttf";
$im = new GD::Image($string,$heigth);   # create new image size $string x $heigth
#$im = new GD::Image(180,20);

# create variable which represent individual color 
$white = $im->colorAllocate(255,255,255);
if (     $labelcolor eq 'black') {$color = $im->colorAllocate(0,0,0);  }
  elsif ($labelcolor eq 'red')   {$color = $im->colorAllocate(255,0,0);}
  elsif ($labelcolor eq 'green') {$color = $im->colorAllocate(0,255,0);}
#  elsif ($labelcolor eq 'blue')  {$color = $im->colorAllocate(0,0,255);}
  elsif ($labelcolor eq 'blue')  {$color = $im->colorAllocate(250,250,250);}
  elsif ($labelcolor eq 'white') {$color = $im->colorAllocate(250,250,250);};
  
$im->transparent($white);	# set which color is transparent

# write string   
#warn "rendering $label\n";
$im->stringTTF( $color,		# fgcolor 
		$fontname,	# fontname
		14.0,		# pointsize
		0.0,		# angle
		4,		# x coordinate to start drawing the string
		16,		# y coordinate to start drawing the string
		$label);	# string

print GD $im->png; 
}

##############################################################################################################################################

sub generate_label {
 if ($label ne ""){
   &generate_texture;
#   $translation_label{$axis} += $step;
   if ($flag){
    $width_label = $heigth/40; 
    $height_label = $string/40;
   }
   else {
   $width_label = $string/40; 
   $height_label = $heigth/40;
   }
   print WORK "Transform {
		translation $translation_label{x} $translation_label{y} $translation_label{z}
		rotation $rotation_label{x} $rotation_label{y} $rotation_label{z} 1.5705
		children Shape {
			geometry IndexedFaceSet {
				coord Coordinate  { point [ $width_label 0   0,
							    $width_label $height_label 0,
							    0 $height_label 0,
						    	    0 0   0 ] }
				coordIndex [ 0 1 2 3 -1 ]
				solid TRUE
				ccw $ccw
				$texCoordIndex 
			}
			appearance Appearance {
				texture ImageTexture{url \"$label.png\" 
							repeatS FALSE
							repeatT FALSE}
			} 
		}
	     }\n";
  }
}

##############################################################################################################################################
sub generate_obj {
print WORK "Transform {				
	translation $coordX $coordY $coordZ
		children Shape {
		geometry Box { size 0.5 0.5 0.5}
		appearance Appearance {
			material Material { diffuseColor 0.1 1 0.7  }
			}
	}
       }\n"
}

##############################################################################################################################################
close(WORK);
@


1.2
log
@minor fixes
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d406 1
a406 1
						fontStyle FontStyle {size 1}
d482 2
a483 1
$fontname = "/home/vladis/test/fonts/win/arialbd.ttf";
d492 2
a493 1
  elsif ($labelcolor eq 'blue')  {$color = $im->colorAllocate(0,0,255);}
d556 1
a556 1
			material Material { diffuseColor 1 0 0  }
@

