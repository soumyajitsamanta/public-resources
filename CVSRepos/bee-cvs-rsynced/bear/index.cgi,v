head	1.70;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.70
date	2004.03.09.14.43.45;	author jiri_schmid;	state Exp;
branches;
next	1.69;

1.69
date	2004.02.25.16.05.02;	author jiri_schmid;	state Exp;
branches;
next	1.68;

1.68
date	2004.02.24.10.21.34;	author jiri_schmid;	state Exp;
branches;
next	1.67;

1.67
date	2004.02.11.16.05.46;	author jiri_schmid;	state Exp;
branches;
next	1.66;

1.66
date	2004.02.05.08.53.47;	author jiri_schmid;	state Exp;
branches;
next	1.65;

1.65
date	2004.01.29.13.20.34;	author jiri_schmid;	state Exp;
branches;
next	1.64;

1.64
date	2004.01.20.13.06.01;	author jiri_schmid;	state Exp;
branches;
next	1.63;

1.63
date	2003.12.04.14.30.09;	author jiri_schmid;	state Exp;
branches;
next	1.62;

1.62
date	2003.10.31.12.47.54;	author jiri_schmid;	state Exp;
branches;
next	1.61;

1.61
date	2003.10.16.14.08.51;	author jiri_schmid;	state Exp;
branches;
next	1.60;

1.60
date	2003.09.23.15.42.50;	author jiri_schmid;	state Exp;
branches;
next	1.59;

1.59
date	2003.09.01.12.40.05;	author jiri_schmid;	state Exp;
branches;
next	1.58;

1.58
date	2003.07.08.07.12.02;	author jiri_schmid;	state Exp;
branches;
next	1.57;

1.57
date	2003.07.07.14.17.10;	author jiri_schmid;	state Exp;
branches;
next	1.56;

1.56
date	2003.06.20.08.42.29;	author michald;	state Exp;
branches;
next	1.55;

1.55
date	2003.06.09.13.50.56;	author jiri_schmid;	state Exp;
branches;
next	1.54;

1.54
date	2003.06.02.14.47.34;	author jiri_schmid;	state Exp;
branches;
next	1.53;

1.53
date	2003.06.02.12.09.02;	author jiri_schmid;	state Exp;
branches;
next	1.52;

1.52
date	2003.06.02.07.34.59;	author jiri_schmid;	state Exp;
branches;
next	1.51;

1.51
date	2003.05.30.12.43.13;	author jiri_schmid;	state Exp;
branches;
next	1.50;

1.50
date	2003.05.30.12.39.20;	author jiri_schmid;	state Exp;
branches;
next	1.49;

1.49
date	2003.05.29.11.55.07;	author jiri_schmid;	state Exp;
branches;
next	1.48;

1.48
date	2003.05.28.15.18.32;	author jiri_schmid;	state Exp;
branches;
next	1.47;

1.47
date	2003.05.28.12.56.12;	author jiri_schmid;	state Exp;
branches;
next	1.46;

1.46
date	2003.05.28.10.40.10;	author jiri_schmid;	state Exp;
branches;
next	1.45;

1.45
date	2003.05.28.09.11.46;	author jiri_schmid;	state Exp;
branches;
next	1.44;

1.44
date	2003.05.28.08.55.10;	author jiri_schmid;	state Exp;
branches;
next	1.43;

1.43
date	2003.05.26.15.01.23;	author jiri_schmid;	state Exp;
branches;
next	1.42;

1.42
date	2003.05.23.15.03.31;	author jiri_schmid;	state Exp;
branches;
next	1.41;

1.41
date	2003.05.21.15.00.37;	author jiri_schmid;	state Exp;
branches;
next	1.40;

1.40
date	2003.05.21.11.39.42;	author jiri_schmid;	state Exp;
branches;
next	1.39;

1.39
date	2003.05.15.12.01.28;	author jiri_schmid;	state Exp;
branches;
next	1.38;

1.38
date	2003.05.08.15.35.44;	author jiri_schmid;	state Exp;
branches;
next	1.37;

1.37
date	2003.05.07.14.44.57;	author jiri_schmid;	state Exp;
branches;
next	1.36;

1.36
date	2003.05.07.13.11.47;	author jiri_schmid;	state Exp;
branches;
next	1.35;

1.35
date	2003.05.07.08.21.48;	author jiri_schmid;	state Exp;
branches;
next	1.34;

1.34
date	2003.05.06.15.07.05;	author jiri_schmid;	state Exp;
branches;
next	1.33;

1.33
date	2003.05.06.09.20.57;	author jiri_schmid;	state Exp;
branches;
next	1.32;

1.32
date	2003.05.05.15.16.19;	author jiri_schmid;	state Exp;
branches;
next	1.31;

1.31
date	2003.05.05.06.41.42;	author michald;	state Exp;
branches;
next	1.30;

1.30
date	2003.05.01.15.40.14;	author jiri_schmid;	state Exp;
branches;
next	1.29;

1.29
date	2003.05.01.12.17.13;	author michald;	state Exp;
branches;
next	1.28;

1.28
date	2003.04.30.14.45.40;	author jiri_schmid;	state Exp;
branches;
next	1.27;

1.27
date	2003.04.30.09.53.35;	author jiri_schmid;	state Exp;
branches;
next	1.26;

1.26
date	2003.04.25.11.27.20;	author jiri_schmid;	state Exp;
branches;
next	1.25;

1.25
date	2003.04.07.13.28.12;	author michald;	state Exp;
branches;
next	1.24;

1.24
date	2003.03.26.13.54.13;	author jiri_schmid;	state Exp;
branches;
next	1.23;

1.23
date	2003.03.25.15.37.35;	author jiri_schmid;	state Exp;
branches;
next	1.22;

1.22
date	2003.03.25.15.11.14;	author michald;	state Exp;
branches;
next	1.21;

1.21
date	2003.03.20.16.39.29;	author michald;	state Exp;
branches;
next	1.20;

1.20
date	2003.03.18.08.58.04;	author jiri_schmid;	state Exp;
branches;
next	1.19;

1.19
date	2003.03.14.09.23.44;	author jiri_schmid;	state Exp;
branches;
next	1.18;

1.18
date	2003.03.12.16.32.44;	author jiri_schmid;	state Exp;
branches;
next	1.17;

1.17
date	2003.03.10.16.13.59;	author jiri_schmid;	state Exp;
branches;
next	1.16;

1.16
date	2003.03.10.10.36.58;	author jiri_schmid;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.10.10.28.37;	author jiri_schmid;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.07.16.18.36;	author jiri_schmid;	state Exp;
branches;
next	1.13;

1.13
date	2003.03.06.14.48.59;	author jiri_schmid;	state Exp;
branches;
next	1.12;

1.12
date	2003.03.05.15.08.21;	author jiri_schmid;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.04.10.19.13;	author spanhel;	state Exp;
branches;
next	1.10;

1.10
date	2003.03.03.16.43.57;	author jiri_schmid;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.03.14.13.42;	author spanhel;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.25.13.57.40;	author jiri_schmid;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.26.14.16.27;	author michald;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.21.11.02.56;	author spanhel;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.11.10.36.02;	author michald;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.08.07.15.01;	author michald;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.05.17.32.02;	author michald;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.29.09.08.21;	author michald;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.56.41;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.56.41;	author michald;	state Exp;
branches;
next	;


desc
@@


1.70
log
@fixed right menu after right scroll
@
text
@#!/usr/bin/perl -w
#-----------------------------------------------------
#  Bear Constan Definition
#-----------------------------------------------------
# $Id: index.cgi,v 1.69 2004/02/25 16:05:02 jiri_schmid Exp $

use strict;
my $run_mod_perl = defined(&Apache::RequestRec::BINMODE);	# are we running under mod_perl?
if ($run_mod_perl) { Apache::RequestRec::BINMODE(':utf8') } else { binmode STDOUT,':utf8' }

use CGI qw( :standard );
use CGI::Pretty;
require "const/Const.pm";
require "const/Tabs.pm"; # important

# --- print out html ---
#-----------------------
my $q = new CGI;

print $q->header(-charset=>"UTF-8");
#do not use this head, it creates framesetless header
=head
print $q->start_html(
	-title=>"BeaRolap",
	-encoding=>"UTF-8",
	-head=>meta({	-http_equiv => 'Content-Type',
			-content => "text/html; charset=UTF-8",
			-copyright => "$Const::copyright"}),
	-head=>[Link({rel=>"SHORTCUT ICON", href=>"img/bear.ico", type=>"image/x-icon"}),
		Link({rev=>"made", href=>"$Const::made"})]
);
=cut
print <<END;
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>BeaRolap</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<link rel="SHORTCUT ICON" href="img/bear_tiny.png" type="image/x-icon"/>
<link REV=MADE HREF="$Const::made"/>
<meta NAME="copyright" CONTENT="$Const::copyright"/>
</head>
END

# ---- init SOAP ---------
#-------------------------
our $load = 1;
if ($load) {	# ensure require will be performed only once in case of mod_perl execution
	eval "use SOAP::Lite +autodispatch => 
		uri => 'Bear', 
		proxy => ['http://$Const::bearHost:$Const::bearPort/', 
		options => {compress_threshold => $Const::compressThreshold}]; 
		1"
	or ( &ErrorDie("ERROR in eval of \"use SOAP::Lite ...\".") );
	undef $load;
}

# --- test SOAP connection ---
#-----------------------------
my $serverVerbName="SOAP Server http://$Const::bearHost:$Const::bearPort/";
if (! eval "SOAP::Lite->self->fault") {
	ErrorDie('ERROR: '.$serverVerbName.' not responding<br><form><input type="submit" name="Refresh" value="Refresh" /></form>');
}
#*SOAP::Serializer::as_string = \&SOAP::Serializer::as_base64;	#reducing number of XML::Parser char() callbaks  for every single portion of processed stream (e.g. \n)

# --- determine user and his preferences ---
#-------------------------------------------
my $wb = $q->user_agent()=~/MSIE/ ? 'msie' : 'mozilla';
my $user = $q->remote_user();
my $ObjPref = SOAP->GetUserPref($user,'Beard');

my ($use_lang, $SharedParam, $length, $width, $Tabact, $project);

if ($ObjPref->{'project'}) {
	$project = $ObjPref->{'project'};
	$Tabact = ($project) ? ($q->param('TabAct')) ? $q->param('TabAct') : "E" : "P";
	$use_lang = ($ObjPref->{'language'}) ? $ObjPref->{'language'} : "EN";
	my $wdth = ($Tabact eq 'C') ? 'collectwidth' : ($Tabact eq 'M') ? 'derivatewidth' : 'treewidth';
	$width = ($ObjPref->{$wdth}) ? $ObjPref->{$wdth} : 25;
	$length = ($ObjPref->{'tablength'}) ? $ObjPref->{'tablength'} : 10;
		$SharedParam  = "Lang=$use_lang&Width=$width&Proj=$project";
		$SharedParam .= "&Cook=".$ObjPref->{'cookie'}."&Open=".$ObjPref->{'open_in'}."&View=".$ObjPref->{'tabs'};
		$SharedParam .= "&item_id=".$q->param('item_id') if ($q->param('item_id')); #used for sending parameters directly from EDIT - report
		$SharedParam .= "&Skin=$wb/".$ObjPref->{'skin'};
} else {
	$Tabact = "P";
	$SharedParam = '';
}

&removeReport(\$ObjPref,$user,$q->param('remove')) if ($q->param('remove'));

my $ID = $q->param('item_id');
if ($ID && !exists($ObjPref->{report}->{$ID}) ) {
  if ($Tabact =~ /[XCR]/){
	my $newReport;
	$newReport->{project} = $ObjPref->{project};
	$ObjPref->{report} = undef if (ref($ObjPref->{report}) =~ /ARRAY/);
	$ObjPref->{report}->{$ID} = $newReport;
	my $saveObj;
	$saveObj->{Beard} = $ObjPref;
	my $r=SOAP->SaveUserPref($saveObj,$user);
	if (!$r) {print "<span>ERROR: Saving Report into Preferences metadata failed. ..</span>";};
	$ObjPref = SOAP->GetUserPref($user,'Beard');
  };
}
$Tabact = "E" if ($Tabact eq "X");

my $tabs = "";
my $scroll = ($Tabact eq "E") ? "no" : "auto";
my @@tabs = ();
foreach (keys(%{$ObjPref->{report}})){
	next if ($ObjPref->{report}->{$_}->{project} ne $project);
	push @@tabs,"$ObjPref->{report}->{$_}->{name}~$_";
}
$tabs = join("|",@@tabs);

print "<frameset rows='$Const::wb_const->{$wb}{frameHeight},*' name='main' border='0'>";
print "<frame src='tabs.cgi?$SharedParam&TabAct=$Tabact&Length=$length&Open=$ObjPref->{open_in}&Tabs=$tabs' name='tabs' marginwidth='0' marginheight='0' frameborder='0' framespacing='0' scrolling='no'/>"; #tabs frame
$SharedParam .= "&Tabs=$tabs" if $Tabact eq $Tabs::Collected; #add tabs for cellected frame
print "<frame src='$Tabs::Tabs->{$Tabact}{cgi}?$SharedParam' name='body' id='body' marginwidth='0' marginheight='0' frameborder='0' framespacing='0' scrolling='$scroll'/>"; #body frame
print "</frameset></html>";

#----------------------------------------

sub removeReport {
	my ($o,$u,$removeId) = (shift, shift, shift);
	delete($$o->{report}->{$removeId});
	if (! keys(%{$$o->{report}})) {delete($$o->{report})}
	my $hlp;
	$hlp->{Beard} = $$o;
	my $r=SOAP->SaveUserPref($hlp,$u);
	if (!$r) {print "<span>ERROR: Saving Report into Preferences metadata failed. ..</span>"};
}

1
@


1.69
log
@fixed rights logic and folder XML definition files are specific for each project now
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.68 2004/02/24 10:21:34 jiri_schmid Exp $
d123 1
a123 1
print "<frame src='$Tabs::Tabs->{$Tabact}{cgi}?$SharedParam' name='body' marginwidth='0' marginheight='0' frameborder='0' framespacing='0' scrolling='$scroll'/>"; #body frame
@


1.68
log
@prefer access and rights logic changed
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.67 2004/02/11 16:05:46 jiri_schmid Exp $
d21 12
@


1.67
log
@local format improvment and started implementation of tabs selection
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.66 2004/02/05 08:53:47 jiri_schmid Exp $
d73 1
a73 1
		$SharedParam .= "&Cook=".$ObjPref->{'cookie'}."&Open=".$ObjPref->{'open_in'}."&sqlA=".$ObjPref->{'sql-access'}."&View=".$ObjPref->{'tabs'};
@


1.66
log
@derivated reports redesigned
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.65 2004/01/29 13:20:34 jiri_schmid Exp $
d73 1
a73 1
		$SharedParam .= "&Cook=".$ObjPref->{'cookie'}."&Open=".$ObjPref->{'open_in'}."&sqlA=".$ObjPref->{'sql-access'};
@


1.65
log
@collected tab implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.64 2004/01/20 13:06:01 jiri_schmid Exp $
d69 2
a70 1
	$width = ($ObjPref->{'treewidth'}) ? $ObjPref->{'treewidth'} : 25;
@


1.64
log
@collected reports tab implementation started
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.63 2003/12/04 14:30:09 jiri_schmid Exp $
d84 1
a84 1
  if ($Tabact eq "X" || $Tabact eq "R"){
d103 1
a103 1
	push @@tabs,"$_~$ObjPref->{report}->{$_}->{name}";
@


1.63
log
@finishing replacing of gif files
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.62 2003/10/31 12:47:54 jiri_schmid Exp $
d100 1
d103 1
a103 1
	$tabs .= $_."~".$ObjPref->{report}->{$_}->{name}."|";
d105 1
a105 1
$tabs = $tabs;
d107 5
a111 7
print <<END;
<frameset rows="$Const::wb_const->{$wb}{frameHeight},*" name="main" border="0">
	<frame src="tabs.cgi?$SharedParam&TabAct=$Tabact&Length=$length&Tabs=$tabs" name="tabs" marginwidth="0" marginheight="0" frameborder="0" framespacing="0" scrolling="no"/>
	<frame src="$Tabs::Tabs->{$Tabact}{cgi}?$SharedParam" name="body" marginwidth="0" marginheight="0" frameborder="0" framespacing="0" scrolling="$scroll"/>
</frameset>
</html>
END
@


1.62
log
@mod perl rocks!
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.61 2003/10/16 14:08:51 jiri_schmid Exp $
d30 1
a30 1
<link rel="SHORTCUT ICON" href="img/bear_tiny.gif" type="image/x-icon"/>
@


1.61
log
@mod-perl implementation stage 1, rebuilding global vars in .pl to global pointers
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.60 2003/09/23 15:42:50 jiri_schmid Exp $
d8 2
a9 1
binmode(STDOUT, ':utf8');
d13 2
a14 1
our $q = new CGI;
d16 3
a18 5
use vars qw($SrcTabs $Languages @@Languages $bearHost $bearPort $compress_threshold $copyright $made $frameHeight);
our @@cookie=();

require "const.def";
require "local/local_lib.pl"; 
a20 1

d31 2
a32 2
<link REV=MADE HREF="$made"/>
<meta NAME="copyright" CONTENT="$copyright"/>
d36 12
a47 9
# --- make SOAP connection ---
eval "use SOAP::Lite +autodispatch => 
	uri => 'Bear', 
	proxy => ['http://$bearHost:$bearPort/', 
	options => {compress_threshold => $compress_threshold}],
	encoding => 'UTF-8';
	1"
or ( &ErrorDie("ERROR in eval of \"use SOAP::Lite ...\".") );
my $serverVerbName="SOAP Server http://$bearHost:$bearPort/";
d49 3
d53 1
a53 1
	&ErrorDie('ERROR: '.$serverVerbName.' not responding<br/><br/><form><input type="submit" name="Refresh" value="Refresh" /></form>');
d55 1
d57 5
a61 4
#*SOAP::Serializer::as_string = \&SOAP::Serializer::as_base64;	#reducing number of XML::Parser char() callbaks  for every single portion of processed stream (e.g. \n)
my $user = $ENV{REMOTE_USER};
my $ObjPref;
$ObjPref->{Beard} = SOAP->GetUserPref($user,'Beard');
d65 6
a70 9
#	use Data::Dumper;
#	print "<pre>".Dumper($ObjPref)."</pre>";

if ($ObjPref->{'Beard'}->{'project'}) {
	$project = $ObjPref->{'Beard'}->{'project'};
	$Tabact = ($project) ? (param('TabAct')) ? param('TabAct') : "E" : "P";
	$use_lang = ($ObjPref->{'Beard'}->{'language'}) ? $ObjPref->{'Beard'}->{'language'} : "EN";
	$width = ($ObjPref->{'Beard'}->{'treewidth'}) ? $ObjPref->{'Beard'}->{'treewidth'} : 25;
	$length = ($ObjPref->{'Beard'}->{'tablength'}) ? $ObjPref->{'Beard'}->{'tablength'} : 10;
d72 3
a74 4
		$SharedParam .= "&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'}."&sqlA=".$ObjPref->{'Beard'}->{'sql-access'};
		$SharedParam .= "&item_id=".param('item_id') if (param('item_id')); #used for sending parameters directly from EDIT - report
		my $wb = ($q->user_agent()=~/MSIE/) ? 'msie' : 'mozilla';
		$SharedParam .= "&Skin=$wb/".$ObjPref->{'Beard'}->{'skin'};
d77 1
d80 1
a80 1
doWork() if (param('remove'));
d82 2
a83 2
my $ID = param('item_id');
if ($ID && !exists($ObjPref->{Beard}->{report}->{$ID}) ) {
d86 6
a91 4
	$newReport->{project} = $ObjPref->{Beard}->{project};
	$ObjPref->{Beard}->{report} = undef if (ref($ObjPref->{Beard}->{report}) =~ /ARRAY/);
	$ObjPref->{Beard}->{report}->{$ID} = $newReport;
	my $r=SOAP->SaveUserPref($ObjPref,$user);
d93 1
a93 1
	$ObjPref->{Beard} = SOAP->GetUserPref($user,'Beard');
d100 3
a102 3
foreach (keys(%{$ObjPref->{Beard}->{report}})){
	next if ($ObjPref->{Beard}->{report}->{$_}->{project} ne $project);
	$tabs .= $_."~".$ObjPref->{Beard}->{report}->{$_}->{name}."|";
a105 3

my $body = $SrcTabs->{$Tabact}->{cgi};

d107 1
a107 1
<frameset rows="$frameHeight,*" name="main" border="0">
d109 1
a109 1
	<frame src="$body?$SharedParam" name="body" marginwidth="0" marginheight="0" frameborder="0" framespacing="0" scrolling="$scroll"/>
d116 8
a123 6
sub doWork {
my $removeId = param('remove');
delete($ObjPref->{Beard}->{report}->{$removeId});
if (! keys(%{$ObjPref->{Beard}->{report}})) {delete($ObjPref->{Beard}->{report});}
my $r=SOAP->SaveUserPref($ObjPref,$user);
if (!$r) {print "<span>ERROR: Saving Report into Preferences metadata failed. ..</span>";};
d125 2
@


1.60
log
@bug fixies, web browser oriented skins implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.59 2003/09/01 12:40:05 jiri_schmid Exp $
d18 1
a18 1
require "local_lib.pl"; 
@


1.59
log
@skins implemented. mozilla skin - temporarily copy msie content
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.58 2003/07/08 07:12:02 jiri_schmid Exp $
d67 1
a67 1
		$SharedParam  = "Lang=$use_lang&Width=$width&Proj=$project&Skin=".$ObjPref->{'Beard'}->{'skin'};
d70 2
@


1.58
log
@utf8 implementation in last stage
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.57 2003/07/07 14:17:10 jiri_schmid Exp $
d67 1
a67 1
		$SharedParam  = "Lang=$use_lang&Width=$width&Proj=$project";
@


1.57
log
@utf8 may work properly
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.56 2003/06/20 08:42:29 michald Exp $
d8 1
d96 2
a97 1
$tabs = encode_utf8($tabs);
@


1.56
log
@introduction of new directed graph structures MDga and MDgo
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.55 2003/06/09 13:50:56 jiri_schmid Exp $
d95 1
@


1.55
log
@report html exporter implemented, data object still missing
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.54 2003/06/02 14:47:34 jiri_schmid Exp $
d54 1
d107 1
@


1.54
log
@user prefernces handled with getuserpref only
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.53 2003/06/02 12:09:02 jiri_schmid Exp $
d79 1
@


1.53
log
@code improvment, bug fixies
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.52 2003/06/02 07:34:59 jiri_schmid Exp $
d82 1
a82 1
	$ObjPref = SOAP->LoadUserPref($user);
@


1.52
log
@report bug? fixed
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.51 2003/05/30 12:43:13 jiri_schmid Exp $
d85 1
a93 1
if ($Tabact eq "X") {$Tabact = "E"};
@


1.51
log
@minor change in GetUserPref because of historical compatibility
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.50 2003/05/30 12:39:20 jiri_schmid Exp $
d53 1
a53 1
$ObjPref = SOAP->GetUserPref($user,'Beard'); #returns VAR->{Beard}->.....
a82 1
	$Tabact = "E" if ($Tabact eq "X");
d93 1
@


1.50
log
@fixed bug with user prefernces
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.49 2003/05/29 11:55:07 jiri_schmid Exp $
d53 1
a53 1
$ObjPref->{Beard} = SOAP->GetUserPref($user,'Beard');
@


1.49
log
@bug fixies
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.48 2003/05/28 15:18:32 jiri_schmid Exp $
d52 2
a53 1
my $ObjPref = SOAP->LoadUserPref($user);
@


1.48
log
@user pref changes
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.47 2003/05/28 12:56:12 jiri_schmid Exp $
d58 1
a58 1
if ($ObjPref) {
a60 1
	next if (!$project);
@


1.47
log
@forcearray fixies
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.46 2003/05/28 10:40:10 jiri_schmid Exp $
d59 4
a62 1
	$use_lang = $ObjPref->{'Beard'}->{'language'};
d64 3
a66 3
	$project = $ObjPref->{'Beard'}->{'project'};
		$SharedParam  = "Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'};
		$SharedParam .= "&Proj=".$project."&sqlA=".$ObjPref->{'Beard'}->{'sql-access'};
a67 3
		$SharedParam .= "&Width=".$width;
	$length = ($ObjPref->{'Beard'}->{'tablength'}) ? $ObjPref->{'Beard'}->{'tablength'} : 10;
	$Tabact = (param('TabAct')) ? param('TabAct') : "E";
@


1.46
log
@code-improvment bug removed
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.45 2003/05/28 09:11:46 jiri_schmid Exp $
d55 3
a85 3
#	use Data::Dumper;
#	print "<pre>".Dumper($newReport)."</pre>";
#	print "<pre>".Dumper($ObjPref)."</pre>";
@


1.45
log
@minor "cosmetics" changes
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.44 2003/05/28 08:55:10 jiri_schmid Exp $
d56 9
a64 8
$use_lang = $ObjPref->{'Beard'}->{'language'};
$width = ($ObjPref->{'Beard'}->{'treewidth'}) ? $ObjPref->{'Beard'}->{'treewidth'} : 25;
$project = $ObjPref->{'Beard'}->{'project'};
$SharedParam="Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'}."&Proj=".$project."&sqlA=".$ObjPref->{'Beard'}->{'sql-access'};
$SharedParam .= "&item_id=".param('item_id') if (param('item_id')); #used for sending parameters directly from EDIT - report
$SharedParam .= "&Width=".$width;
$length = ($ObjPref->{'Beard'}->{'tablength'}) ? $ObjPref->{'Beard'}->{'tablength'} : 10;
$Tabact = (param('TabAct')) ? param('TabAct') : ($use_lang) ? "E" : "P";
d66 1
a66 1
$Tabact = "P";
d80 1
a80 1
	if ($Tabact eq "X") {$Tabact = "E"};
d83 3
@


1.44
log
@user pref handling changed, implicit.xml file removed
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.43 2003/05/26 15:01:23 jiri_schmid Exp $
d53 1
a53 1
my ($use_lang, $SharedParam, $length, $width, $Tabact);
d58 2
a59 1
$SharedParam="Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'}."&Proj=".$ObjPref->{'Beard'}->{'project'}."&sqlA=".$ObjPref->{'Beard'}->{'sql-access'};
a84 1
my $project = $ObjPref->{'Beard'}->{'project'};
@


1.43
log
@saving under non-selected language implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.42 2003/05/23 15:03:31 jiri_schmid Exp $
d53 6
a58 6
#use Data::Dumper;
#print "x:".Dumper($ObjPref);
my $use_lang = $ObjPref->{'Beard'}->{'language'};
$use_lang = 'EN' if (!exists $Languages->{$use_lang});
my $use_enc = $Languages->{$use_lang}->{'enc'};
my $SharedParam="Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'}."&Proj=".$ObjPref->{'Beard'}->{'project'}."&sqlA=".$ObjPref->{'Beard'}->{'sql-access'};
a59 2
my $length = ($ObjPref->{'Beard'}->{'tablength'}) ? $ObjPref->{'Beard'}->{'tablength'} : 10;
my $width = ($ObjPref->{'Beard'}->{'treewidth'}) ? $ObjPref->{'Beard'}->{'treewidth'} : 25;
d61 5
a66 4
my $project = $ObjPref->{'Beard'}->{'project'};
my $tabs = "";
my $ID = param('item_id');
my $Tabact = (param('TabAct')) ? param('TabAct') : ($use_lang) ? "E" : "P";
d69 1
d82 1
d84 1
@


1.42
log
@rules and groups for attributes implemented, metric & filter checker remaked
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.41 2003/05/21 15:00:37 jiri_schmid Exp $
a82 1

@


1.41
log
@subfolders in attributes implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.40 2003/05/21 11:39:42 jiri_schmid Exp $
d82 2
d94 1
a94 1
	<frame src="$body?$SharedParam" name="body" marginwidth="0" marginheight="0" frameborder="0" framespacing="0" scrolling="auto"/>
@


1.40
log
@visual and code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.39 2003/05/15 12:01:28 jiri_schmid Exp $
d92 1
a92 1
	<frame src="$body?$SharedParam" name="body" marginwidth="0" marginheight="0" frameborder="0" framespacing="0" scrolling="no"/>
@


1.39
log
@code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.38 2003/05/08 15:35:44 jiri_schmid Exp $
d13 1
a13 1
use vars qw($SrcTabs $Languages @@Languages $bearHost $bearPort $compress_threshold $copyright $made);
d61 2
d90 3
a92 3
<frameset rows="70,*" name="main" frameborder="0" framespacing="0" border="0">
	<frame src="tabs.cgi?$SharedParam&TabAct=$Tabact&Length=$length&Tabs=$tabs" name="tabs"  NORESIZE scrolling="no" marginwidth="0" marginheight="0" frameborder="0" framespacing="0">
	<frame src="$body?$SharedParam" name="body">
@


1.38
log
@report huge improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.37 2003/05/07 14:44:57 jiri_schmid Exp $
d58 1
a58 1
my $SharedParam="Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'}."&Proj=".$ObjPref->{'Beard'}->{'project'};
@


1.37
log
@bug multiple opening tabs fixed
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.36 2003/05/07 13:11:47 jiri_schmid Exp $
d60 1
a60 1
my $length = ($ObjPref->{'Beard'}->{'length'}) ? $ObjPref->{'Beard'}->{'length'} : 10;
@


1.36
log
@bug fixies, code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.35 2003/05/07 08:21:48 jiri_schmid Exp $
d65 1
a65 1
my $TabAct = (param('TabAct')) ? param('TabAct') : ($use_lang) ? "E" : "P";
d69 1
a69 1
  if ($TabAct eq "X" || $TabAct eq "R"){
d75 2
a76 2
	$ObjPref = SOAP->LoadUserPref($user);	#force reading user pref, to get actual reports names
	$TabAct = "E" if ($TabAct eq "X");
d85 1
a85 1
my $body = $SrcTabs->{$TabAct}->{cgi};
d89 1
a89 1
	<frame src="tabs.cgi?$SharedParam&TabAct=$TabAct&Length=$length&Tabs=$tabs" name="tabs"  NORESIZE scrolling="no" marginwidth="0" marginheight="0" frameborder="0" framespacing="0">
@


1.35
log
@code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.34 2003/05/06 15:07:05 jiri_schmid Exp $
d64 1
a65 2
my $ID = param('item_id');

d68 2
a69 1
if ($ID && !exists($ObjPref->{Beard}->{report}->{$ID}) && $TabAct eq "R") {
d76 2
@


1.34
log
@bug fixies, code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.33 2003/05/06 09:20:57 jiri_schmid Exp $
d51 2
a52 2

my $ObjPref = SOAP->LoadUserPref($ENV{REMOTE_USER});
d73 1
a73 1
	my $r=SOAP->SaveUserPref($ObjPref,$ENV{'REMOTE_USER'});
d75 1
a75 3
	$ObjPref = SOAP->LoadUserPref($ENV{REMOTE_USER},undef,1);	#force reading user pref, to get actual reports names
#	my $hlp = SOAP->GetMetadata($ID);
#	$ObjPref->{Beard}->{report}->{$ID}->{name} = $hlp->{report}->{$ID}->{name};
d98 1
a98 1
my $r=SOAP->SaveUserPref($ObjPref,$ENV{'REMOTE_USER'});
@


1.33
log
@loading user pref from cache, tabs length implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.32 2003/05/05 15:16:19 jiri_schmid Exp $
d75 1
a75 1
	$ObjPref = SOAP->LoadUserPref($ENV{REMOTE_USER});
@


1.32
log
@huge code improvment on client side when substituting from/to ID, minor language dependeces fixies
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.31 2003/05/05 06:41:42 michald Exp $
d60 1
d89 1
a89 1
	<frame src="tabs.cgi?$SharedParam&TabAct=$TabAct&Tabs=$tabs" name="tabs"  NORESIZE scrolling="no" marginwidth="0" marginheight="0" frameborder="0" framespacing="0">
@


1.31
log
@implementation of full localized metadata
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.30 2003/05/01 15:40:14 jiri_schmid Exp $
d75 2
@


1.30
log
@code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.29 2003/05/01 12:17:13 michald Exp $
d56 1
d68 1
a68 1
if (! $ObjPref->{Beard}->{report}->{$ID} && $ID && $TabAct eq "R") {
@


1.29
log
@some minor fixes
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.28 2003/04/30 14:45:40 jiri_schmid Exp $
d19 1
a19 1
print $q->header(-cookie=>\@@cookie, -encoding=>'UTF-8');
d60 2
d63 17
a81 12
my $build = (param('build')&&(param('build') eq 'no')) ? '&build=no' : '';

#print $q->start_html(
#	-title=>"BeaRolap",
#	-lang=>$Languages->{$use_lang}->{lang},
#	-encoding=>$use_enc,
#	-head=>[meta({ -http_equiv => 'Content-Type', -content => "text/html; charset=$use_enc" }),
#			meta({ -NAME => 'copyright', -CONTENT => $copyright }),
#			Link({ -rel => 'SHORTCUT ICON', -href => "img/bear_tiny.gif", -type => "image/x-icon" }),
#			Link({ -REV => 'MADE', -HREF => $made}),
#		]
#);
d85 2
a86 2
	<frame src="tabs.cgi?$SharedParam&TabAct=$TabAct" name="tabs"  NORESIZE scrolling="no" marginwidth="0" marginheight="0" frameborder="0" framespacing="0">
	<frame src="$body?$SharedParam$build" name="body">
d90 9
@


1.28
log
@removing results implemented, minor code improvment
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.27 2003/04/30 09:53:35 jiri_schmid Exp $
d20 1
d63 12
a74 1
my $build = (param('build') eq 'no') ? '&build=no' : '';
@


1.27
log
@tabs for results implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.26 2003/04/25 11:27:20 jiri_schmid Exp $
d65 1
a65 1
<frameset rows="60,*" name="main" frameborder="0" framespacing="0" border="0">
@


1.26
log
@switching among projects implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.25 2003/04/07 13:28:12 michald Exp $
d52 2
a55 1
my $TabAct = (param('TabAct')) ? param('TabAct') : ($use_lang) ? "E" : "P";
a56 1
my $body=$SrcTabs->{$TabAct}->{cgi};
d59 5
d67 1
a67 1
	<frame src="$body?$SharedParam" name="body">
@


1.25
log
@object name substitution in expressions
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.24 2003/03/26 13:54:13 jiri_schmid Exp $
d55 1
a55 1
my $SharedParam="Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'}."&Open=".$ObjPref->{'Beard'}->{'open_in'};
@


1.24
log
@total remake of format, files formatXXX.html repalced by format.cgi because of languge mutations
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.23 2003/03/25 15:37:35 jiri_schmid Exp $
d13 1
a13 1
use vars qw($SrcTabs $Languages @@Languages $bearHost $bearPort $compress_threshold);
d30 2
a31 2
<link REV=MADE HREF="mailto:michald%40instrat.cz"/>
<meta NAME="copyright" CONTENT="Insight Strategy a.s."/>
@


1.23
log
@syntax checker for metrics imrpoved, loading user pref file when file missing fixed/imrpoved
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.22 2003/03/25 15:11:14 michald Exp $
d25 1
a25 1
<html xmlns="http://www.w3.org/1999/xhtml"/>
@


1.22
log
@Repeat button for case SOAP server connection failure
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.21 2003/03/20 16:39:29 michald Exp $
d15 1
d17 1
a17 1
require "local_lib.pl";
d19 15
a33 1
print $q->header(-cookie=>\@@cookie);
d43 1
a44 1
my $serverVerbName="SOAP Server http://$bearHost:$bearPort/";
d46 1
a46 1
	ErrorDie('ERROR: '.$serverVerbName.' not responding<br><form><input type="submit" name="Refresh" value="Refresh" /></form>');
d48 1
d54 1
a54 2

my $TabAct = (param('TabAct')) ? param('TabAct') : "E";
a58 3
#use Data::Dumper;
#print Dumper ($SharedParam);

a59 12
<?xml version="1.0" encoding="$use_enc"?>
<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="$Languages->{$use_lang}->{'lang'}">
<head>
<title>BeaRolap</title>
<meta http-equiv="Content-Type" content="text/html; charset=$use_enc">
<link rel="SHORTCUT ICON" href="img/bear_tiny.gif" type="image/x-icon"/>
<link REV=MADE HREF="mailto:michald%40instrat.cz"/>
<meta NAME="copyright" CONTENT="Insight Strategy a.s."/>
</head>
a65 3



@


1.21
log
@minor fixes
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.20 2003/03/18 08:58:04 jiri_schmid Exp $
d15 2
d18 1
a18 1
require "const.def";
a42 1
print $q->header(-cookie=>\@@cookie);
d52 2
a53 1
<html xmlns="http://www.w3.org/1999/xhtml" lang="$Languages->{$use_lang}->{'lang'}"><head>
a55 2
<html>
<head>
@


1.20
log
@language change affects TABS immediatly
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.19 2003/03/14 09:23:44 jiri_schmid Exp $
d43 3
d66 1
@


1.19
log
@solved problem with CZ chars, by forced 8bit operating XML-UTF8 files, removed unused images
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.18 2003/03/12 16:32:44 jiri_schmid Exp $
d49 1
a49 1
<title>BaeRolap</title>
a53 1
<title>BeaRolap</title>
@


1.18
log
@user prefernce - open result in: implemented
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.17 2003/03/10 16:13:59 jiri_schmid Exp $
d22 2
a23 1
	options => {compress_threshold => $compress_threshold}]; 
@


1.17
log
@charset fixed
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.16 2003/03/10 10:36:58 jiri_schmid Exp $
a35 1
	#my $Action=param('Action');
d37 1
a37 4

my $SharedParam="&Lang=$use_lang&Cook=".$ObjPref->{'Beard'}->{'cookie'};
	#if ($Action) { $TabsParam.="&Action=$Action" }

d39 1
a39 1

@


1.16
log
@pluscommit
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.15 2003/03/10 10:28:37 jiri_schmid Exp $
d13 1
a13 1
use vars qw($SrcTabs);
d18 19
a36 1
my $Action=param('Action');
d39 2
a40 2
my $bpar="TabAct=$TabAct";
if ($Action) { $bpar.="&Action=$Action" }
d47 1
a47 1
<?xml version="1.0" encoding="UTF-8"?>
d50 6
a55 3
	 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
d62 2
a63 2
	<frame src="tabs.cgi?$bpar" name="tabs"  NORESIZE scrolling="no" marginwidth="0" marginheight="0" frameborder="0" framespacing="0">
	<frame src="$body?$bpar" name="body">
@


1.15
log
@charset test commit
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.14 2003/03/07 16:18:36 jiri_schmid Exp $
d13 1
a13 1
use vars qw($CharSet $SrcTabs);
a16 1
require "local_lib.pl";
a19 2
#my $ID=&SetParam('ID','id');
#undef ($ID) if ($ID==-1);
a22 1
#if ($ID) { $bpar.="&ID=$ID" }
a26 1
#print $q->Dump;
d29 7
a35 3
<html>
<head>
<link rel="SHORTCUT ICON" href="img/bear_tiny.gif" type="image/x-icon">
d37 2
a38 2
<link REV=MADE HREF="mailto:michald%40instrat.cz">
<meta NAME="copyright" CONTENT="2002 Michal Dovrtel">
@


1.14
log
@weekend commit, language not fixed :(
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.12 2003/03/05 15:08:21 jiri_schmid Exp $
d13 1
a13 1
use vars qw($CharSet $Tabs $al);
a16 2
if ($al eq 'cz') {require 'lang/cz.def'}
if ($al eq 'us') {require 'lang/us.def'}
d28 1
a28 1
my $body=$Tabs->{$TabAct}->{cgi};
@


1.13
log
@loading and saving user preferneces under its name functional, preferences affects edit.cgi, tabs.cgi and prefer.cgi for now
@
text
@d13 1
a13 1
use vars qw($CharSet $bearHost $bearPort $compress_threshold $SrcTabs); #$Tabs $al
d17 2
d23 2
d27 4
a30 1
my $body= $SrcTabs->{$TabAct}->{cgi};
d35 1
a35 1
print <<ENDOFTEXT;
a37 1
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=$CharSet">
d45 1
a45 1
	<frame src="$body" name="body">
d48 1
a48 1
ENDOFTEXT
@


1.12
log
@user preferences - cookie property succesfully implemented (not implemented into tabs.cgi)
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.10 2003/03/03 16:43:57 jiri_schmid Exp $
d13 1
a13 1
use vars qw($CharSet $Tabs $al);
a16 2
if ($al eq 'cz') {require 'lang/cz.def'}
if ($al eq 'us') {require 'lang/us.def'}
a20 2
#my $ID=&SetParam('ID','id');
#undef ($ID) if ($ID==-1);
d23 1
a23 4
if ($Action) { $bpar.="&Action=$Action" }
#if ($ID) { $bpar.="&ID=$ID" }

my $body=$Tabs->{$TabAct}->{cgi};
d39 1
a39 1
	<frame src="$body?$bpar" name="body">
@


1.11
log
@added cz localization
@
text
@d32 1
a32 2
print $q->header(-cookie=>\@@cookie,
		-charset=>$CharSet);
@


1.10
log
@cookie managing improvment for better cooperation with user preferences
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.9 2003/03/03 14:13:42 spanhel Exp $
d32 2
a33 1
print $q->header(-cookie=>\@@cookie);
@


1.9
log
@lang version
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.8 2003/02/25 13:57:40 jiri_schmid Exp $
d22 1
a22 1
my $TabAct=SetParam('TabAct','TabAct','E');
@


1.8
log
@cookie with id enabled
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.7 2003/01/26 14:16:27 michald Exp $
d13 1
a13 1
use vars qw($CharSet $Tabs);
d17 2
@


1.7
log
@some small fixes
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.6 2003/01/21 11:02:56 spanhel Exp $
d21 1
a21 1
my $ID=&SetParam('ID','id');
@


1.6
log
@drag and drop + lang version - /lang/lang.def
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.5 2002/11/11 10:36:02 michald Exp $
d42 1
a42 1
<frameset rows="58,*" name="main" frameborder="0" framespacing="0" border="0">
@


1.5
log
@new debug screen
metadata name index
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.4 2002/11/08 07:15:01 michald Exp $
d20 1
a20 1
my $TabAct=SetParam('TabAct','TabAct','H');
@


1.4
log
@Grid metadata save
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.3 2002/10/05 17:32:02 michald Exp $
d21 1
a21 1
#my $ID=&SetParam('ID','id');
@


1.3
log
@grid edit window
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.2 2002/09/29 09:08:21 michald Exp $
d13 1
a13 1
use vars qw($CharSet %Tabs);
d28 1
a28 1
my $body=%Tabs->{$TabAct}->{cgi};
@


1.2
log
@update of tabs structure
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.1.1.1 2002/09/24 01:56:41 michald Exp $
d21 2
a22 1
my $ID=param('ID');
d26 1
a26 1
if ($ID) { $bpar.="&ID=$ID" }
d28 1
a28 1
my $body=%Tabs->{$TabAct}->{cgi}.$bpar;
d44 1
a44 1
	<frame src="$body" name="body">
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
# $Id: index.cgi,v 1.2 2002/09/16 15:00:20 michal Exp $
d41 1
a41 1
<frameset rows="56,*" name="main" frameborder="0" framespacing="0" border="0">
@


1.1.1.1
log
@Initial release of Bear ROLAP Portal
@
text
@@
