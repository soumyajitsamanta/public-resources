head	1.52;
access;
symbols;
locks; strict;
comment	@# @;


1.52
date	2004.04.16.16.08.13;	author vacula;	state Exp;
branches;
next	1.51;

1.51
date	2004.02.24.14.25.41;	author jiri_schmid;	state Exp;
branches;
next	1.50;

1.50
date	2004.01.14.15.32.51;	author jiri_schmid;	state Exp;
branches;
next	1.49;

1.49
date	2004.01.09.08.04.49;	author jiri_schmid;	state Exp;
branches;
next	1.48;

1.48
date	2003.12.12.12.12.16;	author jiri_schmid;	state Exp;
branches;
next	1.47;

1.47
date	2003.12.04.14.30.19;	author jiri_schmid;	state Exp;
branches;
next	1.46;

1.46
date	2003.12.04.12.52.52;	author jiri_schmid;	state Exp;
branches;
next	1.45;

1.45
date	2003.11.18.14.38.40;	author jiri_schmid;	state Exp;
branches;
next	1.44;

1.44
date	2003.11.11.14.03.19;	author jiri_schmid;	state Exp;
branches;
next	1.43;

1.43
date	2003.11.04.15.19.00;	author jiri_schmid;	state Exp;
branches;
next	1.42;

1.42
date	2003.10.16.14.08.53;	author jiri_schmid;	state Exp;
branches;
next	1.41;

1.41
date	2003.10.03.10.53.09;	author jiri_schmid;	state Exp;
branches;
next	1.40;

1.40
date	2003.10.02.14.44.54;	author jiri_schmid;	state Exp;
branches;
next	1.39;

1.39
date	2003.09.25.15.04.17;	author jiri_schmid;	state Exp;
branches;
next	1.38;

1.38
date	2003.09.24.14.59.18;	author jiri_schmid;	state Exp;
branches;
next	1.37;

1.37
date	2003.09.19.10.24.58;	author jiri_schmid;	state Exp;
branches;
next	1.36;

1.36
date	2003.09.17.11.41.25;	author jiri_schmid;	state Exp;
branches;
next	1.35;

1.35
date	2003.09.03.15.10.47;	author jiri_schmid;	state Exp;
branches;
next	1.34;

1.34
date	2003.09.01.13.35.24;	author jiri_schmid;	state Exp;
branches;
next	1.33;

1.33
date	2003.09.01.12.40.09;	author jiri_schmid;	state Exp;
branches;
next	1.32;

1.32
date	2003.08.28.09.26.16;	author jiri_schmid;	state Exp;
branches;
next	1.31;

1.31
date	2003.08.20.14.23.45;	author jiri_schmid;	state Exp;
branches;
next	1.30;

1.30
date	2003.08.05.14.40.25;	author jiri_schmid;	state Exp;
branches;
next	1.29;

1.29
date	2003.08.05.12.49.47;	author jiri_schmid;	state Exp;
branches;
next	1.28;

1.28
date	2003.08.05.08.02.11;	author jiri_schmid;	state Exp;
branches;
next	1.27;

1.27
date	2003.08.01.15.18.44;	author jiri_schmid;	state Exp;
branches;
next	1.26;

1.26
date	2003.08.01.14.23.21;	author jiri_schmid;	state Exp;
branches;
next	1.25;

1.25
date	2003.07.31.14.34.42;	author jiri_schmid;	state Exp;
branches;
next	1.24;

1.24
date	2003.07.31.12.16.00;	author jiri_schmid;	state Exp;
branches;
next	1.23;

1.23
date	2003.07.29.12.28.34;	author jiri_schmid;	state Exp;
branches;
next	1.22;

1.22
date	2003.07.28.13.40.02;	author jiri_schmid;	state Exp;
branches;
next	1.21;

1.21
date	2003.07.21.10.51.42;	author jiri_schmid;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.18.10.51.02;	author jiri_schmid;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.11.16.00.53;	author jiri_schmid;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.09.09.27.12;	author jiri_schmid;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.25.09.14.50;	author jiri_schmid;	state Exp;
branches;
next	1.16;

1.16
date	2003.05.28.15.44.21;	author jiri_schmid;	state Exp;
branches;
next	1.15;

1.15
date	2003.05.23.15.03.43;	author jiri_schmid;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.21.11.39.46;	author jiri_schmid;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.19.14.18.36;	author jiri_schmid;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.13.15.19.00;	author jiri_schmid;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.08.15.35.51;	author jiri_schmid;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.07.13.11.51;	author jiri_schmid;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.05.15.16.34;	author jiri_schmid;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.18.14.52.59;	author jiri_schmid;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.16.12.17.19;	author jiri_schmid;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.16.11.18.16;	author jiri_schmid;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.14.08.39.21;	author jiri_schmid;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.10.14.21.35;	author jiri_schmid;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.14.09.23.53;	author jiri_schmid;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.26.14.48.17;	author jiri_schmid;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.26.13.21.51;	author jiri_schmid;	state Exp;
branches;
next	;


desc
@@


1.52
log
@changes for new intarface
@
text
@// $Id: dad.js,v 1.51 2004/02/24 14:25:41 jiri_schmid Exp $

var browserversion = 0.0;
var browsertype = 0;	// 0: unknown; 1:IE; 2:mozila based (mozilla, firebird, netscape, camino...)
var divID;
var dragLocator;
var plusleft, plustop, posleft, postop = 0;	//iframe offset, global vars for actual mouse position
var Bin = false;

function addValue(EID) {
var hlp = String(dragLocator.name).split(/\|/);
if (hlp[1] == 'E') {
	hlp[0] = String(hlp[0]).replace(/\t/g,",");
	EID.value += (EID.value) ? ','+hlp[0] : hlp[0];
	object_changed();
	}
}

//checking what kind of browser is viewing the page
function browserdetect() {
var agt = navigator.userAgent.toLowerCase();
browsertype = (agt.indexOf('msie') < 0) ? (agt.indexOf('mozilla') < 0 ) ?  0 : 2 : 1;
if (parseFloat(navigator.appVersion.toLowerCase() < 4)) browsertype = 0;
}

browserdetect();

//change the backgroundColor of table cell, which is nedded to be highlighted, webbrowser-TD active(this);
function active(EID){ EID.className = EID.className+"Over"; }

//reverse action to active(), webbrowser-TD passive(this);
function passive(EID){ EID.className = String(EID.className).match(/^[^O]*/); }

//get the iframe offset, initialize movebale image in actual frame, webbrowser-BODY ( [manualy defined name of i_frame] );
function init_var() {
divID = parent.document.getElementById("maindiv");
switch (browsertype) {
	case 2:
		document.captureEvents(Event.MOUSEMOVE);
		document.onmousemove=mousemoveNS;
		break;
	case 1:
        	document.onmousemove=mousemoveIE;
		break;
	case 0: alert('Fatal Error!\nNon-compatible browser detected\nInitializing of vars failed!')
	break; }
dragLocator = top.frames['body'].dragObject;
initOffset();
}

function initOffset(){
plusleft = 6 + parent.document.getElementById('tree_iframe').scrollWidth;	//scrollWidth - the real width of the tree-iframe computed by browser
plustop = 6;
}

//show the clicked icon, webbrowser-IMG show_me(this) | also called from remove_me()
function show_me(){
var hlp = divID.innerHTML.replace(/src="[^"]*/,"src='"+dragLocator.icon+"'");//replace the src of icon, which has to be viewed
divID.innerHTML = hlp.replace(/[^>]*$/,String(dragLocator.name).match(/^[^\|]*/));	//replace the name to be viewed
if (divID.style.visibility == "hidden")	{ divID.style.visibility = "visible"; moveimg(); }
}

//hide the dragged object, after drop or else, webbrowser window.event.onclick (registered event) 
function hide_me() { 
if (divID.style.visibility == "visible")
  if (dragLocator.name == mg_local+"|"+mg_type) {window.status="Sorry, illegal operation.";}
  else {
  	divID.style.visibility="hidden";
	dragLocator.id = '';
	dragLocator.name = '';
	dragLocator.typ = '';
 	window.status="";
  }
 else window.status="";}

//hide the dragged object even metric group, after drop or else, grid.js > fill_tables(); 
function force_hide_me(){
if (divID) {
	divID.style.visibility="hidden";
	dragLocator.name="";
	dragLocator.mg = "";
	dragLocator.typ = '';
}else return;
}

//decide what to do afer clicking on table cell|row in visual managing table on GRID page, (drop/remove), webbrowser-TD|TR decide(this);
function decide(EID){
if ( EID.rowIndex >= 0)
  {if (divID.style.visibility == "visible" ) drop_me(EID);}
else
  {
  if (divID.style.visibility == "visible" ) drop_me(EID.parentNode)
  else remove_me(EID.parentNode,EID.firstChild);
  }}

//function for removing the automaticaly generated object Metric Group, called from remove_me()
function remove_mg(){
var row = document.getElementById(mg);
if (row) { row.parentNode.deleteRow(row.rowIndex) };
return;}

//remove table row from parent table and show dragging icon defined by EID, called from decide();
function remove_me(active_row,EID){
if (EID.name.match(/M$|P$/) && String(parent.frames["tree_iframe"].editType).match(/^G$|^R$/)) {
	var table_section = active_row.parentNode;
	if (active_row.parentNode.rows.length == 3 && table_section.parentNode.id == "drop_zone_metrics") { remove_mg() }
}
var table_section = active_row.parentNode;
dragLocator.icon = EID.src;
dragLocator.id = EID.alt;
dragLocator.name = EID.name;
if (active_row.id) dragLocator.mg = mg;
table_section.deleteRow(active_row.rowIndex);
if (table_section.rows.length == 1) {
	var table = table_section.parentNode;
	var object = String(table.id).match(/[^_]*$/);
	if (document.getElementById(object+"Q")) {
		tableTypes[object] = "";
		unblockMetric(object);
	}
}
object_changed();
show_me();}

//check if the clicked ikon can be shown by dragging,0 can be draged, 1 can't, called from drop_input() | drop_textarea()
function check_input_area(EID){
var typ = String(dragLocator.name.match(/[^\|]*$/));
switch (String(parent.frames["tree_iframe"].editType)) {
	case "M":
		switch (EID.id) {
			case "metric_attributes" : return (typ == "A" || typ == "Af") ? 1 : 0;
			case "metric_filter" : return (typ == "Fi") ? 1 : 0;
			case "object_metric" : return (typ.match(/M|Fa|A|Af|E|P/)) ? 1 : 0;
			default: return(1);
			}
	case "R":
		switch (EID.id) {
			case "report_filter" :	return (typ == "Fi") ? 1 : 0;
			case "report_grid"   :	return (typ == "G" || typ == 'G3') ? 1 : 0;
			case "report_format" : 	var reportType = document.getElementById('report_type').value;
						return (typ == "Fo" || typ == "F2" || typ == "F2M") ? (reportType == "grid") ?  1 : 0 : (reportType == "graph3d") ?  1 : 0;
			case "object_filter" :	return (typ.match(/M|Fa|A|Af|E/)) ?  1 : 0;
			default: return(1);
			}
	case "Fi":
		switch (EID.id) {
			case "object_filter" : return (typ.match(/M|Fa|A|E|Af|P/)) ?  1 : 0;
			default: return(1);
			}
	case "P":
		switch (EID.id) {
			case "paramObjects" 	: return (typ.match(/A|M|Af|Fa/)) ?  1 : 0;
			case "paramElements"	: return (typ.match(/E/)) ?  1 : 0;
			case "paramAttr"	: if (clearElements()) return (typ.match(/A|Af/)) ?  1 : 0;
			default: return(1);
			}

	default: return 0;
}}

//drop the object into input field, webbrowser-INPUT drop_input(this)
function drop_input(EID){
if (divID.style.visibility == "hidden") return;
var insert = dragLocator.name.split("|");
if (check_input_area(EID)) {
 EID.value = insert[0];
 if (EID.id == 'report_grid') {
 	if (insert[1] == "G") {
		var clrCntnt = (document.getElementById('report_type').value == 'grid') ? false : true;
		changeContent("grid",clrCntnt);
	} else {
		var clrCntnt = (document.getElementById('report_type').value == 'graph3d') ? false : true;
		changeContent("graph3d",clrCntnt);
	}
 }
   object_changed();
   document.getElementById(EID.id+"_id").value = dragLocator.id;
   }
} //hide_me(); function registered by body.onclick

//drop the object into textarea field, webbrowser-INPUT drop_text_area(this)
function drop_textarea(EID){
if (divID.style.visibility == "hidden") return;
var insert = dragLocator.name.match(/^[^\|]*/);
if (check_input_area(EID)) {
	insert = (dragLocator.typ == 'E') ? insert : "[" + insert + "]";
	insert = String(insert).replace(/\t/g,",");
	if (EID.value.match(/(..)$/g) == "()") EID.value = EID.value.replace(/..$/g,("("+insert+")"))
	 else EID.value = EID.value + insert;
	}
} //hide_me(); function registered by body.onclick

function drop_select(EID){
if (divID.style.visibility == "hidden") return;
var element;
var insert = dragLocator.name.match(/^[^\|]*/);
for (i=0; i<EID.length; i++) {
	if (EID.options[i].value == dragLocator.id) { return }
}
if (check_input_area(EID)) 
 { object_changed();
   EID.options[EID.length]= new Option(insert,dragLocator.id,false,false);
   }
} //hide_me(); function registered by body.onclick

//automaticaly generate the Metric Group object, if inserted metrics = 2, called from drop_me() 
function add_metric(){
var active_table = document.getElementById("drop_zone_collumn");
var new_row = active_table.insertRow(active_table.rows.length-1);
new_row.id = mg;
 var new_cell = new_row.insertCell(0);
 new_cell.className="visual_up";
 new_cell.onclick = function() {decide(this);};
 new_cell.onmouseover = function() {active(this);};
 new_cell.onmouseout = function() {passive(this);};
 var path = (document.getElementById('skin').value) ? "skins/"+document.getElementById('skin').value+"/" : "";
//  new_cell.innerHTML = "<img name='"+mg+"|"+mg_type+"' alt='"+mg+"' src='"+path+mg_img+"."+document.getElementById('imgType').value+"'>&nbsp;"+mg;}
  new_cell.innerHTML = "<img name='"+mg_local+"|"+mg_type+"' alt='"+mg+"' src='"+path+mg_img+".png'>&nbsp;"+mg_local;}

//drop the object into parent table of active_row, called from decide()
function drop_me(active_row){
var active_table = active_row.parentNode;
if ( check_table(active_row) == 0) {
 var new_row = active_table.insertRow(active_row.rowIndex); 
 if (dragLocator.mg == mg) {new_row.id = mg;} 
 var new_cell = new_row.insertCell(0);
 new_cell.className= (active_table.parentNode.id == 'drop_zone_metrics') ? "metrics_up" : "visual_up";
 new_cell.onclick = function() {decide(this);};
 new_cell.onmouseover = function() {active(this);};
 new_cell.onmouseout = function() {passive(this);};
  var insert = dragLocator.name.match(/^[^\|]*/);
  new_cell.innerHTML = "<img name='"+dragLocator.name+"' alt='"+dragLocator.id+"' src='"+dragLocator.icon+"'> " + insert;
  //hide_me(); function registered by iframe drop - body.onclick
  dragLocator.name="";
  dragLocator.mg="";
  object_changed();
}}

//move the icon when dragging - engine, called by mousemoveNS | mousemoveIE
function moveimg() {
var moveX = posleft + plusleft;
var moveY = postop + plustop;
    if (divID) {
     if (divID.style) {
	divID.style.left= moveX+"px";
	divID.style.top= moveY+"px";
      } else {
	divID.left= moveX;
	divID.top= moveY; }}}

//move the icon when dragging, webbrowser window.event.onmousemove (registered event), for NN only
function mousemoveNS(e) {
posleft = e.pageX - window.pageXOffset;
postop = e.pageY - window.pageYOffset;
if (divID.style.visibility == "visible") moveimg();
return(false); }

//move the icon when dragging, webbrowser window.event.onmousemove (registered event), for IE only
function mousemoveIE() {
       posleft = event.clientX;
       postop = event.clientY;
       if (divID.style.visibility == "visible") moveimg();
return(false); }
@


1.51
log
@elements.cgi fixies
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.50 2004/01/14 15:32:51 jiri_schmid Exp $
d141 1
a141 1
						return (typ == "Fo" || typ == "F2") ? (reportType == "grid") ?  1 : 0 : (reportType == "graph3d") ?  1 : 0;
@


1.50
log
@DP rules fixies
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.49 2004/01/09 08:04:49 jiri_schmid Exp $
d13 1
d187 1
@


1.49
log
@dynamic params fixation a code clearing
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.48 2003/12/12 12:12:16 jiri_schmid Exp $
d168 2
a169 1
		changeContent("grid",true);
d171 2
a172 1
		changeContent("graph3d",true);
@


1.48
log
@found a fixed bug manipulating dynamic params in grid
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.47 2003/12/04 14:30:19 jiri_schmid Exp $
d98 1
a98 1
row.parentNode.deleteRow(row.rowIndex);
@


1.47
log
@finishing replacing of gif files
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.46 2003/12/04 12:52:52 jiri_schmid Exp $
d65 1
a65 1
  if (dragLocator.name == mg+"|"+mg_type) {window.status="Sorry, illegal operation.";}
d104 2
a105 1
	if (active_row.parentNode.rows.length == 3) { remove_mg() }
d214 1
a214 1
  new_cell.innerHTML = "<img name='"+mg+"|"+mg_type+"' alt='"+mg+"' src='"+path+mg_img+".png'>&nbsp;"+mg;}
@


1.46
log
@img type changes implemented into javascript
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.45 2003/11/18 14:38:40 jiri_schmid Exp $
a2 1
var default_image="transparentpixel.gif";
@


1.45
log
@auto save when changing tabs implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.44 2003/11/11 14:03:19 jiri_schmid Exp $
d213 2
a214 1
  new_cell.innerHTML = "<img name='"+mg+"|"+mg_type+"' alt='"+mg+"' src='"+path+mg_img+"."+document.getElementById('imgType').value+"'>&nbsp;"+mg;}
@


1.44
log
@creating report - minor bugs fixed, seems to be working properly
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.43 2003/11/04 15:19:00 jiri_schmid Exp $
a258 5

//sets the value of hidden input element to changed (1), the item was edited
function object_changed(){parent.document.getElementById("changed").value = 1;}

function object_cleared(){parent.document.getElementById("changed").value = 0;}
@


1.43
log
@save as - modperl fixies, code improvments
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.42 2003/10/16 14:08:53 jiri_schmid Exp $
d104 1
a104 1
if (EID.name.match(/\w$/) == "M" && String(parent.frames["tree_iframe"].editType).match(/^G$|^R$/)) {
d151 1
a151 1
			case "paramObjects" 	: return (typ.match(/A|M|Af/)) ?  1 : 0;
@


1.42
log
@mod-perl implementation stage 1, rebuilding global vars in .pl to global pointers
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.41 2003/10/03 10:53:09 jiri_schmid Exp $
d186 1
a186 1
	object_changed();}
@


1.41
log
@control improvments on param and format2d-color page
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.40 2003/10/02 14:44:54 jiri_schmid Exp $
d104 1
a104 1
if (EID.name.match(/\w$/) == "M" && parent.frames["tree_iframe"].editType == "G") {
@


1.40
log
@parameters - elements implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.39 2003/09/25 15:04:17 jiri_schmid Exp $
d132 1
a132 1
			case "object_metric" : return (typ.match(/M|Fa|A|Af|E/)) ? 1 : 0;
d146 1
a146 1
			case "object_filter" : return (typ.match(/M|Fa|A|E|Af/)) ?  1 : 0;
@


1.39
log
@operational commit for martin
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.38 2003/09/24 14:59:18 jiri_schmid Exp $
d149 8
d191 1
d193 3
a195 1
for (i=0; i<EID.length; i++) { if (EID.options[i].value == dragLocator.id) return }
@


1.38
log
@graph2d improvments
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.37 2003/09/19 10:24:58 jiri_schmid Exp $
d156 2
a157 2
if (check_input_area(EID)) 
 { EID.value = insert[0];
d160 1
a160 1
		if (document.getElementById('report_type').value == "graph3d") changeContent("grid",true);
d162 1
a162 1
		if (document.getElementById('report_type').value == "grid") changeContent("graph3d",true);
@


1.37
log
@tabs implemented everywhere
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.36 2003/09/17 11:41:25 jiri_schmid Exp $
d160 1
a160 2
		if (document.getElementById('report_type').value == "graph3d") changeIcons("grid",true);
		document.getElementById('report_type').value = "grid";
d162 1
a162 2
		if (document.getElementById('report_type').value == "grid") changeIcons("graph3d",true);
		document.getElementById('report_type').value = "graph3d";
@


1.36
log
@bug fixies
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.35 2003/09/03 15:10:47 jiri_schmid Exp $
d104 3
a106 2
if (EID.name.match(/\w$/) == "M" && parent.frames["tree_iframe"].editType == "G");
if (active_row.parentNode.rows.length == 3) { remove_mg() }
@


1.35
log
@implementation of right clik menu
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.34 2003/09/01 13:35:24 jiri_schmid Exp $
d104 2
a105 3
if (EID.name.match(/\w$/) == "M" && parent.frames["tree_iframe"].editType == "G")
	if (active_row.parentNode.rows.length == 3) 
		remove_mg();
d212 1
a212 1
 new_cell.className= (dragLocator.typ == 'M') ? "metrics_up" : "visual_up";
@


1.34
log
@finishing imlementation of skins
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.33 2003/09/01 12:40:09 jiri_schmid Exp $
d213 1
a213 1
 new_cell.className="visual_up";
@


1.33
log
@skins implemented. mozilla skin - temporarily copy msie content
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.32 2003/08/28 09:26:16 jiri_schmid Exp $
d204 1
a204 1
  new_cell.innerHTML = "<img name='"+mg+"|"+mg_type+"' alt='"+mg+"' src='"+path+mg_img+"'>&nbsp;"+mg;}
@


1.32
log
@tabs.cgi speed improvmnet, visual improvment on trees, rights and some other minor improvments
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.31 2003/08/20 14:23:45 jiri_schmid Exp $
d203 2
a204 1
  new_cell.innerHTML = "<img name='"+mg+"|"+mg_type+"' alt='"+mg+"' src='"+mg_img+"'>&nbsp;"+mg;}
@


1.31
log
@access object implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.30 2003/08/05 14:40:25 jiri_schmid Exp $
d252 2
@


1.30
log
@minor code changes
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.29 2003/08/05 12:49:47 jiri_schmid Exp $
d29 1
a29 11
function active(EID){
var decided = browsertype;
if (EID.firstChild.name)
	if (EID.firstChild.name.match(/\w$/) == "M")
		if (document.getElementById('drop_zone_metrics')) decided += 4;
switch (decided) {
	case 1: {EID.style.background = "#d8f2ff"; return;}
	case 2: {EID.style.backgroundColor = "#d8f2ff"; return;}
	case 5: {EID.style.background = "#ffffd8"; return; }
	case 6: {EID.style.backgroundColor = "#ffffd8"; return;}
break;}}
d32 1
a32 22
function passive(EID){
if (browsertype > 1) {EID.style.backgroundColor = "inherit"} else {EID.style.background = ""} }

//change the backgroundColor of table special_cell, which is nedded to be highlighted, webbrowser-TD active_special(this);
function active_special(EID){
if (EID.name != "" && browsertype > 1) {EID.name = EID.style.backgroundColor;}
	else {EID.name = EID.style.background;}
if (browsertype > 1)
	if (EID.className == "metrics_special") 
		{ EID.style.backgroundColor = "#ffffd8"; return; }
	else 	{ EID.style.backgroundColor = "#d8f2ff"; return; }
else
	if (EID.className == "metrics_special") 
		{ EID.style.background = "#ffffd8"; return;}
	else	{ EID.style.background = "#d8f2ff"; return;}}

//reverse action to active_special(), webbrowser-TD passive_special(this);
function passive_special(EID){ 
 if (browsertype > 1) {EID.style.backgroundColor = "";} 
 else
 	if (EID.className == "metrics_special") {EID.style.background = "#ffffbb";}
	else {EID.style.background = "#a8daff";} }
d140 1
a140 1
						return (typ == "Fo") ? (reportType == "grid") ?  1 : 0 : (reportType == "graph3d") ?  1 : 0;
@


1.29
log
@fact input field on right pane implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.28 2003/08/05 08:02:11 jiri_schmid Exp $
d14 1
a14 1
	EID.value += (EID.value) ? ',{'+hlp[0]+"}" : "{"+hlp[0]+"}";
@


1.28
log
@bug fixies
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.27 2003/08/01 15:18:44 jiri_schmid Exp $
d161 3
a163 3
			case "metric_attributes" : return (typ == "A" || typ == "Af") ? 0 : 1;
			case "metric_filter" : return (typ == "Fi") ? 0 : 1;
			case "object_metric" : return (typ.match(/M|Fa|A|Af|E/)) ? 0 : 1;
a166 1
		var reportType = document.getElementById('report_type').value;
d168 5
a172 4
			case "report_filter" : return (typ == "Fi") ? 0 : 1;
			case "report_grid"   : return (typ == "G" || typ == 'G3') ? 0 : 1;
			case "report_format" : return (typ == "Fo") ? (reportType == "grid") ? 0 : 1 : (reportType == "graph3d") ? 0 : 1;
			case "object_filter" : return (typ.match(/M|Fa|A|Af/)) ? 0 : 1;
d177 1
a177 1
			case "object_filter" : return (typ.match(/M|Fa|A|E|Af/)) ? 0 : 1;
d180 1
a180 1
	default: return(1);
d187 1
a187 1
if (check_input_area(EID) == 0) 
d207 2
a208 2
if (check_input_area(EID) == 0) {
	insert = (dragLocator.typ == 'E') ? "{" + insert + "}" : "[" + insert + "]";
d218 1
a218 1
if (check_input_area(EID) == 0) 
@


1.27
log
@minor improvment and code changes
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.26 2003/08/01 14:23:21 jiri_schmid Exp $
d12 3
a14 2
if (dragLocator.typ == 'E') {
	EID.value += (EID.value) ? ','+dragLocator.name : dragLocator.name;
a76 1
		return false
@


1.26
log
@graph3d definition saving rules changed
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.25 2003/07/31 14:34:42 jiri_schmid Exp $
d208 3
a210 2
	if (EID.value.match(/(..)$/g) == "()") EID.value = EID.value.replace(/.$/g,("[" + insert + "])"))
	 else EID.value = EID.value + "[" + insert + "]";
@


1.25
log
@right pane implementation aproaching final stage
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.24 2003/07/31 12:16:00 jiri_schmid Exp $
d14 1
@


1.24
log
@right pane stage 3
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.23 2003/07/29 12:28:34 jiri_schmid Exp $
d9 1
d11 5
d162 1
a162 1
			case "object_metric" : return (typ.match(/M|Fa|A|Af/)) ? 0 : 1;
d176 1
a176 1
			case "object_filter" : return (typ.match(/M|Fa|A|Af/)) ? 0 : 1;
@


1.23
log
@right frame implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.22 2003/07/28 13:40:02 jiri_schmid Exp $
d5 1
a5 1
var browsertype = 0;				// 0: unknown; 1:IE; 2:NN
d13 4
a16 9
var agt= navigator.userAgent.toLowerCase();
var appVer= navigator.appVersion.toLowerCase();
browserversion= parseFloat(appVer);
var iePos= appVer.indexOf('msie');
 if (iePos!=-1) browserversion= parseFloat(appVer.substring(iePos+5, appVer.indexOf(';',iePos)));
var nav6Pos = agt.indexOf('netscape6');
  if (nav6Pos!=-1) browserversion= parseFloat(agt.substring(nav6Pos+10))
  browsertype= (iePos!=-1) ? 1 : (agt.indexOf('mozilla')!=-1) ? 2 : 0;
return(browsertype>0); }
d35 1
a35 1
if (browsertype == 2) {EID.style.backgroundColor = "inherit"} else {EID.style.background = ""} }
d39 1
a39 1
if (EID.name != "" && browsertype == 2) {EID.name = EID.style.backgroundColor;}
d41 1
a41 1
if (browsertype == 2)
d52 1
a52 1
 if (browsertype == 2) {EID.style.backgroundColor = "";} 
d61 9
a69 6
      case 1:
        document.onmousemove=mousemoveIE;
	break;
      case 2:
        document.captureEvents(Event.MOUSEMOVE);
	document.onmousemove=mousemoveNS;
d71 1
a72 1
dragLocator = top.frames['body'].dragObject;
d91 7
a97 2
  else {	divID.style.visibility="hidden";
 	window.status="";}
d106 1
@


1.22
log
@minor code improvments
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.21 2003/07/21 10:51:42 jiri_schmid Exp $
d63 1
a63 1
function init_var(i_frame) {
@


1.21
log
@report and format scripts fixies, GUI improvment
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.20 2003/07/18 10:51:02 jiri_schmid Exp $
d78 3
a80 23
var hlp = parent.document.getElementById('drop_iframe');
//var x = window.getComputedStyle(hlp,null);
//var xx = x.getPropertyCSSValue('z-index');
//alert(xx.primitiveType);
//alert(xx.getFloatValue(5));
//alert(xx.getStringValue());
//alert(hlp.currentStyle.width); //MSIE
var koef;
var wdth;
switch (browsertype) {
      case 1:
	wdth = screen.availWidth;
	break;
      case 2:
	wdth = (parent.document.width) ? parent.document.width : screen.availWidth;
	break; }
if (hlp.style) {
	plusleft = Math.round((parseInt(hlp.style.left)/100)*wdth)+6;
	plustop = 6;
} else {
	plusleft = Math.round((parseInt(hlp.left)/100)*wdth)+6;
	plustop = 6;
}}
@


1.20
log
@format3d implemented, format changed all dependencies fixed
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.19 2003/07/11 16:00:53 jiri_schmid Exp $
d200 1
a201 1
		changeIcons("grid",true);
d203 1
a204 1
		changeIcons("graph3d",true);
@


1.19
log
@graph3d next stage
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.18 2003/07/09 09:27:12 jiri_schmid Exp $
d28 3
a30 1
if (EID.firstChild.name) {if (EID.firstChild.name.match(/\w$/) == "M" && parent.frames["tree_iframe"].editType == "G") decided += 4};
d40 1
a40 1
if (browsertype == 2) {EID.style.backgroundColor = "inherit"; return;}	else  {EID.style.background = ""; return;} }
d153 1
a153 1
if (table_section.rows.length == 1 && String(parent.frames["tree_iframe"].editType) == "G3") {
d155 5
a159 1
	clearTable(table.id);
d166 1
a166 1
var typ = dragLocator.name.match(/[^\|]*$/);
d170 3
a172 3
			case "metric_attributes" : if (typ == "A" || typ == "Af") {return(0);} else return(1);
			case "metric_filter" : if (typ == "Fi") {return(0);} else return(1);
			case "object_metric" : if (typ == "M" || typ == "Fa" || typ == "A" || typ == "Af") {return(0);} else return(1);
d174 1
a174 1
		break;}
d176 1
d178 4
a181 4
			case "report_filter" : if (typ == "Fi"){return(0);} else return(1);
			case "report_grid"   : if (typ == "G") {return(0);} else return(1);
			case "report_format" : if (typ == "Fo"){return(0);} else return(1);
			case "object_filter" : if (typ == "M" || typ == "Fa" || typ == "A" || typ == "Af") {return(0);} else return(1);
d183 1
a183 1
		break;}
d186 1
a186 1
			case "object_filter" : if (typ == "M" || typ == "Fa" || typ == "A" || typ == "Af") {return(0);} else return(1);
d188 1
a188 1
		break;}
d190 1
a190 1
break;}}
d195 1
a195 1
var insert = dragLocator.name.match(/^[^\|]*/);
d197 10
a206 1
 { EID.value = insert;
@


1.18
log
@added javascript for graph3d
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.17 2003/06/25 09:14:50 jiri_schmid Exp $
d145 1
a145 1
var active_table = active_row.parentNode;
d150 5
a154 1
active_table.deleteRow(active_row.rowIndex);
a214 24

//check if the dropped object can be inserted into parent table of active_row, called from drop_me()
function check_table(active_row){
var hlp;
if (document.getElementById("drop_area_1")) {
	hlp = document.getElementById("drop_area_1").innerHTML;
	if (hlp.indexOf(dragLocator.name) == -1) return(0);
};
if (document.getElementById("drop_area_0")) {
	hlp = document.getElementById("drop_area_0").innerHTML;
	if (hlp.indexOf(dragLocator.name) > -1) { return(1)};
	var table_section = active_row.parentNode;
	var pole = dragLocator.name.split("|");
	switch (pole[1]) {
		case "A" : if (table_section.parentNode.id != "drop_zone_metrics") {return(0);} else return(1); 
		case "Af": if (table_section.parentNode.id != "drop_zone_metrics") {return(0);} else return(1);
		case "M" : if (table_section.parentNode.id == "drop_zone_metrics") {
				if (table_section.rows.length == 2) add_metric();
			 	return(0);
				} else return(1);
	default: return(1);
	}
}
}
@


1.17
log
@multiple aggregations in metric implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.16 2003/05/28 15:44:21 jiri_schmid Exp $
d28 1
a28 1
if (EID.firstChild.name) {if (EID.firstChild.name.match(/\w$/) == "M") decided += 4};
d142 3
a144 1
if (EID.name.match(/\w$/) == "M" && active_row.parentNode.rows.length == 3) remove_mg();
d214 17
a230 13
//var hlp = document.getElementById("drop_area_1").innerHTML;
//if (hlp.indexOf(divID.name) > -1) return(1);
hlp = document.getElementById("drop_area_0").innerHTML;
if (hlp.indexOf(dragLocator.name) > -1) { return(1)};
var table_section = active_row.parentNode;
var pole = dragLocator.name.split("|");
switch (pole[1]) {
	case "A" : if (table_section.parentNode.id != "drop_zone_metrics") {return(0);} else return(1); 
	case "Af": if (table_section.parentNode.id != "drop_zone_metrics") {return(0);} else return(1);
	case "M" : if (table_section.parentNode.id == "drop_zone_metrics")
			{ if (table_section.rows.length == 2) add_metric();
			  return(0);}
			else return(1);
d232 3
a234 1
}}
@


1.16
log
@control dialog when changing tabs implemnted
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.15 2003/05/23 15:03:43 jiri_schmid Exp $
d198 10
@


1.15
log
@rules and groups for attributes implemented, metric & filter checker remaked
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.14 2003/05/21 11:39:46 jiri_schmid Exp $
d276 1
a276 1
function object_changed(){document.getElementById("changed").value = 1;}
@


1.14
log
@visual and code improvment
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.13 2003/05/19 14:18:36 jiri_schmid Exp $
d77 6
@


1.13
log
@very minor fixies and code improvmetns
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.12 2003/05/13 15:19:00 jiri_schmid Exp $
d62 1
a62 4
if (i_frame)
 { divID = parent.document.getElementById("maindiv");
   var hlp = parent.document.getElementById(i_frame);}
 else { divID = document.getElementById("maindiv");}
d71 2
a72 12
if (hlp) {
	if (hlp.style) {
	 plusleft = parseInt(hlp.style.left)+6;
	 plustop = parseInt(hlp.style.top)+6;
	} else {
	 plusleft = parseInt(hlp.left)+6;
	 plustop = parseInt(hlp.top)+6;
	}
} else { 
   plusleft = 6;
   plustop = 6;}
 dragLocator = top.frames['body'].dragObject;
d74 19
@


1.12
log
@new report page seems to be fullfunctional, javascript code huge improvment
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.11 2003/05/08 15:35:51 jiri_schmid Exp $
d77 2
a78 2
	 plustop = parseInt(hlp.style.top)+6;}
	else {
d80 3
a82 2
	 plustop = parseInt(hlp.top)+6;}}
  else { 
d85 1
a85 1
dragLocator = top.frames['body'].dragObject;
@


1.11
log
@report huge improvment
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.10 2003/05/07 13:11:51 jiri_schmid Exp $
a5 1
var imgID;					//variable for manipulating image among frames
d7 1
d63 1
a63 2
 { imgID = parent.document.getElementById("mainimg");
   divID = parent.document.getElementById("maindiv");
d65 1
a65 2
 else { imgID = document.getElementById("mainimg");
 	divID = document.getElementById("maindiv");}
d84 1
a86 10
//check if the clicked ikon can be shown by dragging, 0 can be draged, 1 can't, called from show_me()
function check_show(element){
var typ = element.match(/[^\|]*$/);
switch (parent.document.getElementById("tree_iframe").name) {
 	case "G": if (typ == "A" || typ == "Af" || typ == "M") {return(0);} else return(1);
	case "M": if (typ == "A" || typ == "Af" || typ == "Fi" || typ == "M" || typ == "Fa") {return(0);} else return(1);
	case "R": if (typ == "G" || typ == "Fo" || typ == "Fi") {return(0);} else return(1);
	case "Fi":if (typ == "A" || typ == "Af" || typ == "Fa" || typ == "M") {return(0);} else return(1);
break;	}}

d88 5
a92 11
function show_me(EID){
if (check_show(EID.name) == 0){
	divID.name = EID.name;
	var hlp = divID.innerHTML.replace(/src="[^"]*/,"src='"+EID.src+"'");//replace the src of icon, which has to be viewed
	divID.innerHTML = hlp.replace(/[^>]*$/,String(EID.name).match(/^[^\|]*/));	//replace the name to be viewed
	imgID.alt = EID.alt;
	imgID.src = EID.src;
      	if (divID.style.visibility == "hidden")	{ divID.style.visibility = "visible"; moveimg();}
} else {	
	hide_me();
}}
d97 1
a97 1
  if (divID.name == mg+"|"+mg_type) {window.status="Sorry, illegal operation.";}
d106 2
a107 2
	divID.name="";
	imgID.alt = "";
d131 4
a134 1
if (active_row.id) imgID.alt = mg;
d137 1
a137 1
show_me(EID);}
d141 2
a142 2
var typ = divID.name.match(/[^\|]*$/);
switch (parent.document.getElementById("tree_iframe").name) {
d147 1
a147 1
			case "metric_metric" : if (typ == "M" || typ == "Fa" || typ == "A" || typ == "Af") {return(0);} else return(1);
d155 1
a155 1
			case "report_local_filter" : if (typ == "M" || typ == "Fa" || typ == "A" || typ == "Af") {return(0);} else return(1);
d160 1
a160 1
			case "filter_filter" : if (typ == "M" || typ == "Fa" || typ == "A" || typ == "Af") {return(0);} else return(1);
d169 1
a169 1
var insert = divID.name.match(/^[^\|]*/);
d173 1
a173 1
   document.getElementById(EID.id+"_id").value = divID.title;
d180 1
a180 1
var insert = divID.name.match(/^[^\|]*/);
d192 1
a192 1
if (hlp.indexOf(divID.name) > -1) { return(1)};
d194 10
a203 12
var pole = divID.name.split("|");
 switch (parent.document.getElementById("tree_iframe").name) {
 	case "G":
		switch (pole[1]) {
			case "A" : if (table_section.parentNode.id != "drop_zone_metrics") {return(0);} else return(1); 
			case "Af": if (table_section.parentNode.id != "drop_zone_metrics") {return(0);} else return(1);
			case "M" : if (table_section.parentNode.id == "drop_zone_metrics")
					{ if (table_section.rows.length == 2) add_metric();
					  return(0);}
					else return(1);
			default: return(1);
		break;}}}
d222 1
a222 1
 if (imgID.alt == mg) {new_row.id = mg;} 
d228 2
a229 2
  var insert = divID.name.match(/^[^\|]*/);
  new_cell.innerHTML = "<img name='"+divID.name+"' alt='"+imgID.alt+"' src='"+imgID.src+"'> " + insert;
d231 2
a232 2
  divID.name="";
  imgID.alt="";
@


1.10
log
@bug fixies, code improvment
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.9 2003/05/05 15:16:34 jiri_schmid Exp $
d169 1
@


1.9
log
@huge code improvment on client side when substituting from/to ID, minor language dependeces fixies
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.8 2003/04/18 14:52:59 jiri_schmid Exp $
d253 2
a254 1
posleft += plusleft; postop += plustop;
d257 2
a258 2
	divID.style.left= posleft+"px";
	divID.style.top= postop+"px";
d260 2
a261 2
	divID.left= posleft;
	divID.top= postop; }}}
@


1.8
log
@fixed bug in dad.js
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.7 2003/04/16 12:17:19 jiri_schmid Exp $
d100 6
a105 5
if (check_show(EID.name) == 0)
  {divID.name = EID.name;
var 	hlp = divID.innerHTML.replace(/src="[^"]*/,"src='"+EID.src+"'");//replace the src of icon, which has to be viewed
   divID.innerHTML = hlp.replace(/[^>]*$/,EID.name.match(/^[^\|]*/));	//replace the name to be viewed
   imgID.src = EID.src;
d107 3
a109 2
  }
 else {	hide_me(); } }
d148 1
a148 1
if (active_row.id) imgID.alt = active_row.id;
d230 1
a230 1
  new_cell.innerHTML = "<img name='"+mg+"|"+mg_type+"' src='"+mg_img+"'>&nbsp;"+mg;}
a234 1
imgID = parent.document.getElementById("mainimg");
d237 1
a237 1
 if (imgID.alt != "") {new_row.id = imgID.alt; imgID.alt = "";} 
d244 1
a244 1
  new_cell.innerHTML = "<img name='"+divID.name+"' src='"+imgID.src+"'> " + insert;
d247 1
@


1.7
log
@code improvment, minor fixies
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.6 2003/04/16 11:18:16 jiri_schmid Exp $
d112 2
a113 3
 if (divID.name == mg+"|A")
  {window.status="Sorry, illegal operation."}
 else {	divID.style.visibility="hidden";
@


1.6
log
@id substitution implemented in all of *_ed.pl
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.5 2003/04/14 08:39:21 jiri_schmid Exp $
d120 5
a124 1
if (divID) divID.style.visibility="hidden";
@


1.5
log
@metric load and save only under ID implemented
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.4 2003/04/10 14:21:35 jiri_schmid Exp $
d9 1
a9 1
var mg = "-METRICS-";			//the special name for automatically generated Metric object
d118 5
d225 1
a225 1
  new_cell.innerHTML = "<img name='"+mg+"|A' src='"+imgID.src.replace(/\.gif$/,"_group.gif")+"'> "+mg;}
@


1.4
log
@metric, filter, report substitutes IDs by javascript, metric & filter resets the original expresion
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.3 2003/03/14 09:23:53 jiri_schmid Exp $
a264 21

// put item(s) from drag & drop table "Zone" into relevant SELECT object "Obj"
function fill_select_by_zone(Obj,Zone) {
var selectobj = document.getElementById(Obj);
selectobj.length = 0;
var hlp = document.getElementById(Zone).innerHTML;
var pole = hlp.match(/[^"=]*[\|]/g); // --> item| 
for (i in pole) 
	{ 	pole[i] = String(pole[i]).match(/.*[^\|]/); // item| --> item, String(pole[i]) - necessary for proper functionality on IE
		selectobj.options[i]= new Option(pole[i],pole[i],false,true);}
return(true);}

// before saving select all item in SELECT objects - PageObj, COlObj, RowObj, Metrics
function fill_selects(){
if (imgID.alt != "") {add_metric(); imgID.alt=""; divID.name="";}
       fill_select_by_zone("PageObj","drop_zone_page");
       fill_select_by_zone("ColObj","drop_zone_collumn");
       fill_select_by_zone("RowObj","drop_zone_row");
       fill_select_by_zone("Metrics","drop_zone_metrics");
       return(true);
}
@


1.3
log
@solved problem with CZ chars, by forced 8bit operating XML-UTF8 files, removed unused images
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.2 2003/02/26 14:48:17 jiri_schmid Exp $
d175 3
a177 1
   object_changed();}
@


1.2
log
@when file dad.js was optimized file dad_drag_only.js arised to be used by edit.cgi a edit_tree.obj only
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.1 2003/02/26 13:21:51 jiri_schmid Exp $
d28 1
a28 1
if (EID.firstChild.name.match(/\w$/) == "M") decided += 4;
@


1.1
log
@huge javascript optimalization, also files moved to directory js
@
text
@d1 1
a1 1
// $Id: dad.js,v 1.23 2003/02/25 16:46:02 jiri_schmid Exp $
a9 1
var mg_alert = "Please, insert the Metrics group item first."; //alert message
a99 1
if (divID.name == mg + "|A") {alert(mg_alert); return(false);}
a107 21

//show the icon of clicked item, webbrowser-A show_me_ex(id,typ) | also called from remove_me()
function show_me_ex(item_id){
var EID = document.getElementById("icon"+item_id);
if (divID.name == mg + "|A") {alert(mg_alert); return(false);}
if (check_show(EID.name) == 0)
  {if (get_type(item_id) == "Af")		//get_type(item_id) is defined in tree2.js
  	{var hlp = document.act_it.act_it.text;
	//var hlp = document.getElementById("act_it").text; --> unexplaneable disfunctional in IE from 26.02.2003
	 EID.name = hlp.match(/[^\|]*$/) + "." + hlp.match(/^[^\|]*/) + "|Af";}
   divID.name = EID.name;
var 	hlp = divID.innerHTML.replace(/src="[^"]*/,"src='"+EID.src+"'");//replace the src of icon, which has to be viewed
   divID.innerHTML = hlp.replace(/[^>]*$/,EID.name.match(/^[^\|]*/));	//replace the name to be viewed
   imgID.src = EID.src;
      	if (divID.style.visibility == "hidden")	{ divID.style.visibility = "visible"; moveimg();}
  }
 else {	hide_me(); }}

function get_type(item_id){
return (parent.frames["tree_iframe"].document.getElementById("icon"+item_id)).name.match(/[^\|]*$/);
}
@

