head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2003.10.27.15.08.02;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.11.06.58.05;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.09.11.18.02;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.07.11.06.24;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.4
log
@shit, i copied Data to Net subdir, this is fix
@
text
@package Data;

use strict;
use warnings;

use XSLoader ();

our $VERSION = "1.5";

XSLoader::load 'Data', $VERSION;

1;

@


1.3
log
@merging Data to cvs
@
text
@a2 1
use 5.008;
a4 1
use Carp;
d6 1
a6 2
require Exporter;
use AutoLoader;
d8 1
a8 1
our @@ISA = qw(Exporter);
d10 1
a10 48
# Items to export into callers namespace by default. Note: do not export
# names by default without a very good reason. Use EXPORT_OK instead.
# Do not simply export all your public functions/methods/constants.

# This allows declaration	use Data ':all';
# If you do not need this, moving things directly into @@EXPORT or @@EXPORT_OK
# will save memory.
our %EXPORT_TAGS = ( 'all' => [ qw(
	null
) ] );

our @@EXPORT_OK = ( @@{ $EXPORT_TAGS{'all'} } );

our @@EXPORT = qw(
	null
);

our $VERSION = '1.0';

sub AUTOLOAD {
    # This AUTOLOAD is used to 'autoload' constants from the constant()
    # XS function.

    my $constname;
    our $AUTOLOAD;
    ($constname = $AUTOLOAD) =~ s/.*:://;
    croak "&Data::constant not defined" if $constname eq 'constant';
    my ($error, $val) = constant($constname);
    if ($error) { croak $error; }
    {
	no strict 'refs';
	# Fixed between 5.005_53 and 5.005_61
#XXX	if ($] >= 5.00561) {
#XXX	    *$AUTOLOAD = sub () { $val };
#XXX	}
#XXX	else {
	    *$AUTOLOAD = sub { $val };
#XXX	}
    }
    goto &$AUTOLOAD;
}

require XSLoader;
XSLoader::load('Data', $VERSION);

# Preloaded methods go here.

# Autoload methods go after =cut, and are processed by the autosplit program.
a12 59
__END__
# Below is stub documentation for your module. You'd better edit it!

=head1 NAME

Data - network code for sending and receiving table of data

=head1 SYNOPSIS

  use Data;

	

=head1 ABSTRACT

  This should be the abstract for Data.
  The abstract is used when making PPD (Perl Package Description) files.
  If you don't want an ABSTRACT you should also edit Makefile.PL to
  remove the ABSTRACT_FROM option.

=head1 DESCRIPTION

Stub documentation for Data, created by h2xs. It looks like the
author of the extension was negligent enough to leave the stub
unedited.

Blah blah blah.

=head2 EXPORT

None by default.

=head2 Exportable constants

  null



=head1 SEE ALSO

Mention other useful documentation such as the documentation of
related modules or operating system documentation (such as man pages
in UNIX), or any relevant external documentation such as RFCs or
standards.

If you have a mailing list set up for your module, mention it here.

If you have a web site set up for your module, mention it here.

=head1 AUTHOR

Martin Sarfy, E<lt>sarfy@@instrat.cz<gt>

=head1 COPYRIGHT AND LICENSE

Copyright 2003 by Martin Sarfy

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself. 
a13 1
=cut
@


1.2
log
@send/recv read(4096), write(4096)
@
text
@a123 2


@


1.1
log
@Data module added (empty)
@
text
@d124 2
@

