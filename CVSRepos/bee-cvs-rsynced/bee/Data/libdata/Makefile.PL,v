head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2003.10.27.15.08.04;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.11.06.58.06;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.09.11.18.02;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.07.11.06.24;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.4
log
@shit, i copied Data to Net subdir, this is fix
@
text
@use ExtUtils::MakeMaker;

my $define = '-DDUFF';

if ($^O eq 'VMS') {  # Old VAXC compiler can't handle Duff's device
    require Config;
    $define =~ s/\s+-DDUFF// if $Config::Config{'vms_cc_type'} eq 'vaxc';
}

my $libs = "";

WriteMakefile(
	NAME		=> 'libdata',
#	LINKTYPE	=> 'static',
	DEFINE		=> $define,


	LIBS		=> ["$libs"],
	INC			=> "",

	INST_ARCHLIB=> '.',
	SKIP		=> [qw(dynamic dynamic_lib dlsyms)],
	OBJECT		=> '$(O_FILES)',
	clean		=> {'FILES' => "libdata$LIB_EXT"},
	H			=> [qw(data.h $(PERL_INC)/config.h)],
	C			=> [qw(data.c)],
);

sub MY::constants {
  package MY;
  my $r = shift->SUPER::constants();
  if ($^O eq 'VMS') {
    $r =~ s/^INST_STATIC =.*$/INST_STATIC = libdata\$(LIB_EXT)/m
  }
  return $r;
}

sub MY::post_constants {
  package MY;
  if ($^O eq 'VMS') {
    shift->SUPER::post_constants();
  } else {
'
INST_STATIC = libdata$(LIB_EXT)
'
  }
}

sub MY::top_targets {
    my $noecho = shift->{NOECHO};
    
    my $r = '
all :: static
	' . $noecho . '$(NOOP)

config ::
	' . $noecho . '$(NOOP)

lint:
	lint -abchx $(LIBSRCS)

pureall:

';
    $r .= '
# This is a workaround, the problem is that our old GNU make exports
# variables into the environment so $(MYEXTLIB) is set in here to this
# value which can not be built.
libdata/libdata.a:
	' . $noecho . '$(NOOP)
' unless $^O eq 'VMS';

    return $r;
}
@


1.3
log
@merging Data to cvs
@
text
@d1 3
d5 4
a8 1
use ExtUtils::MakeMaker;
d10 1
a10 1
$Verbose = 1;
d13 14
a26 3
    NAME   => 'Data::libdata',
    SKIP   => [qw(all static static_lib dynamic dynamic_lib)],
    clean  => {'FILES' => 'libdata$(LIBEEXT)'},
d29 20
d50 3
a52 1
	'
d54 1
d56 2
a57 1
pure_all :: static
d59 2
a60 1
static ::       libdata$(LIB_EXT)
d62 1
a62 3
libdata$(LIB_EXT): $(O_FILES)
	$(AR) cr libdata$(LIB_EXT) $(O_FILES)
	$(RANLIB) libdata$(LIB_EXT)
d65 7
a71 1
}  
d73 2
@


1.2
log
@send/recv read(4096), write(4096)
@
text
@a26 1

@


1.1
log
@Data module added (empty)
@
text
@d27 1
@

