head	1.3;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.06.03.13.16.16;	author numberone;	state dead;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.40.58;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.40.58;	author michald;	state Exp;
branches;
next	;


desc
@@


1.3
log
@0.9.1 -- version merge
@
text
@# $Id: UNIX.pm,v 1.2 2002/09/26 07:52:42 numberone Exp $

package Net::UNIX;
use strict;

use POSIX;
use IO::Socket::UNIX;

use base "Net";

sub server {
	my($pkg,$file) = @@_;
	unlink $file;
	my $sock = IO::Socket::UNIX->new(
			Type=>SOCK_STREAM,
			Listen=>SOMAXCONN,
			Local=>$file) or die "$!";
	return __PACKAGE__->Net::_create($sock,$sock->hostpath(),"");
}

sub accept {
	my($net,$block) = @@_;
	my $client_sock = undef;
	if($block) {
		$client_sock = $net->{sock}->accept() or die;
	} else {
		die "zatim non block accept nee";
	}
	fcntl($client_sock,F_SETFL(),O_NONBLOCK());
	return __PACKAGE__->Net::_create(
				$client_sock,$client_sock->peerpath(),"");
}

sub connect {
	my($pkg,$file) = @@_;
	my $sock = IO::Socket::UNIX->new(
			Type => SOCK_STREAM, 
					Timeout => 5, 
			Peer => $file) or die "$!";
	fcntl($sock,F_SETFL(),O_NONBLOCK());
	return __PACKAGE__->Net::_create($sock,$sock->peerpath(),"");
}


sub socketpair {
	my($socka,$sockb) = IO::Socket::UNIX->socketpair(
			AF_UNIX, SOCK_STREAM, PF_UNSPEC) or die "socketpair: $!";
	fcntl($socka,F_SETFL(),O_NONBLOCK());
	fcntl($sockb,F_SETFL(),O_NONBLOCK());
	my $a = __PACKAGE__->Net::_create($socka,"","");
	my $b = __PACKAGE__->Net::_create($sockb,"","");
	return($a,$b);
}


sub sysread {
	my($net,$p_buff) = @@_;
	my $bytes = sysread($net->{sock},$$p_buff,32768,length($$p_buff));
	return $bytes ? $bytes : undef if(defined $bytes);
	return 0; # fixme: die unless(EAGAIN|EWOULDBLOCK)
}

sub syswrite {
	my($net,$p_buff,$offset) = @@_;
	my $length = length($$p_buff) - $offset;
	return syswrite($net->{sock},$$p_buff,$length,$offset);
}

sub close {
	my($net) = @@_;
	unlink $net->{sock}->hostpath() if defined $net->{peer};
}

1;

@


1.2
log
@version merging with my cvs
@
text
@d1 1
a1 1
# $Id: UNIX.pm,v 1.1.1.1 2002/09/24 01:40:58 michald Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Id: UNIX.pm,v 1.2 2002/08/23 22:43:09 martin Exp $
d75 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
