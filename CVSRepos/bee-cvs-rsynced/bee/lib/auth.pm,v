head	1.8;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2003.08.22.12.55.25;	author numberone;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.12.23.31.30;	author numberone;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.17.23.38.17;	author numberone;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.05.15.39.46;	author numberone;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.28.20.32.31;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.27.13.54.52;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.40.58;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.40.58;	author michald;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fix
@
text
@# $Id: auth.pm,v 1.7 2003/03/12 23:31:30 numberone Exp $ 

package auth;

use Msg;
use url;

use Data::Dumper;
use strict;

our $auth;

sub new {
	my($pkg,@@list) = @@_;

	$auth = bless {
		list => \@@list,
		msg  => undef,
	},$pkg;

	$auth->connect();

	return $auth;
}

sub connect {
	my($self) = @@_;
	return if defined $self->{msg};

	my @@auths = @@{$self->{list}};
	my $msg = undef;

	die unless @@auths;

	do {
		my $i = int rand @@auths;
		my($host,$port) = ($auths[$i],2332);
		($host,$port) = ($`,$') if($host =~ /\:/);

		print "connecting to $host\:$port authority";
		splice @@auths,$i,1;
		$msg = Msg->connect("SSL",$host,$port);
		print $msg ? "\n" : ": failed\n";
	} while(not $msg and @@auths);

	die "fatal: no live authority" unless $msg;

	$self->{msg} = $msg;
}

sub query {
	my($self,$fx,@@args) = @@_;
	my $result = undef;

	# try it few times
	for(my $i=0;$i<=@@{$self->{list}};$i++) {
		$self->connect();
		eval {
			$result = $self->{msg}->call($fx,@@args);
		};
		print "auth_query: (result=".(defined $result ? $result : '<undef>').
			  ")\n$@@---\n" if($@@);
		return $result if defined $result;
	}
	die "fatal: can't ask??";
}

# =================================================================
#  sources.pm lib was moved here 


sub hosts { @@{$auth->query('hosts')} }


# todo: cache results ?

sub dads { 
	my @@keys = @@{$auth->query('dads')};
	my @@dads = ();
	foreach(@@keys) {
		my $dad = url->key($_);
		push @@dads, {
			host => $dad->{host},
			port => $dad->{port},
			key  => $_,
		};
	}
	return @@dads;
}

sub sources	{ @@{$auth->query('sources')} }

# read($user,$dad,$source); - can we ($user==undef) or $user read $source on 
# 							  $dad? returns undef/"reason why not"
sub read {
	my($user,$dad,$url) = @@_;
	my @@source = url::split($url);
	my($table,@@fields) = splice(@@source,6);
	my $source = url::construct(@@source);

	my $read = $auth->query('read',defined $user ? $user : "",$dad,$source);

	return $read;
}


sub tables {
	my($dadname,$url,$select) = @@_;
	my($host,$port) = split /\:/,$dadname;
	die unless($host and $port);
#	my $dad = $job->otec(host=>$host,port=>$port);
#	my $tables = $dad->tables($url,$select ? $select : '');
#	die "error: $tables" if(ref $tables ne 'ARRAY');
#	return @@$tables;
	return ();
}


sub tablequery {
	my($dbi) = @@_;
	return $auth->query('tablequery',$dbi);
}

1;
@


1.7
log
@perl Net library removed
replaced by libNet-1.2
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.6 2003/02/17 23:38:17 numberone Exp $ 
a124 4

1;


@


1.6
log
@demo certificate + some keys
certs/newkey.sh - script for automated key generation
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.5 2003/02/05 15:39:46 numberone Exp $ 
d6 1
d11 2
d16 1
a16 1
	my $self = bless {
d21 1
a21 1
	$self->connect();
d23 1
a23 1
	return $self;
d48 1
a48 1
	return $self->{msg} = $msg;
d68 57
@


1.5
log
@SSL to INET - for testing...
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.4 2002/09/28 20:32:31 numberone Exp $ 
d11 1
a11 1
	my($pkg,$list,$cert,$key) = @@_;
d14 1
a14 3
		list => $list,
		cert => $cert,
		key  => $key,
d39 1
a39 4
		eval { # fix: move eval to Net.pm !
#			$msg = Msg->connect("SSL",$host,$port,$self->{cert},$self->{key});
			$msg = Msg->connect("INET",$host,$port);
		};
@


1.4
log
@hardcoded sources finally removed
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.3 2002/09/27 13:54:52 numberone Exp $ 
d42 2
a43 1
			$msg = Msg->connect("SSL",$host,$port,$self->{cert},$self->{key});
@


1.3
log
@tablequery, bee->dad msg
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.2 2002/09/26 07:52:42 numberone Exp $ 
d11 1
a11 1
	my($pkg,$auth,$cert,$key) = @@_;
d14 1
a14 1
		list => $auth,
d62 2
a63 1
		print "DBG $@@\n" if($@@);
@


1.2
log
@version merging with my cvs
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.1.1.1 2002/09/24 01:40:58 michald Exp $ 
d27 2
d58 1
a58 1
		$self->connect() unless defined $self->{msg};
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Id: auth.pm,v 1.4 2002/08/23 22:43:09 martin Exp $ 
d68 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
