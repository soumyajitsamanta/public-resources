head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.10.23.07.57.39;	author numberone;	state dead;
branches;
next	1.2;

1.2
date	2003.07.08.17.55.33;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.07.11.09.59;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.3
log
@FreezeThaw dependency removed
@
text
@# $Id: perlData.pm,v 1.2 2003/07/08 17:55:33 numberone Exp $
# Data.pm
#
# Copyright (c) 2003 Martin Sarfy <sarfy@@instrat.cz>

=head1 NAME

Data -- network code for sending data tables

=head1 SYNOPSIS

    use Data; # bee 1
    $server = Data->listen($port,...);
    $bee1 = $server->accept(1);
    $bee1->send(@@row);

    use Data; # bee 2
    $bee2 = Data->connect($host,$port);
	while(my @@row = $bee2->recv) {}

=head1 DESCRIPTION

=cut


package Data;

use Net;

sub listen {
	my($pkg,$port,$bzip,$bfish) = @@_;
	my $server = Net->server("INET",$port);
	return undef unless $server;
	bless { net => $server }, $pkg;
}

sub connect {
	my($pkg,$host,$port,$bzip,$bfish) = @@_;
	my $net = Net->connect("INET",$host,$port);
	return undef unless $net;
	bless {net => $net}, $pkg;
}

sub accept {
	my $net = shift->{net}->accept(0);
	return undef unless $net;
	bless {net => $net}, __PACKAGE__;
}

# should be rewritten to optimized C
# field format:
#          'short' == '<5>short'  # length(short) < 192
# 'very long text' == '<254><32-bit length>very long text'
#            undef == '<255>'
# [ todo: int, date, float, ... types support (codes 192-253) ]

sub send {
    my $output = shift;
                                                                                
    my $line = "";
    foreach(@@_) {
        if(not defined $_) {
            $line .= pack("C",255);
            next;
        } elsif(length($_) < 192) {
            $line .= pack("C",length($_));
        } else {
            $line .= pack("CN",254,length($_));
        }
        $line .= $_;
    }
    $output->{net}->write($line);
}
                                                                                
# should be rewritten to optimized C
sub recv {
    my $input = shift;
                                                                                
    my $peek;
    until(($peek = $input->{net}->peek())) { }
    return () if($peek < 0);
                                                                                
    my $line = $input->{net}->read();
                                                                                
    my @@array = ();
    my $offset = 0;
    while($offset < length($line)) {
        my $length = unpack("C",substr($line,$offset++,1));
        if($length < 192) {
            # ok
        } elsif($length == 192) {
            push @@array,0;
            next;
        } elsif($length == 254) {
            push @@array,undef;
            next;
        } elsif($length == 255) {
            $length = unpack("N",substr($line,$offset,4));
            $offset += 4;
        }
        push @@array, substr($line,$offset,$length);
        $offset += $length;
    }
                                                                                
    return @@array;
}

1;

@


1.2
log
@send/recv, in C, optimized, LEN_ code, small integers
@
text
@d1 1
a1 1
# $Id: perlData.pm,v 1.1 2003/07/07 11:09:59 numberone Exp $
@


1.1
log
@Net -- moving from Net-1.x directories to 'Net/' directory
@
text
@d1 1
a1 1
# $Id$
d32 4
d37 6
a42 1
	my $server = Net->server("INET",++$port);
d44 4
a47 1
	bless {net => $server}, $pkg;
d50 57
@

