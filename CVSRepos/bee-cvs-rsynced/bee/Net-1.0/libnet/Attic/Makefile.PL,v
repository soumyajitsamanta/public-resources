head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.08.11.06.34.19;	author numberone;	state dead;
branches;
next	1.1;

1.1
date	2003.02.05.15.46.36;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removing old dir Net-1.0
@
text
@use ExtUtils::MakeMaker;

my $define = '-DNet -DDUFF';
$define .= ' -DWIN32 -DPERL_STATIC_SYMS' if ($^O eq 'MSWin32');

#my $sockc = ($^O eq 'MSWin32') ? 'winsock.c' : 'bsdsock.c';

if ($^O eq 'VMS') {  # Old VAXC compiler can't handle Duff's device
    require Config;
    $define =~ s/\s+-DDUFF// if $Config::Config{'vms_cc_type'} eq 'vaxc';
}

WriteMakefile(
    NAME      => 'libnet', # (doesn't matter what the name is here) oh yes it does
#    LINKTYPE  => 'static',
    DEFINE    => $define,
    INC       => '-I$(PERL_INC)', # force PERL_INC dir ahead of system -I's
    INST_ARCHLIB => '.',
    SKIP      => [qw(dynamic dynamic_lib dlsyms)],
    OBJECT    => '$(O_FILES)',
    clean     => {'FILES' => "libnet$LIB_EXT"},
    H         => [qw(net.h $(PERL_INC)/config.h)],
    C         => [qw(net.c unix.c inet.c)],
);

sub MY::constants {
  package MY;
  my $r = shift->SUPER::constants();
  if ($^O eq 'VMS') {
    $r =~ s/^INST_STATIC =.*$/INST_STATIC = libnet\$(LIB_EXT)/m
  }
  return $r;
}

sub MY::post_constants {
  package MY;
  if ($^O eq 'VMS') {
    shift->SUPER::post_constants();
  } else {
'
INST_STATIC = libnet$(LIB_EXT)
'
  }
}

sub MY::top_targets {
    my $noecho = shift->{NOECHO};
    
    my $r = '
all :: static
	' . $noecho . '$(NOOP)

config ::
	' . $noecho . '$(NOOP)

lint:
	lint -abchx $(LIBSRCS)

';
    $r .= '
# This is a workaround, the problem is that our old GNU make exports
# variables into the environment so $(MYEXTLIB) is set in here to this
# value which can not be built.
libnet/libnet.a:
	' . $noecho . '$(NOOP)
' unless $^O eq 'VMS';

    return $r;
}
@


1.1
log
@libnet-1.0, README
@
text
@@

