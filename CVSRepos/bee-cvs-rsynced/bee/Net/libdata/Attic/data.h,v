head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2003.10.27.15.28.43;	author numberone;	state dead;
branches;
next	1.1;

1.1
date	2003.10.27.14.58.59;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.2
log
@cleaning Data out from Net
@
text
@/*
 * C<Net> is nonblocking, autoflushing communication endpoint. 
 *
 * C<Net::INET> is connection over TCP/IP network, C<Net::UNIX> is for
 * unix socket based communication and C<Net::SSL> is TCP/IP using
 * OpenSSL layer.
 *
 * Copyright (c) 2003 Martin Sarfy <sarfy@@instrat.cz> */

#ifndef HEADER_DATA_H_INCLUDED
#define HEADER_DATA_H_INCLUDED


#ifdef __cplusplus
extern "C" {
#endif

#ifndef null
#define null 0L
#endif

/* length byte codes: */
#define LEN_RESERVED 0
// 1-127 -- length
#define LEN_MAXLEN	 127
// next 4 bytes with length, network order
#define LEN_32BIT	 128
// reserved 0
#define LEN_RSVD0	 129
// 130..139 => 0..9 numbers
#define LEN_0		 130
#define LEN_9		 139
// 140..149 => 00..09 STRINGS !
#define LEN_00		 140
#define LEN_09		 149
// 140..239 => 00..99 numbers
#define LEN_10		 150
#define LEN_99		 239
// reserved range: 240-252
#define LEN_EMPTY	 253
#define LEN_UNDEF 	 254
// row separator
#define LEN_ENDOFROW 255


struct DataStruct {
	int	sock;
	int port;

	int	serversock;
	void *sin;

	// blowfish key
	// bzip table
	// peer name ?

	void *buffer;
	int	 pool;
	int	 len;
	int	 offset; // pro Data.xs -- cast bufferu jsme uz mozna vratili

	void *send_buff;
	int	 send_pool;
	int  send_len;
};

typedef struct DataStruct * Data;

Data data_listen(int port); /* bzip, blowfish */
int  data_accept(Data server);
Data data_connect(const char *host,int port); /* bzip, blowfish */
int  data_recv(Data data);
int  data_is_row(Data data);
int	 data_extract(Data data,void **buff,int *len);

//void  data_send(Data data,const char *buffer,int len);
void data_send_init(Data data,int cols);
void data_send_append(Data data,char *col,int len);
void data_send_flush(Data data);

void data_close(Data data);

#ifdef __cplusplus
}
#endif


#endif

@


1.1
log
@Data: files added
@
text
@@

