head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2003.08.11.06.53.58;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.1
log
@merging old version to cvs
@
text
@<?xml version="1.0" encoding="ISO-8859-2"?>
<script lang="perl" name='time'>
<description>
---
</description>

<input name="domain" type='stream' />

<output name="clf" type='stream'/>

<code>
<![CDATA[
#	Module for parsing CLF stream
#		This module is parsing the date and time
#	Input: CLF stream with parsed URL, file, hostname, domains
#	Output: CLF stream with parsed URL, file, hostname, domain1 and domain2, time and date
#	Last revision:
#		2003-05-10	xpav	new

use strict;

#	hash for converting the month into numeric value
my %monthNMR = (
							'Jan','1',
							'Feb','2',
							'Mar','3',
							'Apr','4',
							'May','5',
							'Jun','6',
							'Jul','7',
							'Aug','8',
							'Sep','9',
							'Oct','10',
							'Nov','11',
							'Dec','12',
						);

my $line = 0;

while(my @@row = $domain->fetch) {

	print "$line...\n" if((++$line % 1000) == 0);

	#	input stream
	my($host,$domain2,$domain1,$date,$time,
	   $path,$file_name,$extension,$status,$bytes) = @@row;

	#	date and time
	my($year,$month,$day,$hour,$minute);

	#	extracting time
	($day,$month,$year,$hour,$minute) = 
	 ("$date $time" =~ /^(\d\d)\/(\w\w\w)\/(\d\d\d\d)\s(\d\d):(\d\d):(\d\d)$/);
	
	$minute = ($minute - ($minute % 10));
	$minute = "00" if ($minute == 0);

	$clf->put($host,$domain2,$domain1,$day,$monthNMR{$month},$year,$hour,
			  $minute,$path,$file_name,$extension,$status,$bytes)
						if ($day && $month && $year && $hour && $minute);

#	print "$host \"$domain2\" \"$domain1\" $day $monthNMR{$month} ",
#	"$year $hour $minute $path \"$file_name\" \"$extension\" $status $bytes\n" 

}
]]>
</code>

</script>

@
