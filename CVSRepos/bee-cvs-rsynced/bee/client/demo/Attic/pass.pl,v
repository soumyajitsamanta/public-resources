head	1.6;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2003.11.06.15.23.53;	author numberone;	state dead;
branches;
next	1.5;

1.5
date	2003.02.17.23.38.13;	author numberone;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.05.17.17.20;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.05.15.39.46;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.34.11;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.34.11;	author michald;	state Exp;
branches;
next	;


desc
@@


1.6
log
@debug prints removed
@
text
@# pass
#
# in	shell	scalar
# in	passwd	[id,who,name]
# out	output	[login,gcos,uid]
# out	count	scalar
#
# prvni vstup je scalar $shell, druhy je tabulka s polozkami
# jako v /etc/passwd. pocita pocet lidi pouzivajicich $shell
# a soucasne preposila login, gcos uid a shell na svuj prvni
# vystup. na druhy vystup da na konci pocet uzivatelu


my($shell,$passwd, $output,$count_p) = @@_;
use Data::Dumper;

my $count = 0;

print "pass script\n";
while(my @@entry = $passwd->fetch) {
	$count++ if($entry[6] eq $shell);
	$output->put($entry[0],$entry[2],$entry[4],$entry[6]);
}

$$count_p = $count;


@


1.5
log
@demo certificate + some keys
certs/newkey.sh - script for automated key generation
@
text
@@


1.4
log
@dad - new version
@
text
@d1 13
@


1.3
log
@SSL to INET - for testing...
@
text
@a7 1
	print "pass script running\n";
@


1.2
log
@version merging with my cvs
@
text
@d6 1
d8 1
@


1.1
log
@Initial revision
@
text
@d13 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
