head	1.5;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2003.11.06.12.04.20;	author numberone;	state dead;
branches;
next	1.4;

1.4
date	2003.06.03.13.16.14;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.12.23.27.49;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.34.11;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.34.11;	author michald;	state Exp;
branches;
next	;


desc
@@


1.5
log
@renaming .xml to .scheme and .bee
@
text
@<?xml version="1.0" encoding="ISO-8859-2"?>
<script lang="perl" name='find'>
<description>
cte z prvniho vstupu [login,uid,gcos,shell] a jestlize je
uid vetsi nez obsah druheho scalar vstupu $from, vyhleda
v tabulce urcene tretim %dbi vstupem zda shell daneho
uzivatele je znam, tj. je v tabulce %dbi uvedeno jeho plne
jmeno. jestli ne, posle [uid,shell] na prvni vystup @@invalid,
je-li znam, posle jeho gcos a nazev shellu na druhy 
vystup @@who.
</description>

<input name="user" type='stream' arity='4' />
<input name="from" type='scalar' />
<input name="dbi"  type='dbi' fields="db table bin name"/>

<output name="invalid" type='stream' fields='uid shell' />
<output name="who"     type='stream' fileds='gcos shell' />

<code>
use Data::Dumper;

my($db,$table,$bin,$name) = @@$dbi;

while(my @@entry = $user->fetch) {
	my($login,$uid,$gcos,$shell) = @@entry;

#	print "find: $login\n";
	print Dumper("find: ",@@entry);

	next if($uid &lt; $from);

	# lookup in $shellname of $shell in $db
	my $shellname = $db->selectrow_array(
		"SELECT $name FROM $table WHERE $bin=?",undef,$shell);

	if(defined $shellname) {
		$who->put($gcos ? $gcos : $login,$shellname);
	} else {
		$invalid->put($uid,$shell);
	}
}

</code>

</script>

@


1.4
log
@0.9.1 -- version merge
@
text
@@


1.3
log
@demo.xml replaces task.xml
@
text
@d21 2
d25 5
a29 1
while(my($login,$uid,$gcos,$shell) = $user->fetch) {
@


1.2
log
@version merging with my cvs
@
text
@d1 2
a2 1
<script name='find'>
d13 3
a15 1
<input type='stream' arity='4' />
d17 2
a18 1
<input type='scalar' />
d20 2
a21 1
<input type='dbi' />
d23 1
a23 1
<output type='stream' fields='uid shell' />
d25 1
a25 1
<output type='stream' fileds='gcos shell' />
d27 12
a38 1
<code lang='perl' include='find.pl' />
@


1.1
log
@Initial revision
@
text
@d25 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
