head	1.5;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2003.11.06.12.04.20;	author numberone;	state dead;
branches;
next	1.4;

1.4
date	2003.06.03.13.16.14;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.12.23.27.49;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.34.11;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.34.11;	author michald;	state Exp;
branches;
next	;


desc
@@


1.5
log
@renaming .xml to .scheme and .bee
@
text
@<?xml version="1.0" encoding="ISO-8859-2"?>
<script lang="perl" name="pass">
<description>
prvni vstup je scalar $shell, druhy je tabulka s polozkami
jako v /etc/passwd. pocita pocet lidi pouzivajicich $shell
a soucasne preposila login, gcos uid a shell na svuj prvni 
vystup. na druhy vystup da na konci pocet uzivatelu
pouzivajicich $shell
</description>

<input name="shell" type='scalar'/>
<input name="passwd" type='stream' arity='7' />

<output name="output" type='stream' arity='4' />
<output name="count" type='scalar' />

<code>
$count = 0;

while(my @@entry = $passwd->fetch) {
	$count++ if($entry[6] eq $shell);
	$output->put($entry[0],$entry[2],$entry[4],$entry[6]);
	print "pass: ".$entry[0]."\n";
}

</code>
</script>

@


1.4
log
@0.9.1 -- version merge
@
text
@@


1.3
log
@demo.xml replaces task.xml
@
text
@d23 1
@


1.2
log
@version merging with my cvs
@
text
@d1 2
a2 2
<script>
<name>pass</name>
d11 2
a12 3
<input type='scalar'/>
<input type='stream' arity='7'>
</input>
d14 2
a15 1
<output type='stream' arity='4' />
d17 2
a18 1
<output type='scalar' />
d20 4
a23 1
<code lang='perl' include='pass.pl' />
d25 1
@


1.1
log
@Initial revision
@
text
@d22 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
