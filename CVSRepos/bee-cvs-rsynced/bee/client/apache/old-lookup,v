head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2003.08.11.06.53.57;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.1
log
@merging old version to cvs
@
text
@<?xml version="1.0" encoding="ISO-8859-2"?>
<script lang="perl" name='lookup'>
<description>
Lookup BEE

Reads from Lookup table (id,value) pairs into %lookup hash.
Re-sends Values to Output with first row changed from 'value' to 'id'.
If 'id' does not exist, it creates one and sends it to NewLookup table.
</description>

<input name="Values"  type='stream' />
<input name="Keys"    type='stream' />
<input name="Lookup"  type='stream' arity="2" />

<output name="Output"    type='stream' />
<output name="NewLookup" type='stream' arity="2" />

<code>
<![CDATA[

my $max = 0;
my %lookup;

while(my($id,$value) = $Lookup->fetch) {
	$lookup{$value} = $id;
	$max = $id if($id > $max);
}
print "LOOKUP: ",(scalar keys %lookup)," lookups fetched\n";

while(my($value,@@next) = $Values->fetch) {
	my $id = $lookup{$value};
	unless($id) {
		$id = ++$max;
		$lookup{$value} = $id;
		$NewLookup->put($id,$value);
	}
	$Output->put($id,@@next);
}

]]>
</code>

</script>

@
