head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2004.06.08.15.11.58;	author numberone;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.10.13.15.44;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.08.10.26.56;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.06.12.06.33;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.15.08.22.05;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
Prepare API

every bee must call ->prepare() before ->put()/->fetch()

or they can call ->prepare_sql("SELECT/INSERT ...")

->put() is identical to new ->execute()
@
text
@<?xml version="1.0" encoding="ISO-8859-2"?>

<task>
<otec host='localhost' port='2333' >

    <bee name='gen' script='gen.bee' >
		<input input='1' url='scalar://'>100000</input>
	</bee>

    <bee name='eat' script='eat.bee' />

</otec>

<link>
	<src  bee='gen' output='1' />
	<dest bee='eat' input ='1' />
</link>

</task>


@


1.4
log
@
path-17x100k benchmark

some dad cleanups
@
text
@d7 1
a7 1
		<input input='1' url='scalar://'>1000000</input>
@


1.3
log
@
demo with two paths of data flow, of different lengths
@
text
@d7 1
a7 1
		<input input='1' url='scalar://'>30</input>
@


1.2
log
@renaming .xml to .scheme and .bee
@
text
@d7 1
a7 1
		<input input='1' url='scalar://'>30000</input>
@


1.1
log
@rename
@
text
@d6 1
a6 1
    <bee name='gen' script='gen.xml' >
d10 1
a10 1
    <bee name='eat' script='eat.xml' />
@

