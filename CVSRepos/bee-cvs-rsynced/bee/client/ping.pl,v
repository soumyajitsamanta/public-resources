head	1.3;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2002.09.27.13.54.48;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.34.04;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.34.04;	author michald;	state Exp;
branches;
next	;


desc
@@


1.3
log
@tablequery, bee->dad msg
@
text
@#!/usr/bin/perl -w
# $Id: ping.pl,v 1.2 2002/09/26 07:52:42 numberone Exp $

use Data::Dumper;

use lib "../lib";
use libBee;

my $job = new libBee;

my $otec = $job->otec(host=>'localhost',port=>2333);

exit;

__END__

my $script1 = <<EOF;
my(\$file,\$dbi,\$select, \$out,\$count) = \@@_;
my \$i = 0;
while(my \@@array = \$select->fetch()) {
	print join(" ",\@@array),"\n";
	\$i++;
}
\$\$\$count = \$i;
EOF

my $script2 = <<EOF;
my(\$stream,\$factor,\$out,\$fill) = \@@_;
for my \$i (1..20) {
	\$out->put(\$i,2*\$i);
	\$fill->put(\$i,2*\$i,4*\$i);
}
return "ahoj slunicko";
EOF

my $bee1 = $otec->bee("bee1",
			[qw/stream dbi stream/],
			[qw/stream scalar/],
			\$script1);
print "bee ".$bee1->{id}." created\n";

my $bee2 = $otec->bee("bee2",
			[qw/stream scalar/],
			[qw/stream stream/],
			\$script2);
print "bee ".$bee2->{id}." created\n";

$job->link($bee1,1,$bee2,1);
$bee2->input(2,type=>'scalar',
			   content=>12.5);
$bee1->input(1,type=>'file',
			   file=>"/etc/passwd",
			   separator=>':');
$bee2->output(1,type=>'file',
				file=>'tmp',
				create=>"::"); # perm:uid:gid

$bee1->input(2,type=>'dbi',
			   dbi=>'dbi:mysql:bee',
	   		   user=>'bee',
	   		   password=>'honey',
	   		   args=>['shell','bin','name']);

$bee1->input(3,type=>'select',
			   dbi=>'dbi:mysql:bee',
			   user=>'bee',
			   password=>'honey',
			   select=>'name,bin',
			   from=>'shell',
				);

$bee2->output(2,type=>'select',
				dbi=>'dbi:mysql:bee',
				user=>'bee',
				password=>'honey',
				into=>'plky',
				create=>
					"CREATE TABLE `plky` (`jednicka` int,`dva` int,`tri` int)",
				arity=>3);

$bee1->letfly();
$bee2->letfly();

$otec->wait($bee1,$bee2);

print "result: ",$bee1->output(2),"\n";

#print "bee1 status: ",$bee1->status,"\n";
#print $bee2->status;


@


1.2
log
@version merging with my cvs
@
text
@d2 1
a2 1
# $Id: ping.pl,v 1.1.1.1 2002/09/24 01:34:04 michald Exp $
d6 1
a6 1
use lib ".";
d11 1
a11 1
my $otec = $job->otec(host=>'localhost:2330');
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: ping.pl,v 1.2 2002/08/25 12:52:53 martin Exp $
d90 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
