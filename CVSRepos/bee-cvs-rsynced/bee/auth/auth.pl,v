head	1.12;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2003.11.10.14.40.03;	author numberone;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.12.09.12.29;	author numberone;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.22.12.54.25;	author numberone;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.07.11.06.24;	author numberone;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.13.15.39;	author numberone;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.12.23.26.35;	author numberone;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.17.23.34.48;	author numberone;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.05.15.39.40;	author numberone;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.29.14.47.16;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.29.12.58.33;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.34.02;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.34.02;	author michald;	state Exp;
branches;
next	;


desc
@@


1.12
log
@ok, once again, use lib 'sarfy' removed
@
text
@#!/usr/bin/perl 
# $Id: auth.pl,v 1.11 2003/09/12 09:12:29 numberone Exp $

use lib '../lib';
use url;

use lib '.';
use conf;
use slave;

use Data::Dumper;
use strict;


# read configuration
our($conf,$auth,$dads,$sources,$query,$passwd,$acl) = new conf("./conf.xml");

my $server = Msg->server('SSL',conf->port) or die;

my @@slave = ();

# FIX daemonize

print "auth listenning on port ".$server->peer."\n";

while(1) {
	Msg->select();#$server,(map $_->{msg},@@slave));

	my $slave;

	if($slave = $server->accept(0)) {
		my $new = new slave($slave);
		push @@slave,$new if $new;
	}

	foreach $slave (@@slave) {
		my $peek = $slave->peek;
		if($peek > 0) { $slave->serve() }
		if($peek < 0) { $slave->close() }
	}
	@@slave = grep { not $_->{closed} } @@slave;

}



@


1.11
log
@user@@pass url
@
text
@d2 1
a2 3
# $Id: auth.pl,v 1.10 2003/08/22 12:54:25 numberone Exp $

use lib '/home/sarfy/perl';
@


1.10
log
@net - select
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.9 2003/07/07 11:06:24 numberone Exp $
a14 4

#my($proto,$subproto,$host,$port,$user,$db,$table,$fields) = url::split($url);
#print "proto: ",url::proto($url),"\n";
#print $acl->user($user) ? "$user allowed\n" : "$user denied\n";
@


1.9
log
@Data module added (empty)
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.8 2003/06/03 13:15:39 numberone Exp $
d33 1
a33 1
	Msg->select($server,(map $_->{msg},@@slave));
@


1.8
log
@bee-0.9.1 -- version merge
@
text
@d2 3
a4 1
# $Id: auth.pl,v 1.7 2003/03/12 23:26:35 numberone Exp $
@


1.7
log
@added xml configuration file - new syntax
acl still not working
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.6 2003/02/17 23:34:48 numberone Exp $
d22 1
a22 1
my $server = Msg->server('SSL',conf->port);
d31 2
@


1.6
log
@Msg - some changes forced by moving to libnet
certs: clear 'auth' key semantics, README for generating CA keys
switch to new Net-1.2: libnet + ssl layer
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.5 2003/02/05 15:39:40 numberone Exp $
d20 1
a20 4
our($conf,$auth,$dads,$sources,$query,$passwd,$acl) = 
	new conf("./auth.conf",{
			port=>2332
		});
d22 1
a22 1
my $server = Msg->server('SSL',$conf->{port});
d44 1
@


1.5
log
@SSL to INET - for testing...
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.4 2002/09/29 14:47:16 numberone Exp $
d25 1
a25 1
my $server = Msg->server('INET',$conf->{port});
d31 1
a31 1
print "auth listenning on port ".$conf->{port}."\n";
d44 1
a44 1
		if($peek < 0) { print "closing\n"; $slave->close() }
@


1.4
log
@table query seems to work
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.3 2002/09/29 12:58:33 numberone Exp $
d25 1
a25 1
my $server = Msg->server('SSL',$conf->{port});
d43 2
a44 2
		if(not defined $peek) { $slave->close() }
		elsif($peek)          { $slave->serve() }
@


1.3
log
@tablequery
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.2 2002/09/26 07:52:42 numberone Exp $
d20 1
a20 1
our($conf,$auth,$dads,$sources,$query,$acl) = 
@


1.2
log
@version merging with my cvs
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.1.1.1 2002/09/24 01:34:02 michald Exp $
d20 1
a20 1
our($conf,$auth,$dads,$sources,$acl) = 
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: auth.pl,v 1.9 2002/08/23 22:43:09 martin Exp $
d48 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
