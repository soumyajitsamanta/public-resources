head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.11.10.14.38.27;	author numberone;	state dead;
branches;
next	1.1;

1.1
date	2003.10.24.11.57.55;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.2
log
@final (expect docs) 1.0 release
@
text
@
   Instalation on Linux platforms
   ==============================

Obtaining BEE package
---------------------

Distribution tarballs are freely available for download from project 
homepage:

	http://bee.sourceforge.net

Alternatively you can use CVS repository hosted on sourceforge.net 
to obtain actual sources. Run the following command in a directory 
that you have write access to (such as your home directory): 

	bash$ cvs -z3 -d:pserver:anonymous@@cvs.sf.net:/cvsroot/bee \
	      checkout -P bee

You should see it listing all the source files.

When there are changes to BEE's code, you'll want to update your 
local copy. You don't have to remove the entire directory that you 
checked out and redo the whole thing; instead, from inside 
the directory, run:

	bash$ cvs update -d


BEE Architecture
----------------

Basicaly, BEE consists of two parts: client and server.

Client part is used for modelling and controlling ETL processes. 
Using grafical user interface you can # TODO: describe client

Server daemon running on particular host is used to access 
data or CPU usage on that host. In production system, you 
will probably want to access data from several hosts, so
you have to run server daemon (dad), on all of these hosts.



Dependencies
------------

The BEE Project depends on number third-party modules and libraries:

 o  OpenSSL library is used for network communication.
    You will need both OpenSSL runtime library and OpenSSL development
    packages in order to compile BEE.
    Note that particular installation steps deppends on your 
    Linux distribution, but these packages are required:

	libssl
	libssl-dev

 o  Major part of The BEE Project is written in Perl scripting
    language. You will need perl-5.8.0 or later to run BEE.
    Note that perl-5.6.x is not supported and will not work!

	perl-5.8.0

 o  Lot of another Perl modules are required. They are not
    included in with standard Perl interpreter, but are available
    from CPAN (Comprehensive Perl Archive Network).
    The simplest method to download, configure, make and install
    these modules is to use perl's build-in package manager:

# TODO: Parameters for the 'perl Makefile.PL' command?
#       Typical frequently used settings:
#         LIB=~/perl       non-root users (please see manual for more hints)
#       Your choice:  [] LIB=~/perl

	bash$ perl -MCPAN -e shell

    Running this first time will ask you to configure package
    manager. After successful CPAN package manager configuration,
    you can install packages by invoking these commands in CPAN shell:

	cpan> install XML::Parser
	cpan> install XML::Simple
	cpan> install FreezeThaw

    BEE's client part uses Tk user interface, so you must install
	Perl's Tk modules to use GUI interface:

	cpan> install Tk

# TODO: another Tk modules (Splash, fileevent?)


Instalation directory
---------------------

Becaouse BEE is wrotten primary in perl, it can run directly from source codes,
they need not to be instaled system-wide. In fact, system-wide instalation is
now unsupported -- there are no 'make install' target.  All you need to use
The BEE Project is situated in this directory.  We will reference path to this
directory as $BEEDIR in following text.


Compilation
-----------

Major part of The BEE Project is written as Perl scripts.
For efficient, there are some minor parts written in C language
and they need to be compiled:

 o  libNet -- RPC network communication

    To compile libNet, do following (note $BEEDIR is directory where
    you extracted distribution tarball):

	bash$ cd $BEEDIR/Net
	bash$ perl Makefile.PL LIB=$BEEDIR/lib
	bash$ make && make install

    This will configure libNet perl module, compile C sources and
    installs .pm and .so files into $BEEDIR/lib directory.

 o  libData -- network data transfers

    This library is used for data transfers. To compile and install
    libData, do following:

	bash$ cd $BEEDIR/Data
	bash$ perl Makefile.PL LIB=$BEEDIR/lib
	bash$ make && make install


Setting up DAD daemon
---------------------

The BEE Project's architecture is distributed over several hosts.
On all these machines there must be running DAD server, daemon
gaining access to host's data sources or CPU resources. 

In minimal case, you can run BEE only on one machine. Even so,
you need to run DAD daemon there.

You must install DAD daemon on all hosts you plan to use in 
ETL process. Then you can use their's data or CPU resources.

To install DAD daemon to particular host, you will need to 

  o  Copy installation tarball to these hosts
  o  Install all required packages and modules. 
     You will not need Tk modules for DAD daemon.
  o  Compile and install libNet and libData 

Now you can invoke DAD daemon using following commands:

	bash$ cd $BEEDIR/dad
	bash$ ./dad.pl
	listenning on port 2333

Consider automatical invoking of dad daemon on system startup.
DAD daemon do not require root priviledges, but all data sources,
that we wish to access (especially files stored on host's filesystem), 
must be readable by user executing DAD!


@


1.1
log
@first installation instruction
@
text
@@

