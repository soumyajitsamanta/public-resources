head	1.5;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2003.02.07.21.17.29;	author numberone;	state dead;
branches;
next	1.4;

1.4
date	2002.09.28.18.02.47;	author numberone;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.27.13.54.52;	author numberone;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.26.07.52.42;	author numberone;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.24.01.40.58;	author michald;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.24.01.40.58;	author michald;	state Exp;
branches;
next	;


desc
@@


1.5
log
@removing old 'otec'
@
text
@# $Id: bee.pm,v 1.4 2002/09/28 18:02:47 numberone Exp $

package bee;

use lib '.';
use inout;
use input;
use output;

use lib '../lib';
use Msg;

use Data::Dumper;
use strict;

my $bee_id = 0; # unique bee id counter

sub new {
	my($pkg,$name,$input,$output,$script_p) = @@_;

	my $bee = bless {
		name   => $name,
		input  => $input,
		output => $output,
		script => $script_p,
		state  => 'init',
	}, $pkg;

	my($otec_client,$bee_server) = Msg->socketpair();
	my($otec_server,$bee_client) = Msg->socketpair();
	$bee->{client} = $otec_client;
	$bee->{server} = $otec_server;

	$bee->{id} = fork();
	return undef unless defined $bee->{id};

	unless($bee->{id}) {
#		close STDIN; # ctrl-c
#		close STDOUT;
#		close STDERR;
		$bee->process($$,$bee_server,$bee_client);
		exit;
	}

	print "bee ".$bee->{id}." $name\n";

	return $bee;
};

# =======================================================================
our($name,$intype,$outtype,$script,$otec_server,$otec_client,$id);

my @@input  = ();
my @@output = ();

my $fly  = 0;
my $land = 0;

my $methods = {
	input  => \&rpc_input,
	output => \&rpc_output,
	letfly => sub { $fly = 1 },
};

sub process {
	$SIG{INT} = sub { $land = 1 };

	my $self = shift;
	($id,$otec_server,$otec_client) = @@_;

	$name    = $self->{name};
	$intype  = $self->{input};
	$outtype = $self->{output};

	# compile script, create `script' function
	$script  = eval "sub script { ".${$self->{script}}."\n}";
	die $@@ if($@@);

	while(1) {
		$otec_server->serve($methods) if($otec_server->peek);

		input::listen();

		if($fly) {

			 input::init($intype, \@@input);
			output::init($outtype,\@@output);

			$land = $fly = 0;
			my $result = script(@@input, @@output); # eval?

			 input::close($intype, \@@input);
			output::close($outtype,\@@output);

			# send `landed' echo

			# fix: use otec_client msg !
			$otec_server->send("landed ".
							   ($land? '':(defined $result? $result : 0)));
		}
	}

	# never reached
}


sub rpc_input {
	my($num,$arg) = @@_;
#	print "rpc_input: num=$num, arg=",Dumper($arg),"--------------\n";
	return inout::new("input",$intype->[$num],\$input[$num],$arg);
}

sub rpc_output {
	my($num,$arg) = @@_;
#	print "rpc_output: num=$num, arg=",Dumper($arg),"--------------\n";
	return inout::new("output",$outtype->[$num],\$output[$num],$arg);
}


1;


@


1.4
log
@argument order fix in bee-rpc_input
@
text
@d1 1
a1 1
# $Id: bee.pm,v 1.3 2002/09/27 13:54:52 numberone Exp $
@


1.3
log
@tablequery, bee->dad msg
@
text
@d1 1
a1 1
# $Id: bee.pm,v 1.2 2002/09/26 07:52:42 numberone Exp $
d98 2
a99 1
			$otec_server->send("landed ".($land? '':(defined $result? $result : 0)));
d108 3
a110 4
#	print "rpc_input: ",Dumper(\@@_);
	my $num = shift() - 1; # libBee counts from 1
#	$otec_client->call('auth','read','');
	return inout::new("input",$intype->[$num],\$input[$num],@@_);
d114 3
a116 2
	my $num = shift() - 1; # libBee counts from 1
	return inout::new("output",$outtype->[$num],\$output[$num],@@_);
@


1.2
log
@version merging with my cvs
@
text
@d1 1
a1 1
# $Id: bee.pm,v 1.1.1.1 2002/09/24 01:40:58 michald Exp $
d29 4
a32 2
	my($otecmsg,$beemsg) = Msg->socketpair();
	$bee->{msg} = $otecmsg;
d41 1
a41 1
		$bee->process($$,$beemsg);
d51 1
a51 1
our($name,$intype,$outtype,$script,$otec,$id);
d69 1
a69 1
	($id,$otec) = @@_;
d71 1
a71 1
	$name     = $self->{name};
d80 1
a80 1
		$otec->serve($methods) if($otec->peek);
d97 2
a98 1
			$otec->send("landed ".($land? '':(defined $result? $result : 0)));
d109 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Id: bee.pm,v 1.5 2002/08/26 20:06:17 martin Exp $
d116 1
@


1.1.1.1
log
@Initial public release of BEE Project.
@
text
@@
