head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2003.10.29.07.20.27;	author numberone;	state dead;
branches;
next	1.1;

1.1
date	2003.09.19.11.23.42;	author numberone;	state Exp;
branches;
next	;


desc
@@


1.2
log
@beed -- removing. will be moved to next branch (toplevel directory)
@
text
@#include<stdio.h>
#include<unistd.h>

#include"net.h"
#include"dad.h"

#define DEFAULT_PORT 2333
#define ROOT_PEM "./root.pem"
#define KEY_PEM "./key.pem"
#define PASSWORD "honey"

client_t *list = NULL;

client_t *new_client(Net net) {
	client_t *client = malloc(sizeof(client_t));

	printf("client \'%s\' from %s\n",net_auth(net),net_peer(net));
	client->net = net;
	client->bee = NULL;

	client->next = list;
	return list = client;
}

void handle_client(client_t *client) {
}

void watch_bee(client_t *client,bee_t *bee) {
}

int main(int argc,char *argv[]) {
	int c,daemon = 0,port = DEFAULT_PORT;
	char *root_pem = ROOT_PEM, *key_pem = KEY_PEM;
	Net server;

	while((c = getopt(argc,argv,"d:p:r:k:")) != -1) {
		if(c == 'd') daemon = atoi(optarg);
		if(c == 'p') port = atoi(optarg);
		if(c == 'r') root_pem = optarg;
		if(c == 'k') key_pem = optarg;
	}

	if(!net_init(root_pem,key_pem,PASSWORD)) error("net_init() failed");

	printf("dad: listenning on %d\n",port);
//	server = net_server_ssl(port);
	server = net_server_inet(port);
	if(!server) error("can't listen on port %d\n",port);

	while(1) {
		client_t *client;
		Net net;

		net_select(NULL,100);

		if(net = net_accept(server,0))
			new_client(net);

		for(client=list;client;client=client->next) {
			bee_t *bee;

			handle_client(client);

			for(bee=client->bee;bee;bee=bee->next) {
				watch_bee(client,bee);
			}
		}
	}

	return 0;
}

@


1.1
log
@BEE dad daemon -- new branch
@
text
@@

