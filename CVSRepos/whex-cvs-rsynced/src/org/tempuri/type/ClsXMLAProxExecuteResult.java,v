head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.06.28.14.10.45;	author igorludi;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@/**
 * ClsXMLAProxExecuteResult.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis WSDL2Java emitter.
 */

package org.tempuri.type;

import org.w3c.dom.Document;
import java.util.ArrayList;
import rex.utils.S;

public class ClsXMLAProxExecuteResult  implements java.io.Serializable {
    private org.apache.axis.message.MessageElement [] _any;

    public ClsXMLAProxExecuteResult() {
    }

    public org.apache.axis.message.MessageElement [] get_any() {
        return _any;
    }

    public void set_any(org.apache.axis.message.MessageElement [] _any) {
        this._any = _any;
    }

    private java.lang.Object __equalsCalc = null;
    public synchronized boolean equals(java.lang.Object obj) {
        if (!(obj instanceof ClsXMLAProxExecuteResult)) return false;
        ClsXMLAProxExecuteResult other = (ClsXMLAProxExecuteResult) obj;
        if (obj == null) return false;
        if (this == obj) return true;
        if (__equalsCalc != null) {
            return (__equalsCalc == obj);
        }
        __equalsCalc = obj;
        boolean _equals;
        _equals = true &&
            ((this._any==null && other.get_any()==null) ||
             (this._any!=null &&
              java.util.Arrays.equals(this._any, other.get_any())));
        __equalsCalc = null;
        return _equals;
    }

    private boolean __hashCodeCalc = false;
    public synchronized int hashCode() {
        if (__hashCodeCalc) {
            return 0;
        }
        __hashCodeCalc = true;
        int _hashCode = 1;
        if (get_any() != null) {
            for (int i=0;
                 i<java.lang.reflect.Array.getLength(get_any());
                 i++) {
                java.lang.Object obj = java.lang.reflect.Array.get(get_any(), i);
                if (obj != null &&
                    !obj.getClass().isArray()) {
                    _hashCode += obj.hashCode();
                }
            }
        }
        __hashCodeCalc = false;
        return _hashCode;
    }

    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(ClsXMLAProxExecuteResult.class);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("urn:schemas-microsoft-com:xml-analysis", "clsXMLAProx.Execute.Result"));
    }

    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

    /**
     * Get Custom Serializer
     */
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType,
           java.lang.Class _javaType,
           javax.xml.namespace.QName _xmlType) {
        return
          new  org.apache.axis.encoding.ser.BeanSerializer(
            _javaType, _xmlType, typeDesc);
    }

    /**
     * Get Custom Deserializer
     */
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType,
           java.lang.Class _javaType,
           javax.xml.namespace.QName _xmlType) {
        return
          new  org.apache.axis.encoding.ser.BeanDeserializer(
            _javaType, _xmlType, typeDesc);
    }
 // Igor (next 3 methods):
     public String toString(){
        int i;
        String s = new String("");
        for(i=0; i < _any.length; i++){
           s += rek(_any[i], "");
        }
        return s;
     }
     private String rek(org.apache.axis.message.MessageElement e, String indent){
        String retVal = new String("\n" + indent + "<" + e.getName() + ">" );
        org.xml.sax.Attributes attrs = e.getAttributes();
        int i;
        for (i=0; i < attrs.getLength(); i++){
           retVal += "\n" + indent + attrs.getLocalName(i) + " = " +  attrs.getValue(i);
        }
        ArrayList children = e.getChildren();
        if (children != null){
           for (i = 0; i < children.size(); i++) {
              retVal += "\n" + indent + rek( ( (org.apache.axis.message.MessageElement) children.get(i)), indent + "   ");
           }
        }
        retVal += "\n" + indent + e.getValue();
        retVal += "\n" + indent + "<" + e.getName() + ">";
        return retVal;
     }
     public Document getResultAsDocument(){
        try{
           Document retVal = _any[0].getAsDocument();
           if (retVal == null)
              throw new Exception( "Error(getResultAsDocument): returns null");
           else
              return retVal;
        }catch(Exception e){
           System.out.println("Error(getResultAsDocument): Can't get execute result as document.");
        }
        return null;
     }

}
@
