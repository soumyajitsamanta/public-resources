head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.06.28.14.10.45;	author igorludi;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@package org.tempuri.type.customserializers;

import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.Serializer;
import org.apache.axis.utils.BeanPropertyDescriptor;
import org.apache.axis.utils.BeanUtils;
import org.apache.axis.utils.JavaUtils;

import javax.xml.namespace.QName;
import javax.xml.rpc.JAXRPCException;
import org.apache.axis.encoding.ser.EnumSerializer;

/**
 * <p>Title: WHEX</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: </p>
 * @@author igor
 * @@version 1.0
 */

public class CustomBeanSerFactory extends org.apache.axis.encoding.ser.BeanSerializerFactory{
   public CustomBeanSerFactory(java.lang.Class javaType, QName xmlType) {
      super(javaType, xmlType);
   }
   public javax.xml.rpc.encoding.Serializer getSerializerAs(String mechanismType)
        throws JAXRPCException {
        return (Serializer) super.getSerializerAs(mechanismType);
    }

    /**
     * Optimize construction of a BeanSerializer by caching the
     * type and property descriptors.
     */
    protected Serializer getGeneralPurpose(String mechanismType) {
        if (javaType == null || xmlType == null) {
           return super.getGeneralPurpose(mechanismType);
        }

        if (serClass == EnumSerializer.class) {
           return super.getGeneralPurpose(mechanismType);
        }

        return new CustomBeanSer(javaType, xmlType, typeDesc,
                                  propertyDescriptor);
    }

}@
