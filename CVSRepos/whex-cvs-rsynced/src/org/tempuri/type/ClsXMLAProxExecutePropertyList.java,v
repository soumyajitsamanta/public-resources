head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.06.28.14.10.45;	author igorludi;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@package org.tempuri.type;

import org.apache.axis.description.FieldDesc;
import org.apache.axis.description.AttributeDesc;
import javax.xml.namespace.QName;
import org.apache.axis.description.ElementDesc;


/**
 * <p>Title: WHEX</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: </p>
 * @@author igor
 * @@version 1.0
 */

public class ClsXMLAProxExecutePropertyList {
   private String dataSourceInfo;
   private String catalog;
   private String format;
   private String content;
   private String axisFormat;
   /*
      "<Format>Native</Format>" & _
      "<AxisFormat>TupleFormat</AxisFormat>" & _
       "<Content>Data</Content>"

    */

   public ClsXMLAProxExecutePropertyList() {
      // defaults:
      axisFormat = "TupleFormat";
      format = "Native";
      content = "Data";
   }



   public String getDataSourceInfo(){
     return dataSourceInfo;
   }
   public void setDataSourceInfo(String s){
     dataSourceInfo = s;
   }

   public String getCatalog(){
     return catalog;
   }
   public void setCatalog(String s){
     catalog = s;
   }

   public String getFormat(){
     return format;
   }
   public void setFormat(String s){
     format = s;
   }

   public String getContent(){
     return content;
   }
   public void setContent(String s){
     content = s;
   }

   public String getAxisFormat(){
      return axisFormat;
   }
   public void setAxisFormat(String s){
     axisFormat = s;
   }





   private static org.apache.axis.description.TypeDesc typeDesc =
      new org.apache.axis.description.TypeDesc(ClsXMLAProxExecutePropertyList.class);

   static {
      typeDesc.setXmlType(new javax.xml.namespace.QName("urn:schemas-microsoft-com:xml-analysis", "clsXMLAProx.Discover.RestrictionList"));

      ElementDesc ed = new ElementDesc();
      ed.setFieldName("dataSourceInfo");
      ed.setXmlName(new QName("urn:schemas-microsoft-com:xml-analysis", "DataSourceInfo"));
      ed.setMinOccurs(1);
      // ed.setMinOccursIs0(false);
      typeDesc.addFieldDesc(ed);

      ed = new ElementDesc();
      ed.setFieldName("catalog");
      ed.setXmlName(new QName("urn:schemas-microsoft-com:xml-analysis", "Catalog"));
      //ed.setXmlType(new QName("urn:schemas-microsoft-com:xml-analysis", "string"));
      ed.setMinOccurs(0);  //     ed.setMinOccursIs0(true);
      ed.setMaxOccurs(1);
      typeDesc.addFieldDesc(ed);

      ed = new ElementDesc();
      ed.setFieldName("format");
      ed.setXmlName(new QName("urn:schemas-microsoft-com:xml-analysis", "Format"));
      ed.setMinOccurs(0);  //ed.setMinOccursIs0(true);
      ed.setMaxOccurs(1);
      typeDesc.addFieldDesc(ed);

      ed = new ElementDesc();
      ed.setFieldName("content");
      ed.setXmlName(new QName("urn:schemas-microsoft-com:xml-analysis", "Content"));
      ed.setMinOccurs(0);  //ed.setMinOccursIs0(true);
      ed.setMaxOccurs(1);
      typeDesc.addFieldDesc(ed);

      ed = new ElementDesc();
      ed.setFieldName("axisFormat");
      ed.setXmlName(new QName("urn:schemas-microsoft-com:xml-analysis", "AxisFormat"));
      ed.setMinOccurs(0);  //     ed.setMinOccursIs0(true);
      typeDesc.addFieldDesc(ed);



   }

   /**
    * Return type metadata object
    */
   public static org.apache.axis.description.TypeDesc getTypeDesc() {
       return typeDesc;
   }
   public String toString(){
      return "dataSourceInfo = " + dataSourceInfo
      + " catalog = " + catalog
      + " format = " + format
      + " content = "  + content
      + " axisFormat = "  + axisFormat;
   }

}
@
