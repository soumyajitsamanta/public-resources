head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2005.06.28.12.26.17;	author igorludi;	state dead;
branches;
next	1.1;

1.1
date	2005.06.28.11.35.03;	author igorludi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@// to be deleted

package org.tempuri.type.customserializers;

/**
 * <p>Title: WHEX</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: </p>
 * @@author igor
 * @@version 1.0
 */

import org.apache.axis.Constants;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.encoding.Serializer;
import org.apache.axis.wsdl.fromJava.Types;
import org.w3c.dom.Element;
import org.xml.sax.Attributes;

import javax.xml.namespace.QName;
import java.io.IOException;
import org.tempuri.type.ClsXMLAProxDiscoverPropertyList;
import java.io.Serializable;




public class ClsXMLAProxDiscoverPropertyListSer implements Serializer, Serializable{

//   public static final QName myTypeQName = new QName("typeNS", "Data");
   public static final QName myTypeQName = new javax.xml.namespace.QName("urn:schemas-microsoft-com:xml-analysis", "clsXMLAProx.Discover.PropertyList");

   public ClsXMLAProxDiscoverPropertyListSer() {
   }

    /** SERIALIZER STUFF
     */
    /**
     * Serialize an element named name, with the indicated attributes
     * and value.
     * @@param name is the element name
     * @@param attributes are the attributes...serialize is free to add more.
     * @@param value is the value
     * @@param context is the SerializationContext
     */
   public void serialize(QName name, Attributes attributes,
                          Object value, SerializationContext context)
        throws IOException
   {
       if (!(value instanceof ClsXMLAProxDiscoverPropertyList))
           throw new IOException("Can't serialize a " + value.getClass().getName() + " with a ClsXMLAProxDiscoverPropertyListSer.");
       ClsXMLAProxDiscoverPropertyList data = (ClsXMLAProxDiscoverPropertyList)value;

       context.startElement(name, attributes);
       if (data.getDataSourceInfo() != null)
          context.serialize(new QName("", "DataSourceInfo"), null, data.getDataSourceInfo());
       if (data.getCatalog() != null )
          context.serialize(new QName("", "Catalog"), null, data.getCatalog());
       if (data.getFormat() != null)
          context.serialize(new QName("", "Format"), null, data.getFormat());
       if (data.getContent() != null)
          context.serialize(new QName("", "Content"), null, data.getContent());
       context.endElement();
    }
    public String getMechanismType() { return Constants.AXIS_SAX; }

    public Element writeSchema(Class javaType, Types types) throws Exception {
        return null;
    }


}
@


1.1
log
@first time commit
@
text
@@

