head	1.1;
access;
symbols
	jpivot_1_8_0:1.1
	focus_1_6_0:1.1.0.6
	wcf_1_7_0:1.1
	wcf_1_6_0:1.1
	jpivot_1_5_0:1.1.0.4
	Root_jpivot_1_5_0:1.1
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.07.05.14.04.34;	author avix;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2008.04.17.04.10.51;	author hbaier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial version
@
text
@/*
 * ====================================================================
 * This software is subject to the terms of the Common Public License
 * Agreement, available at the following URL:
 *   http://www.opensource.org/licenses/cpl.html .
 * Copyright (C) 2003-2004 TONBELLER AG.
 * All Rights Reserved.
 * You must accept the terms of that agreement to use this software.
 * ====================================================================
 *
 * 
 */
package com.tonbeller.wcf.tree;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import com.tonbeller.wcf.controller.RequestContext;

/**
 * creates an Element "tree-node" with an attribute "label", whose value is node.toString()
 * @@author av
 */
public class DefaultNodeRenderer implements NodeRenderer {
  protected String nodeElementName = DEFAULT_NODE_ELEMENT_NAME;
  private LabelProvider labelProvider;

  public DefaultNodeRenderer() {
    labelProvider = new DefaultLabelProvider();
  }

  public DefaultNodeRenderer(LabelProvider labelProvider) {
    this.labelProvider = labelProvider;
  }
  
  public Element renderNode(RequestContext context, Document factory, Object node) {
    Element nodeElem = factory.createElement(nodeElementName);
    nodeElem.setAttribute("label", labelProvider.getLabel(node));
    return nodeElem;
  }

  /**
   * Returns the nodeElementName.
   * @@return String
   */
  public String getNodeElementName() {
    return nodeElementName;
  }

  /**
   * Sets the nodeElementName.
   * @@param nodeElementName The nodeElementName to set
   */
  public void setNodeElementName(String nodeElementName) {
    this.nodeElementName = nodeElementName;
  }

  /**
   * @@return Returns the labelProvider.
   */
  public LabelProvider getLabelProvider() {
    return labelProvider;
  }
  /**
   * @@param labelProvider The labelProvider to set.
   */
  public void setLabelProvider(LabelProvider labelProvider) {
    this.labelProvider = labelProvider;
  }
}
@


1.1.6.1
log
@* merged focus changes into focus_1_6_0
@
text
@a14 2
import java.lang.reflect.Method;

a38 9
    Class nodeClass = node.getClass();
    Method getColor;
	try {
		getColor = nodeClass.getMethod("getColor", new Class[] {});
		if(getColor != null && String.class.equals(getColor.getReturnType())) {
			String color = (String) getColor.invoke(node, new Object[] {});
			nodeElem.setAttribute("color", color);
		}
	} catch (Exception e) { /* purposefully do nothing :) */ }
@

