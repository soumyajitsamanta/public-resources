head	1.2;
access;
symbols
	test_tag:1.1
	sfsync:1.2;
locks; strict;
comment	@# @;


1.2
date	2004.06.30.13.45.53;	author avix;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.09.20.36.47;	author avix;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fixed bug with Join Element
@
text
@<?xml version="1.0" encoding="UTF-8"?>
<!--
  This dtd file was automatically generated from mining model mondrian.
  Do not edit this file by hand.
-->
<!--
  This is the XML model for Mondrian schemas.
  Revision is $Id: mondrian.xsd,v 1.1 2004/06/09 20:36:47 avix Exp $
-->
<!--
  A CubeDimension is either a usage of a Dimension ('shared
  dimension', in MSOLAP parlance), or a 'private dimension'.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:group name="CubeDimension">
    <xs:choice>
      <xs:element ref="VirtualCubeDimension"/>
      <xs:element ref="DimensionUsage"/>
      <xs:element ref="Dimension"/>
    </xs:choice>
  </xs:group>
  <!-- A table or a join -->
  <xs:group name="Relation">
    <xs:choice>
      <xs:element ref="View"/>
      <xs:element ref="Join"/>
      <xs:element ref="Table"/>
    </xs:choice>
  </xs:group>
  <!-- A collection of SQL expressions, one per dialect. -->
  <!-- A schema is a collection of cubes and shared dimensions. -->
  <xs:element name="Schema">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Dimension"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Cube"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="VirtualCube"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Role"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="defaultRole"/>
    </xs:complexType>
  </xs:element>
  <!-- todo: -->
  <xs:element name="Cube">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="Relation"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="CubeDimension"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Measure"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    A VirtualCube is a set of dimensions and
    measures gleaned from other cubes.
  -->
  <xs:element name="VirtualCube">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="VirtualCubeDimension"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="VirtualCubeMeasure"/>
      </xs:sequence>
      <xs:attribute name="name"/>
    </xs:complexType>
  </xs:element>
  <!-- A VirtualCubeDimension is a usage of a Dimension in a VirtualCube. -->
  <xs:element name="VirtualCubeDimension">
    <xs:complexType>
      <xs:attribute name="cubeName"/>
      <xs:attribute name="foreignKey"/>
      <xs:attribute name="name"/>
    </xs:complexType>
  </xs:element>
  <!-- A VirtualCubeMeasure is a usage of a Measure in a VirtualCube. -->
  <xs:element name="VirtualCubeMeasure">
    <xs:complexType>
      <xs:attribute name="cubeName"/>
      <xs:attribute name="name"/>
    </xs:complexType>
  </xs:element>
  <!--
    A DimensionUsage is usage of a shared
    Dimension within the context of a cube.
  -->
  <xs:element name="DimensionUsage">
    <xs:complexType>
      <xs:attribute name="source" use="required"/>
      <xs:attribute name="level"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="foreignKey"/>
    </xs:complexType>
  </xs:element>
  <!--
    A Dimension is a collection of hierarchies. There are
    two kinds: a public dimension belongs to a schema, and be used by several cubes; a
    private dimension belongs to a
    cube. The
    foreignKey field is only
    applicable to private dimensions.
  -->
  <xs:element name="Dimension">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Hierarchy"/>
      </xs:sequence>
      <xs:attribute name="foreignKey"/>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Defines a hierarchy.
    You must specify at most one <Relation>
    or memberReaderClass. If you specify none, the
    hierarchy is assumed to come from the same fact table of the
    current cube.
  -->
  <xs:element name="Hierarchy">
    <xs:complexType>
      <xs:sequence>
        <xs:group minOccurs="0" ref="Relation"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Level"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Parameter"/>
      </xs:sequence>
      <xs:attribute name="name"/>
      <xs:attribute name="hasAll" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="allMemberName"/>
      <xs:attribute name="primaryKey"/>
      <xs:attribute name="primaryKeyTable"/>
      <xs:attribute name="defaultMember"/>
      <xs:attribute name="memberReaderClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Level">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="KeyExpression"/>
        <xs:element minOccurs="0" ref="NameExpression"/>
        <xs:element minOccurs="0" ref="OrdinalExpression"/>
        <xs:element minOccurs="0" ref="ParentExpression"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Property"/>
      </xs:sequence>
      <xs:attribute name="name"/>
      <xs:attribute name="table"/>
      <xs:attribute name="column"/>
      <xs:attribute name="nameColumn"/>
      <xs:attribute name="ordinalColumn"/>
      <xs:attribute name="parentColumn"/>
      <xs:attribute name="nullParentValue"/>
      <xs:attribute name="type" default="String">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="uniqueMembers" default="false">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="levelType" default="Regular">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="Regular"/>
            <xs:enumeration value="TimeYears"/>
            <xs:enumeration value="TimeQuarters"/>
            <xs:enumeration value="TimeMonths"/>
            <xs:enumeration value="TimeWeeks"/>
            <xs:enumeration value="TimeDays"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hideMemberIf" default="Never">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="Never"/>
            <xs:enumeration value="IfBlankName"/>
            <xs:enumeration value="IfParentsName"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- Member property. -->
  <xs:element name="Property">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="column"/>
      <xs:attribute name="type" default="String">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
            <xs:enumeration value="Boolean"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="Measure">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="column" use="required"/>
      <xs:attribute name="formatString"/>
      <xs:attribute name="aggregator" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="sum"/>
            <xs:enumeration value="count"/>
            <xs:enumeration value="min"/>
            <xs:enumeration value="max"/>
            <xs:enumeration value="avg"/>
            <xs:enumeration value="distinct count"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="Parameter">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="value"/>
    </xs:complexType>
  </xs:element>
  <!-- A collection of SQL statements, one per dialect. -->
  <xs:element name="View">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SQL"/>
      </xs:sequence>
      <xs:attribute name="alias" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SQL">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="dialect" default="generic">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="generic"/>
                <xs:enumeration value="oracle"/>
                <xs:enumeration value="mysql"/>
                <xs:enumeration value="access"/>
                <xs:enumeration value="postgres"/>
                <xs:enumeration value="hsqldb"/>
                <xs:enumeration value="mssql"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Join">
    <xs:complexType>
      <xs:group ref="Relation" minOccurs="2" maxOccurs="2"/>
      <xs:attribute name="leftAlias"/>
      <xs:attribute name="leftKey" use="required"/>
      <xs:attribute name="rightAlias"/>
      <xs:attribute name="rightKey" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Table">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="schema"/>
      <xs:attribute name="alias"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Column">
    <xs:complexType>
      <xs:attribute name="table"/>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeyExpression">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SQL"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ParentExpression">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SQL"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OrdinalExpression">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SQL"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="NameExpression">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SQL"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    A role defines an access-control profile. It has a series of grants
    (or denials) for schema elements.
  -->
  <xs:element name="Role">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="SchemaGrant"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to this schema.
    <code>access</code> may be "all", "all_dimensions", or "none".
    If <code>access</code> is "all_dimensions", the role has access
    to all dimensions but still needs explicit access to cubes.
    See {@@link mondrian.olap.Role#grant(mondrian.olap.Schema,int)}.
  -->
  <xs:element name="SchemaGrant">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="CubeGrant"/>
      </xs:sequence>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a cube.
    <code>access</code> may be "all" or "none".
    See {@@link mondrian.olap.Role#grant(mondrian.olap.Cube,int)}.
  -->
  <xs:element name="CubeGrant">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="DimensionGrant"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="HierarchyGrant"/>
      </xs:sequence>
      <xs:attribute name="cube" use="required"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a dimension.
    <code>access</code> may be "all" or "none".
    Note that a role is implicitly given access to a dimension when it
    is given acess to a cube.
    See also the "all_dimensions" option of the "SchemaGrant" element.
    See {@@link mondrian.olap.Role#grant(mondrian.olap.Dimension,int)}.
  -->
  <xs:element name="DimensionGrant">
    <xs:complexType>
      <xs:attribute name="dimension" use="required"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a hierarchy.
    <code>access</code> may be "all", "custom" or "none".
    If <code>access</code> is "custom", you may also specify the
    attributes <code>topLevel</code>, <code>bottomLevel</code>, and
    the member grants.
    See {@@link mondrian.olap.Role#grant(mondrian.olap.Hierarchy,int,mondrian.olap.Level,mondrian.olap.Level)}.
  -->
  <xs:element name="HierarchyGrant">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="MemberGrant"/>
      </xs:sequence>
      <xs:attribute name="hierarchy" use="required"/>
      <xs:attribute name="topLevel"/>
      <xs:attribute name="bottomLevel"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a member.
    The children of this member inherit that access.
    You can implicitly see a member if you can see any of its children.
    See {@@link mondrian.olap.Role#grant(Member,int)}.
  -->
  <xs:element name="MemberGrant">
    <xs:complexType>
      <xs:attribute name="member" use="required"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="none"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>
@


1.1
log
@*** empty log message ***
@
text
@d8 1
a8 1
  Revision is $Id: //open/mondrian/src/main/mondrian/olap/Mondrian.xml#15 $
d270 1
a270 4
      <xs:sequence>
        <xs:group ref="Relation"/>
        <xs:group ref="Relation"/>
      </xs:sequence>
@

