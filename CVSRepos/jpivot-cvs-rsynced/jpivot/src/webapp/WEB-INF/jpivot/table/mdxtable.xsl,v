head	1.4;
access;
symbols
	jpivot_1_8_0:1.4
	focus_1_6_0:1.2.0.2
	jpivot_1_7_0:1.2
	jpivot_1_6_0:1.2
	jpivot_1_5_0:1.1.0.4
	Root_jpivot_1_5_0:1.1
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.07.09.16.17.11;	author remberson;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.03.19.40.50;	author remberson;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.09.13.25.45;	author avix;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.14.19.50;	author avix;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Created two JPivot base exception classess, JPivotException and
JPivotRuntimeException, and all JPivot exceptions now have one of
these as parent class. The mondrian JPivot code now gets its
SchemaReader from the MDX query rather than the connection so that
the query's cube's calculated members and the query's defined
"with" members can be displayed.
Also, added new JPivot exception, NoValidMemberException, which is
throw when a query returns no data on one or more axis.
Lastly, cleaned up html generated by 2 transforms.
@
text
@<?xml version="1.0"?>

<!-- renders the JPivot Table -->

<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<!-- the id of the table for httpUnit -->
<xsl:output method="html" indent="no" encoding="ISO-8859-1"/>
<xsl:param name="context"/>
<xsl:param name="renderId"/>
<xsl:param name="token"/>
<xsl:param name="imgpath" select="'jpivot/table'"/>

<!-- Tabelle:  -->
<xsl:param name="maxColHdrLen" select="20"/>

<xsl:template match="mdxtable">
  <xsl:if test="@@message">
    <div class="table-message"><xsl:value-of select="@@message"/></div>
  </xsl:if>
  <table border="1" cellspacing="0" cellpadding="2" id="{$renderId}">
    <xsl:apply-templates select="head"/>
    <xsl:apply-templates select="body"/>
  </table>
</xsl:template>

<xsl:template match="head | body">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="row">
  <tr>
    <xsl:apply-templates/>
  </tr>
</xsl:template>


<xsl:template match="corner">
  <th nowrap="nowrap" class="corner-heading" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:apply-templates/>
    <!-- &#160; == &nbsp; -->
    <xsl:text>&#160;</xsl:text>
  </th>
</xsl:template>


<xsl:template match="column-heading[@@indent]">
  <th class="column-heading-{@@style}" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:call-template name="nowrap"/>
    <div style="margin-top: {@@indent}em">
      <xsl:apply-templates/>
    </div>
  </th>
</xsl:template>


<xsl:template match="row-heading[@@indent]">
  <th nowrap="nowrap" class="row-heading-{@@style}" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <div style="margin-left: {@@indent}em">
      <xsl:apply-templates/>
    </div>
  </th>
</xsl:template>


<xsl:template match="column-heading">
  <th class="column-heading-{@@style}" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:call-template name="nowrap"/>
    <xsl:apply-templates/>
  </th>
</xsl:template>


<xsl:template match="row-heading">
  <th class="row-heading-{@@style}" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:call-template name="nowrap"/>
    <xsl:apply-templates/>
  </th>
</xsl:template>


<xsl:template match="heading-heading">
  <th class="heading-heading" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:call-template name="nowrap"/>
    <xsl:apply-templates/>
  </th>
</xsl:template>



<xsl:template match="caption">
  <xsl:call-template name="render-label">
    <xsl:with-param name="label">
      <xsl:value-of select="@@caption"/>
    </xsl:with-param>
  </xsl:call-template>
</xsl:template>


<!-- navigation: expand / collapse / leaf node -->
<xsl:template match="drill-expand | drill-collapse">
  <input type="image" title="{@@title}" name="{@@id}" src="{$context}/{$imgpath}/{@@img}.gif" border="0" width="9" height="9"/>
</xsl:template>

<xsl:template match="drill-other">
  <img src="{$context}/{$imgpath}/{@@img}.gif" border="0" width="9" height="9"/>
</xsl:template>

<!-- navigation: sort -->
<xsl:template match="sort">
  <input name="{@@id}" title="{@@title}" type="image" src="{$context}/{$imgpath}/{@@mode}.gif" border="0" width="9" height="9"/>
</xsl:template>

<xsl:template match="drill-through">
  <input name="{@@id}" title="{@@title}" type="image" src="{$context}/{$imgpath}/drill-through.gif" border="0" width="9" height="9"/>
</xsl:template>


<xsl:template match="cell">
  <td nowrap="nowrap" class="cell-{@@style}">
    <xsl:apply-templates select="drill-through"/>
    <xsl:call-template name="render-label">
      <xsl:with-param name="label">
        <xsl:value-of select="@@value"/>
      </xsl:with-param>
    </xsl:call-template>
  </td>
</xsl:template>


<xsl:template name="render-label">
  <xsl:param name="label"/>
  <xsl:choose>

    <!-- popup menu -->
    <xsl:when test="popup-menu">
      <xsl:apply-templates select="popup-menu"/>
      <xsl:apply-templates select="property"/>
    </xsl:when>

    <!-- clickable member -->
    <xsl:when test="@@href">
      <a>
        <xsl:call-template name="make-href">
          <xsl:with-param name="href" select="@@href"/>
        </xsl:call-template>
        <xsl:value-of select="$label"/>
        <xsl:apply-templates select="property"/>
      </a>
    </xsl:when>

    <!-- member property -->
    <xsl:when test="property[@@name='link']">
      <!--
        target="_blank" was removed because it makes no sense: you have no chance to close
        the new window if the url points to the current context because of the wcf:token
        mechanism
      -->
      <a>
        <xsl:call-template name="make-href">
          <xsl:with-param name="href" select="property[@@name='link']/@@value"/>
        </xsl:call-template>
        <xsl:value-of select="$label"/>
        <xsl:apply-templates select="property"/>
      </a>
    </xsl:when>

    <!-- default -->
    <xsl:otherwise>
      <xsl:value-of select="$label"/>
      <xsl:apply-templates select="property"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>


<xsl:template name="make-href">
  <xsl:param name="href"/>
  <xsl:choose>
    <xsl:when test="starts-with($href, '/')">
      <xsl:attribute name="href">
        <xsl:value-of select="concat($context, $href)"/>
      </xsl:attribute>
    </xsl:when>
    <xsl:otherwise>
      <xsl:attribute name="href">
        <xsl:value-of select="$href"/>
      </xsl:attribute>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="nowrap">
  <xsl:if test="string-length(string(caption/@@caption))&lt;$maxColHdrLen">
    <xsl:attribute name="nowrap">nowrap</xsl:attribute>
  </xsl:if>
</xsl:template>


<xsl:template match="property[@@name='arrow']">
  <span style="margin-left: 0.5ex">
    <img border="0" src="{$context}/{$imgpath}/arrow-{@@value}.gif" width="10" height="10"/>
  </span>
</xsl:template>

<xsl:template match="property[@@name='image']">
  <span style="margin-left: 0.5ex">
    <xsl:choose>
      <xsl:when test="starts-with(@@value, '/')">
        <img border="0" src="{$context}{@@value}"/>
      </xsl:when>
      <xsl:otherwise>
        <img border="0" src="{@@value}"/>
      </xsl:otherwise>
    </xsl:choose>
  </span>
</xsl:template>

<xsl:template match="property[@@name='cyberfilter']">
  <span style="margin-left: 0.5ex">
    <img align="middle" src="{$context}/{$imgpath}/filter-{@@value}.gif" width="53" height="14"/>
  </span>
</xsl:template>

<!-- ignore other properties (e.g. "link") -->
<xsl:template match="property"/>

<!-- begin popup menu  -->
<xsl:template match="popup-menu">
  <a href="#" onMouseover="cssdropdown.dropit(this, event, '{@@id}')">
    <xsl:value-of select="@@label" />
  </a>
  <div id="{@@id}" class="dropmenudiv">
    <strong style="padding-left: {@@level}em">
      <xsl:value-of select="@@label" />
    </strong>
    <xsl:apply-templates />
  </div>
</xsl:template>

<xsl:template match="popup-group">
  <strong style="padding-left: {@@level}em">
    <xsl:value-of select="@@label" />
  </strong>
  <xsl:apply-templates />
</xsl:template>

<xsl:template match="popup-item">
  <a href="{@@href}" style="padding-left: {@@level}em">
    <xsl:value-of select="@@label" />
  </a>
</xsl:template>
<!-- end popup menu  -->


<xsl:template match="*|@@*|node()">
  <xsl:copy>
    <xsl:apply-templates select="*|@@*|node()"/>
  </xsl:copy>
</xsl:template>

</xsl:stylesheet>
@


1.3
log
@This should have been part of the previous checkin concerning
the com.tonbeller.jpivot.mondrian.cell.limit property.
@
text
@a16 1

d75 2
a76 1
  <th nowrap="nowrap" class="row-heading-{@@style}" colspan="{@@colspan}" rowspan="{@@rowspan}">
d83 2
a84 1
  <th nowrap="nowrap" class="heading-heading" colspan="{@@colspan}" rowspan="{@@rowspan}">
d102 1
a102 1
  <input type="image" title="{@@title}" name="{@@id}" src="{$context}/{$imgpath}/{@@img}.gif" />
d111 1
a111 1
  <input name="{@@id}" title="{@@title}" type="image" src="{$context}/{$imgpath}/{@@mode}.gif" />
d115 1
a115 1
  <input name="{@@id}" title="{@@title}" type="image" src="{$context}/{$imgpath}/drill-through.gif" />
a129 9
<xsl:template match="cellspan">
  <td colspan="{@@colspan}" style="color:red" >
    <xsl:call-template name="render-label">
      <xsl:with-param name="label">
        <xsl:value-of select="@@value"/>
      </xsl:with-param>
    </xsl:call-template>
  </td>
</xsl:template>
d134 7
d151 1
d154 6
a159 1
      <a target="_blank">
d167 1
d221 1
a221 1
    <img align="middle" src="{$context}/{$imgpath}/filter-{@@value}.gif" width="51" height="12"/>
d228 27
@


1.2
log
@synchronized with tonbeller cvs
@
text
@d8 1
a8 1
<xsl:output method="html" indent="no" encoding="US-ASCII"/>
d15 2
a16 1
<xsl:param name="maxHeaderLen" select="20"/>
d76 1
a76 2
  <th class="row-heading-{@@style}" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:call-template name="nowrap"/>
d83 1
a83 2
  <th class="heading-heading" colspan="{@@colspan}" rowspan="{@@rowspan}">
    <xsl:call-template name="nowrap"/>
d101 1
a101 1
  <input type="image" title="{@@title}" name="{@@id}" src="{$context}/{$imgpath}/{@@img}.gif" border="0" width="9" height="9"/>
d110 1
a110 1
  <input name="{@@id}" title="{@@title}" type="image" src="{$context}/{$imgpath}/{@@mode}.gif" border="0" width="9" height="9"/>
d114 1
a114 1
  <input name="{@@id}" title="{@@title}" type="image" src="{$context}/{$imgpath}/drill-through.gif" border="0" width="9" height="9"/>
d129 9
a141 7

    <!-- popup menu -->
    <xsl:when test="popup-menu">
      <xsl:apply-templates select="popup-menu"/>
      <xsl:apply-templates select="property"/>
    </xsl:when>

a151 1

d154 1
a154 6
      <!--
        target="_blank" was removed because it makes no sense: you have no chance to close
        the new window if the url points to the current context because of the wcf:token
        mechanism
      -->
      <a>
d170 1
d188 1
a188 1
  <xsl:if test="string-length(string(caption/@@caption))&lt;$maxHeaderLen">
d215 1
a215 1
    <img align="middle" src="{$context}/{$imgpath}/filter-{@@value}.gif" width="53" height="14"/>
a222 28
<!-- begin popup menu  -->
<xsl:template match="popup-menu">
  <a href="#" onMouseover="cssdropdown.dropit(this, event, '{@@id}')">
    <xsl:value-of select="@@label" />
  </a>
  <div id="{@@id}" class="dropmenudiv">
    <strong style="padding-left: {@@level}em">
      <xsl:value-of select="@@label" />
    </strong>
    <xsl:apply-templates />
  </div>
</xsl:template>

<xsl:template match="popup-group">
  <strong style="padding-left: {@@level}em">
    <xsl:value-of select="@@label" />
  </strong>
  <xsl:apply-templates />
</xsl:template>

<xsl:template match="popup-item">
  <a href="{@@href}" style="padding-left: {@@level}em">
    <xsl:value-of select="@@label" />
  </a>
</xsl:template>
<!-- end popup menu  -->


@


1.1
log
@initial version
@
text
@a16 1

d134 7
a174 1

d227 28
@

