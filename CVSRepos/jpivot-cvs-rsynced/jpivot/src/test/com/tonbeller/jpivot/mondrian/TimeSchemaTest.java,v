head	1.4;
access;
symbols
	jpivot_1_8_0:1.4
	focus_1_6_0:1.4.0.2
	jpivot_1_7_0:1.4
	jpivot_1_6_0:1.4
	jpivot_1_5_0:1.2.0.2
	Root_jpivot_1_5_0:1.2
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.11.09.13.25.44;	author avix;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.06.20.46.38;	author avix;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.13.11.56.41;	author avix;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.14.19.50;	author avix;	state Exp;
branches;
next	;


desc
@@


1.4
log
@synchronized with tonbeller cvs
@
text
@package com.tonbeller.jpivot.mondrian;

import java.net.URL;

import junit.framework.TestCase;

import com.tonbeller.jpivot.olap.model.Position;
import com.tonbeller.jpivot.olap.model.Result;
import com.tonbeller.jpivot.olap.query.ResultBase;
import com.tonbeller.jpivot.tags.MondrianModelFactory;

/**
 * Time dimension compatibility Test for "old" Schema files
 */
public class TimeSchemaTest extends TestCase {

  /**
   * Constructor
   * 
   * @@param arg0
   */
  public TimeSchemaTest(String arg0) {
    super(arg0);
  }

  /**
   * test time dimension having Non Time Level
   * 
   * @@throws Exception
   */
  public void testTimeDimNonTimeLev() throws Exception {

    String mdxQuery = "select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} on columns, "
        + "Crossjoin([Time].[Quartale].members, [Customers].[All Customers].[USA].children) on rows "
        + "from Sales";

    String renderFile = null; //"c:\\x\\testTimeDimNonTimeLev";
    int renderNum = 0;

    Result result;

    MondrianModel model = MondrianModelFactory.instance();
    model.setMdxQuery(mdxQuery);

    // the catalog file is TestSchema.xml in "this" directory
//    URL url = this.getClass().getResource("TestSchema.xml");
//    String catUri = "file://" + url.getFile();

    URL url = this.getClass().getResource("TestSchema.xml");
    String connectString = TestConnection.getConnectString(url.toExternalForm());
    model.setConnectString(connectString);
    String jdbcDriver = TestConnection.getJdbcDriver();
    model.setJdbcDriver(jdbcDriver);
    model.initialize();

    result = model.getResult();
    if (renderFile != null)
      ResultBase.renderHtml(result, model.getCurrentMdx(), renderFile + renderNum++ + ".html");

    assertPosition(result, 2, "Q1", "WA");
  }

  /**
   * assert position
   */
  private void assertPosition(Result result, int iPos, String firstMember, String secondMember) {
    Position pos = (Position) result.getAxes()[1].getPositions().get(iPos);
    String s = pos.getMembers()[0].getLabel();
    assertEquals(s, firstMember);
    if (secondMember != null) {
      s = pos.getMembers()[1].getLabel();
      assertEquals(s, secondMember);
    }
  }

} // TimeSchemaTest
@


1.3
log
@Bookmarks work with new Mondrian API ("compiled expressions" change). All tests pass.
@
text
@d10 1
@


1.2
log
@Synchronized with Tonbeller CVS:
  * Supports Mondrian 2.x API
  * Added BEA / Websphere Support
  * More tags in wcf tag library
  * Bugfixes
@
text
@d33 1
a33 1
        + "Crossjoin([Time].[Quartale].members, Customers].[All Customers].[USA].children) on rows "
@


1.1
log
@initial version
@
text
@d45 3
d49 1
a49 3
    String catUri = "file://" + url.getFile();

    String connectString = TestConnection.getConnectString(catUri);
@

