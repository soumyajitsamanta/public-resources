head	1.2;
access;
symbols
	jpivot_1_8_0:1.2
	focus_1_6_0:1.1.0.6
	jpivot_1_7_0:1.1
	jpivot_1_6_0:1.1
	jpivot_1_5_0:1.1.0.4
	Root_jpivot_1_5_0:1.1
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.07.09.16.17.07;	author remberson;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.14.19.48;	author avix;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Created two JPivot base exception classess, JPivotException and
JPivotRuntimeException, and all JPivot exceptions now have one of
these as parent class. The mondrian JPivot code now gets its
SchemaReader from the MDX query rather than the connection so that
the query's cube's calculated members and the query's defined
"with" members can be displayed.
Also, added new JPivot exception, NoValidMemberException, which is
throw when a query returns no data on one or more axis.
Lastly, cleaned up html generated by 2 transforms.
@
text
@/*
 * ====================================================================
 * This software is subject to the terms of the Common Public License
 * Agreement, available at the following URL:
 *   http://www.opensource.org/licenses/cpl.html .
 * Copyright (C) 2003-2004 TONBELLER AG.
 * All Rights Reserved.
 * You must accept the terms of that agreement to use this software.
 * ====================================================================
 *
 * 
 */
package com.tonbeller.jpivot.olap.navi;

import com.tonbeller.jpivot.core.Extension;
import com.tonbeller.jpivot.olap.model.Dimension;
import com.tonbeller.jpivot.olap.model.Expression;
import com.tonbeller.jpivot.olap.model.Hierarchy;
import com.tonbeller.jpivot.olap.model.Level;
import com.tonbeller.jpivot.olap.model.Member;
import com.tonbeller.jpivot.util.JPivotException;

/**
 * serialisiert expr. Wird zunaechst nur
 * fuer unique names von Member, Hierarchy, Dimension, Level
 * benutzt.
 */

public interface ExpressionParser extends Extension {
  public static final String ID = "expressionParser";

  class InvalidSyntaxException extends JPivotException {
    public InvalidSyntaxException() {
    }

    public InvalidSyntaxException(String message) {
      super(message);
    }

    public InvalidSyntaxException(String message, Throwable cause) {
      super(message, cause);
    }

    public InvalidSyntaxException(Throwable cause) {
      super(cause);
    }
  }

  String unparse(Expression expr);

  Expression parse(String expr) throws InvalidSyntaxException;

  /**
   * typespecific lookup because Mondrians unique names are not unique. 
   * [Measures] is the unique name for both, Hierarchy and Dimension
   */
  Member lookupMember(String uniqueName) throws InvalidSyntaxException;

  /**
   * typespecific lookup because Mondrians unique names are not unique. 
   * [Measures] is the unique name for both, Hierarchy and Dimension.
   * much faster than lookupMember or parse(uname) because it does not have to look into the DB.
   */
  Level lookupLevel(String uniqueName) throws InvalidSyntaxException;

  /**
   * typespecific lookup because Mondrians unique names are not unique. 
   * [Measures] is the unique name for both, Hierarchy and Dimension
   * much faster than lookupMember or parse(uname) because it does not have to look into the DB.
   */
  Hierarchy lookupHierarchy(String uniqueName) throws InvalidSyntaxException;

  /**
   * typespecific lookup because Mondrians unique names are not unique. 
   * [Measures] is the unique name for both, Hierarchy and Dimension
   * much faster than lookupMember or parse(uname) because it does not have to look into the DB.
   */
  Dimension lookupDimension(String uniqueName) throws InvalidSyntaxException;
}
@


1.1
log
@initial version
@
text
@d21 1
d32 1
a32 1
  class InvalidSyntaxException extends Exception {
d79 1
a79 1
}@

