head	1.3;
access;
symbols
	jpivot_1_8_0:1.1
	focus_1_6_0:1.1.0.6
	jpivot_1_7_0:1.1
	jpivot_1_6_0:1.1
	jpivot_1_5_0:1.1.0.4
	Root_jpivot_1_5_0:1.1
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2010.01.28.23.06.25;	author serasoft;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.21.15.16.44;	author willgorman;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.14.19.55;	author avix;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Foxed problems with wrong imports of Iterator class
@
text
@/*
 * ====================================================================
 * This software is subject to the terms of the Common Public License
 * Agreement, available at the following URL:
 *   http://www.opensource.org/licenses/cpl.html .
 * Copyright (C) 2003-2004 TONBELLER AG.
 * All Rights Reserved.
 * You must accept the terms of that agreement to use this software.
 * ====================================================================
 *
 * 
 */
package com.tonbeller.jpivot.navigator.hierarchy;

import java.util.List;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import java.util.Iterator;
import com.tonbeller.jpivot.olap.model.Member;
import com.tonbeller.wcf.catedit.Category;
import com.tonbeller.wcf.catedit.DefaultItemElementRenderer;
import com.tonbeller.wcf.catedit.Item;
import com.tonbeller.wcf.controller.RequestContext;
import com.tonbeller.wcf.utils.DomUtils;

/**
 * renders a Hierarchy 
 * @@author av
 */
public class HierarchyItemRenderer extends DefaultItemElementRenderer {

  public Element render(RequestContext context, Document factory, Category cat, Item item) {
    Element elem = super.render(context, factory, cat, item);
    HierarchyItem hi = (HierarchyItem)item;
    if (hi.isClickable())
      elem.setAttribute("id", hi.getId());

    if (!hi.getSlicerSelection().isEmpty()) {
      // Manage the addition of slicer elements in loop before of the compound 
      // slicers.
      	
      List slicerSelection = hi.getSlicerSelection();
      if (slicerSelection != null) {
    	  Iterator iter = slicerSelection.iterator();
    	  while (iter.hasNext()) {
    		  Member m = (Member)iter.next();
		      Element e = DomUtils.appendElement(elem, "slicer-value");
		      e.setAttribute("label", m.getLabel());
		      e.setAttribute("level", m.getLevel().getLabel());
	      }
      }
    }
    
    return elem;
    
  }
}
@


1.2
log
@Incorporating community contribution from Sergio Ramazzina, Now that Mondrian allows multiple members in the slicer, updated JPivot to allow multiple member selection. see http://jira.pentaho.com/browse/BISERVER-3875 for more information.
@
text
@d20 1
a20 2
import sun.text.CompactShortArray.Iterator;

d46 1
a46 1
    	  java.util.Iterator iter = slicerSelection.iterator();
@


1.1
log
@initial version
@
text
@d15 2
d20 2
d42 13
a54 4
      Member m = (Member)hi.getSlicerSelection().get(0);
      Element e = DomUtils.appendElement(elem, "slicer-value");
      e.setAttribute("label", m.getLabel());
      e.setAttribute("level", m.getLevel().getLabel());
@

