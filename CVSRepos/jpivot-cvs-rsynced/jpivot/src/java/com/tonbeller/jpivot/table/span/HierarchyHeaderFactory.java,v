head	1.3;
access;
symbols
	jpivot_1_8_0:1.3
	focus_1_6_0:1.3.0.2
	jpivot_1_7_0:1.3
	jpivot_1_6_0:1.3
	jpivot_1_5_0:1.2.0.2
	Root_jpivot_1_5_0:1.2
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.11.09.13.25.44;	author avix;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.13.11.56.41;	author avix;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.14.19.48;	author avix;	state Exp;
branches;
next	;


desc
@@


1.3
log
@synchronized with tonbeller cvs
@
text
@/*
 * ====================================================================
 * This software is subject to the terms of the Common Public License
 * Agreement, available at the following URL:
 *   http://www.opensource.org/licenses/cpl.html .
 * Copyright (C) 2003-2004 TONBELLER AG.
 * All Rights Reserved.
 * You must accept the terms of that agreement to use this software.
 * ====================================================================
 *
 *
 */
package com.tonbeller.jpivot.table.span;

import com.tonbeller.jpivot.olap.model.Dimension;
import com.tonbeller.jpivot.olap.model.EmptyMember;
import com.tonbeller.jpivot.olap.model.Hierarchy;
import com.tonbeller.jpivot.olap.model.Level;
import com.tonbeller.jpivot.olap.model.Member;
import com.tonbeller.jpivot.olap.model.Property;
import com.tonbeller.jpivot.olap.model.VisitorSupportStrict;

/**
 * returns a new span containing the hierarchy of the given span.
 * If the given span contains a dimension (which does not have
 * a single hierarchy) the new span contains the dimension.
 * @@author av
 */
public class HierarchyHeaderFactory extends VisitorSupportStrict implements SpanVisitor, SpanHeaderFactory {
  Span header;

  /**
   * @@see com.tonbeller.jpivot.ui.table.span.SpanHeaderFactory#create(Span)
   */
  public Span create(Span span) {
    header = (Span)span.clone();
    span.getObject().accept(this);
    return header;
  }


  public void visitDimension(Dimension v) {
    header.setObject(v);
  }

  public void visitHierarchy(Hierarchy v) {
    header.setObject(v);
  }

  public void visitLevel(Level v) {
    header.setObject(v.getHierarchy());
  }

  public void visitMember(Member v) {
    header.setObject(v.getLevel().getHierarchy());
  }

  public void visitProperty(Property v) {
    header.setObject(new PropertyHeading(v.getLabel()));
  }

  public void visitPropertyHeading(PropertyHeading heading) {
    header.setObject(new PropertyHeading(heading.getLabel()));
  }

  public void visitEmptyMember(EmptyMember v) {
    header.setObject(v);
  }


}


@


1.2
log
@Synchronized with Tonbeller CVS:
  * Supports Mondrian 2.x API
  * Added BEA / Websphere Support
  * More tags in wcf tag library
  * Bugfixes
@
text
@d59 1
a59 1
    header.setObject(new PropertyHeading(v.getName()));
@


1.1
log
@initial version
@
text
@d11 1
a11 1
 * 
d16 1
d31 1
a31 1
  
d36 2
a37 2
  	header = (Span)span.clone();
  	span.getObject().accept(this);
d43 1
a43 1
  	header.setObject(v);
d47 1
a47 1
  	header.setObject(v);
d51 1
a51 1
  	header.setObject(v.getHierarchy());
d55 1
a55 1
  	header.setObject(v.getLevel().getHierarchy());
d66 5
@

