head	1.5;
access;
symbols
	jpivot_1_8_0:1.4
	focus_1_6_0:1.3.0.2
	jpivot_1_7_0:1.4
	jpivot_1_6_0:1.3
	jpivot_1_5_0:1.1.0.4
	Root_jpivot_1_5_0:1.1
	mondrian_xmla_2005_08_25:1.1.0.2
	sourceforge_sync:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2009.12.21.15.16.44;	author willgorman;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.12.15.41.12;	author avix;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.09.13.25.42;	author avix;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.29.14.27.03;	author avix;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.05.14.19.55;	author avix;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Incorporating community contribution from Sergio Ramazzina, Now that Mondrian allows multiple members in the slicer, updated JPivot to allow multiple member selection. see http://jira.pentaho.com/browse/BISERVER-3875 for more information.
@
text
@/*
 * ====================================================================
 * This software is subject to the terms of the Common Public License
 * Agreement, available at the following URL:
 *   http://www.opensource.org/licenses/cpl.html .
 * Copyright (C) 2003-2004 TONBELLER AG.
 * All Rights Reserved.
 * You must accept the terms of that agreement to use this software.
 * ====================================================================
 *
 * 
 */
package com.tonbeller.jpivot.navigator.hierarchy;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import com.tonbeller.jpivot.navigator.member.MemberSelectionModel;
import com.tonbeller.jpivot.olap.model.Hierarchy;
//import com.tonbeller.jpivot.olap.model.Dimension;
import com.tonbeller.jpivot.olap.model.Member;
import com.tonbeller.jpivot.olap.model.OlapException;
import com.tonbeller.jpivot.olap.model.OlapUtils;
import com.tonbeller.jpivot.olap.navi.ChangeSlicer;
import com.tonbeller.tbutils.res.Resources;
import com.tonbeller.wcf.catedit.Item;
import com.tonbeller.wcf.controller.RequestContext;
import com.tonbeller.wcf.selection.SelectionModel;

/**
 * Created on 09.12.2002
 * 
 * @@author av
 */
class SlicerCategory extends AbstractCategory {
  public SlicerCategory(HierarchyNavigator navi, String name, String icon) throws OlapException {
    super(navi, name, icon);

    /* Take active hierarchies instead of active 
     dimensions, to remember the slicer on a hierarchy that is 
     not the default (first)
     */
    Set slicerHiers = OlapUtils.getSlicerHierarchies(navi.getOlapModel());
    for (Iterator it = slicerHiers.iterator(); it.hasNext();) {
      Hierarchy hier = (Hierarchy) it.next();
      HierarchyItem hi = new HierarchyItem(this, hier);
      items.add(hi);
    }

    Collections.sort(items);
  }

  /**
   * calls HierarchyNavigator.itemClicked with the appropriate selection model
   */
  public void itemClicked(RequestContext context, HierarchyItem item) {
    // create a selection model
    MemberSelectionModel selection = new MemberSelectionModel();
    if (navi.getSlicerExtension() == null)
      selection.setMode(SelectionModel.NO_SELECTION);
    else
    	// SeraSoft - Enable support for compound slicer 
    	//  selection.setMode(SelectionModel.SINGLE_SELECTION);
    	selection.setMode(SelectionModel.MULTIPLE_SELECTION);

    selection.setOrderedSelection(item.getSlicerSelection());
    navi.itemClicked(context, item, selection, false);
  }

  void setSelection(HierarchyItem item, Collection selection) {
    item.setSlicerSelection(selection);
  }

  public boolean isOrderSignificant() {
    return false;
  }

  void prepareApplyChanges() {
  }

  void applyChanges() {
    if (!isDirty())
      return;
    setDirty(false);

    ChangeSlicer slicerExtension = navi.getSlicerExtension();
    if (slicerExtension == null)
      return;

    List memberList = new ArrayList();
    for (Iterator it = items.iterator(); it.hasNext();) {
      HierarchyItem hi = (HierarchyItem) it.next();
      memberList.addAll(hi.getSlicerSelection());
    }
    Member[] memberArr = (Member[]) memberList.toArray(new Member[memberList.size()]);
    slicerExtension.setSlicer(memberArr);
  }

  public boolean isEmptyAllowed() {
    return true;
  }

  String validateSelection(HierarchyItem item, Collection selection) {
  	// Enable support for compound slicer
	// Disable validation of only one item as of in the previous version
    //    if (selection.size() > 1) {
    //      Resources res = getNavigator().getRes();
    //      return res.getString("selection.mustSelectOneOrLess");
    //    }
    return null;
  }

  /**
   * adds an item and sorts the list
   */
  public void addItem(Item item) {
    super.addItem(item);
    Collections.sort(items);
  }

  public boolean isSlicer() {
    return true;
  }

}

 	  	 
@


1.4
log
@[ 1501633 ] Calculated members and XML/A (by Bart.Pappyn)
@
text
@d66 3
a68 1
      selection.setMode(SelectionModel.SINGLE_SELECTION);
d108 6
a113 4
    if (selection.size() > 1) {
      Resources res = getNavigator().getRes();
      return res.getString("selection.mustSelectOneOrLess");
    }
@


1.3
log
@synchronized with tonbeller cvs
@
text
@d24 1
d126 2
@


1.2
log
@Fix bug 1566263
Adapted to current Mondrian (Perforce version of today)
@
text
@d67 1
a67 1
    selection.setSelection(item.getSlicerSelection());
@


1.1
log
@initial version
@
text
@d23 1
a23 1
import com.tonbeller.jpivot.olap.model.Dimension;
d42 8
a49 4
    Set slicerDims = OlapUtils.getSlicerDimensions(navi.getOlapModel());
    for (Iterator it = slicerDims.iterator(); it.hasNext();) {
      Dimension dim = (Dimension) it.next();
      HierarchyItem hi = new HierarchyItem(this, dim.getHierarchies()[0]);
d52 1
@

